2019-04-24 08:37:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 8456 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 08:37:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 08:37:03 -The following profiles are active: dev
2019-04-24 08:37:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 08:37:03 CST 2019]; root of context hierarchy
2019-04-24 08:37:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 08:37:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 08:37:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 08:37:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 08:37:24 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 08:37:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 08:37:24 -Starting service [Tomcat]
2019-04-24 08:37:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 08:37:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 08:37:25 -Initializing Spring embedded WebApplicationContext
2019-04-24 08:37:25 -Root WebApplicationContext: initialization completed in 22086 ms
2019-04-24 08:37:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 08:37:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 08:37:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 08:37:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 08:37:27 -Filter xssFilter was not registered (disabled)
2019-04-24 08:37:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 08:37:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 08:37:27 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 08:37:27 -Servlet dispatcherServlet mapped to [/]
2019-04-24 08:37:34 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 08:37:03 CST 2019]; root of context hierarchy
2019-04-24 08:37:37 -Using default implementation for ThreadExecutor
2019-04-24 08:37:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 08:37:37 -Quartz Scheduler v.2.2.1 created.
2019-04-24 08:37:37 -RAMJobStore initialized.
2019-04-24 08:37:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 08:37:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 08:37:37 -Quartz scheduler version: 2.2.1
2019-04-24 08:37:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-04-24 08:37:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 08:37:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 08:37:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 08:37:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 08:37:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 08:37:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 08:37:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 08:37:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 08:37:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 08:37:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 08:37:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 08:37:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 08:37:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 08:37:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 08:37:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 08:37:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 08:37:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 08:37:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 08:37:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 08:37:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 08:37:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 08:37:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 08:37:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 08:37:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 08:37:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 08:37:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 08:37:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 08:37:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 08:37:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 08:37:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 08:37:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 08:37:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 08:37:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 08:37:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 08:37:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 08:37:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 08:37:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 08:37:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 08:37:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 08:37:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 08:37:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 08:37:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 08:37:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 08:37:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 08:37:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 08:37:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 08:37:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 08:37:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 08:37:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 08:37:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 08:37:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 08:37:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 08:37:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 08:37:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 08:37:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 08:37:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 08:37:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 08:37:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 08:37:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 08:37:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 08:37:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 08:37:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 08:37:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 08:37:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 08:37:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 08:37:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 08:37:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 08:37:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 08:37:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 08:37:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 08:37:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 08:37:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 08:37:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 08:37:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 08:37:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 08:37:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 08:37:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 08:37:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 08:37:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 08:37:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 08:37:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 08:37:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 08:37:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 08:37:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 08:37:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 08:37:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 08:37:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 08:37:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 08:37:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 08:37:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 08:37:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 08:37:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 08:37:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 08:37:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 08:37:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 08:37:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 08:37:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 08:37:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 08:37:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 08:37:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 08:37:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 08:37:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 08:37:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 08:37:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 08:37:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 08:37:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 08:37:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 08:37:03 CST 2019]; root of context hierarchy
2019-04-24 08:37:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 08:37:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 08:37:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 08:37:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 08:37:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 08:37:51 -Registering beans for JMX exposure on startup
2019-04-24 08:37:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 08:37:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 08:37:51 -Starting beans in phase 2147483647
2019-04-24 08:37:51 -Context refreshed
2019-04-24 08:37:51 -Found 1 custom documentation plugin(s)
2019-04-24 08:37:52 -Scanning for api listing references
2019-04-24 08:37:53 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 08:37:53 -Generating unique operation named: removeUsingPOST_1
2019-04-24 08:37:53 -Generating unique operation named: addUsingGET_1
2019-04-24 08:37:53 -Generating unique operation named: editUsingGET_1
2019-04-24 08:37:53 -Generating unique operation named: listUsingGET_1
2019-04-24 08:37:53 -Generating unique operation named: removeUsingPOST_2
2019-04-24 08:37:53 -Generating unique operation named: removeUsingPOST_3
2019-04-24 08:37:53 -Generating unique operation named: saveUsingPOST_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingGET_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingPOST_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingPUT_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 08:37:53 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 08:37:54 -Generating unique operation named: addUsingGET_2
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_2
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_2
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_4
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_5
2019-04-24 08:37:54 -Generating unique operation named: saveUsingPOST_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_2
2019-04-24 08:37:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 08:37:54 -Generating unique operation named: addUsingGET_3
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_3
2019-04-24 08:37:54 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_3
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_6
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_7
2019-04-24 08:37:54 -Generating unique operation named: saveUsingPOST_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingGET_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPUT_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 08:37:54 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 08:37:54 -Generating unique operation named: addUsingGET_4
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_4
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_4
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_8
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_9
2019-04-24 08:37:54 -Generating unique operation named: saveUsingPOST_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingGET_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPUT_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 08:37:54 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 08:37:54 -Generating unique operation named: ElecUsingGET_1
2019-04-24 08:37:54 -Generating unique operation named: addUsingGET_5
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_5
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_5
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_10
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_11
2019-04-24 08:37:54 -Generating unique operation named: saveUsingPOST_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingGET_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPUT_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 08:37:54 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_6
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_6
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_6
2019-04-24 08:37:54 -Generating unique operation named: addUsingGET_6
2019-04-24 08:37:54 -Generating unique operation named: editUsingGET_7
2019-04-24 08:37:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 08:37:54 -Generating unique operation named: listUsingGET_7
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_12
2019-04-24 08:37:54 -Generating unique operation named: removeUsingPOST_13
2019-04-24 08:37:54 -Generating unique operation named: saveUsingPOST_6
2019-04-24 08:37:54 -Generating unique operation named: updateUsingGET_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPOST_7
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPUT_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 08:37:54 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 08:37:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_7
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_8
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_8
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_14
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_15
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingGET_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPUT_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 08:37:55 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_8
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_9
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_9
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_16
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_17
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingGET_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_9
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPUT_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 08:37:55 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_9
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_10
2019-04-24 08:37:55 -Generating unique operation named: infoUsingGET_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingPOST_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingPUT_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 08:37:55 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_10
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_18
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_19
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_9
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_10
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_11
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_20
2019-04-24 08:37:55 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_10
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_11
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_12
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_21
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_10
2019-04-24 08:37:55 -Generating unique operation named: treeUsingGET_1
2019-04-24 08:37:55 -Generating unique operation named: treeUsingGET_2
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_11
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_11
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_12
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_13
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_22
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_23
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_11
2019-04-24 08:37:55 -Generating unique operation named: updateUsingGET_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_12
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPUT_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 08:37:55 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 08:37:55 -Generating unique operation named: addUsingGET_12
2019-04-24 08:37:55 -Generating unique operation named: editUsingGET_13
2019-04-24 08:37:55 -Generating unique operation named: listUsingGET_14
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_24
2019-04-24 08:37:55 -Generating unique operation named: removeUsingPOST_25
2019-04-24 08:37:55 -Generating unique operation named: saveUsingPOST_12
2019-04-24 08:37:55 -Generating unique operation named: updateUsingGET_9
2019-04-24 08:37:55 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPOST_13
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPUT_9
2019-04-24 08:37:55 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 08:37:56 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 08:37:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 08:37:56 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 08:37:56 -Generating unique operation named: addUsingGET_13
2019-04-24 08:37:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 08:37:56 -Generating unique operation named: editUsingGET_14
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_15
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_13
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_14
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPOST_14
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_16
2019-04-24 08:37:56 -Generating unique operation named: listUsingHEAD_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingPOST_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingPUT_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingPATCH_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingDELETE_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingTRACE_1
2019-04-24 08:37:56 -Generating unique operation named: countDDUsingGET_1
2019-04-24 08:37:56 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 08:37:56 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 08:37:56 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 08:37:56 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 08:37:56 -Generating unique operation named: addUsingGET_14
2019-04-24 08:37:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 08:37:56 -Generating unique operation named: editUsingGET_15
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_17
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_26
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_15
2019-04-24 08:37:56 -Generating unique operation named: treeUsingGET_3
2019-04-24 08:37:56 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPOST_15
2019-04-24 08:37:56 -Generating unique operation named: addUsingGET_15
2019-04-24 08:37:56 -Generating unique operation named: editUsingGET_16
2019-04-24 08:37:56 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_18
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_27
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_28
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_16
2019-04-24 08:37:56 -Generating unique operation named: updateUsingGET_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPOST_16
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPUT_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 08:37:56 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 08:37:56 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 08:37:56 -Generating unique operation named: addUsingGET_16
2019-04-24 08:37:56 -Generating unique operation named: editUsingGET_17
2019-04-24 08:37:56 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_19
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_29
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_30
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_17
2019-04-24 08:37:56 -Generating unique operation named: updateUsingGET_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPOST_17
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPUT_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 08:37:56 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 08:37:56 -Generating unique operation named: addUsingGET_17
2019-04-24 08:37:56 -Generating unique operation named: editUsingGET_18
2019-04-24 08:37:56 -Generating unique operation named: listUsingGET_20
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_31
2019-04-24 08:37:56 -Generating unique operation named: removeUsingPOST_32
2019-04-24 08:37:56 -Generating unique operation named: saveUsingPOST_18
2019-04-24 08:37:56 -Generating unique operation named: updateUsingGET_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPOST_18
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPUT_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 08:37:56 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 08:37:56 -Starting Quartz Scheduler now
2019-04-24 08:37:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 08:37:56 -Starting...
2019-04-24 08:37:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 08:37:56 -Started.
2019-04-24 08:37:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 08:37:56 -Using a shared selector for servlet write/read
2019-04-24 08:37:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 08:37:56 -Started BootdoApplication in 54.599 seconds (JVM running for 55.707)
2019-04-24 08:37:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 08:37:57 -==> Parameters: 
2019-04-24 08:37:57 -<==      Total: 1
2019-04-24 08:38:44 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-24 08:41:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 08:41:14 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 08:41:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 115 ms
2019-04-24 08:41:15 -Enabling session validation scheduler...
2019-04-24 08:41:15 -请求地址 : http://localhost:8081/login;JSESSIONID=73430766-bf29-4ace-a63d-d608ba123e80
2019-04-24 08:41:15 -HTTP METHOD : GET
2019-04-24 08:41:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 08:41:15 -参数 : [{}]
2019-04-24 08:41:15 -耗时 : 4
2019-04-24 08:41:15 -返回值 : login
2019-04-24 08:41:18 -请求地址 : http://localhost:8081/getVerify
2019-04-24 08:41:18 -HTTP METHOD : GET
2019-04-24 08:41:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 08:41:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ed4556d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43fc3789]
2019-04-24 08:41:29 -8940
2019-04-24 08:41:29 -耗时 : 10807
2019-04-24 08:41:29 -返回值 : null
2019-04-24 08:55:25 -请求地址 : http://localhost:8081/login
2019-04-24 08:55:25 -HTTP METHOD : POST
2019-04-24 08:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 08:55:25 -参数 : [admin, 111111, 8940, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77879078]
2019-04-24 08:55:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 08:55:25 -==> Parameters: admin(String)
2019-04-24 08:55:25 -<==      Total: 1
2019-04-24 08:55:25 -耗时 : 409
2019-04-24 08:55:25 -返回值 : {msg=操作成功, code=0}
2019-04-24 08:55:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 08:55:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 08:55:25 -==> Parameters: 1(Long), admin(String), 登录(String), 409(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 08:55:25.758(Timestamp)
2019-04-24 08:55:25 -<==    Updates: 1
2019-04-24 08:55:25 -请求地址 : http://localhost:8081/index
2019-04-24 08:55:25 -HTTP METHOD : GET
2019-04-24 08:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 08:55:25 -参数 : [{}]
2019-04-24 08:55:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 08:55:26 -==> Parameters: 1(Long)
2019-04-24 08:55:26 -<==      Total: 49
2019-04-24 08:55:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 08:55:26 -==> Parameters: 138(Long)
2019-04-24 08:55:26 -<==      Total: 1
2019-04-24 08:55:26 -耗时 : 462
2019-04-24 08:55:26 -返回值 : index_v1
2019-04-24 08:55:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 08:55:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 462(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 08:55:26.534(Timestamp)
2019-04-24 08:55:26 -<==    Updates: 1
2019-04-24 08:55:26 -请求地址 : http://localhost:8081/main
2019-04-24 08:55:26 -HTTP METHOD : GET
2019-04-24 08:55:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 08:55:26 -参数 : []
2019-04-24 08:55:26 -耗时 : 1
2019-04-24 08:55:26 -返回值 : main
2019-04-24 08:55:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 08:55:28 -HTTP METHOD : GET
2019-04-24 08:55:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 08:55:28 -参数 : []
2019-04-24 08:55:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 08:55:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 08:55:29 -<==      Total: 0
2019-04-24 08:55:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 08:55:29 -==> Parameters: 1(Long), 0(String)
2019-04-24 08:55:29 -<==      Total: 1
2019-04-24 08:55:29 -耗时 : 67
2019-04-24 08:55:29 -返回值 : com.bootdo.common.utils.PageUtils@61b19ab4
2019-04-24 08:55:29 -请求地址 : http://localhost:8081/main
2019-04-24 08:55:29 -HTTP METHOD : GET
2019-04-24 08:55:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 08:55:29 -参数 : []
2019-04-24 08:55:29 -耗时 : 1
2019-04-24 08:55:29 -返回值 : main
2019-04-24 08:55:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 08:55:43 -==> Parameters: 1(Long)
2019-04-24 08:55:43 -<==      Total: 93
2019-04-24 08:55:43 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 08:55:43 -HTTP METHOD : GET
2019-04-24 08:55:43 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 08:55:43 -参数 : []
2019-04-24 08:55:43 -耗时 : 12
2019-04-24 08:55:43 -返回值 : charts/countDD
2019-04-24 08:55:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 08:55:44 -HTTP METHOD : GET
2019-04-24 08:55:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 08:55:44 -参数 : [userType]
2019-04-24 08:55:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 08:55:44 -==> Parameters: userType(String)
2019-04-24 08:55:44 -<==      Total: 4
2019-04-24 08:55:44 -耗时 : 23
2019-04-24 08:55:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 09:08:44 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 191]
2019-04-24 09:14:19 -请求地址 : http://localhost:8081/index
2019-04-24 09:14:19 -HTTP METHOD : GET
2019-04-24 09:14:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 09:14:19 -参数 : [{}]
2019-04-24 09:14:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 09:14:19 -==> Parameters: 1(Long)
2019-04-24 09:14:19 -<==      Total: 49
2019-04-24 09:14:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 09:14:19 -==> Parameters: 138(Long)
2019-04-24 09:14:19 -<==      Total: 1
2019-04-24 09:14:19 -耗时 : 111
2019-04-24 09:14:19 -返回值 : index_v1
2019-04-24 09:14:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 09:14:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 111(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 09:14:19.581(Timestamp)
2019-04-24 09:14:20 -<==    Updates: 1
2019-04-24 09:14:21 -请求地址 : http://localhost:8081/main
2019-04-24 09:14:21 -HTTP METHOD : GET
2019-04-24 09:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 09:14:21 -参数 : []
2019-04-24 09:14:21 -耗时 : 1
2019-04-24 09:14:21 -返回值 : main
2019-04-24 09:14:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 09:14:22 -HTTP METHOD : GET
2019-04-24 09:14:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 09:14:22 -参数 : []
2019-04-24 09:14:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 09:14:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 09:14:22 -<==      Total: 0
2019-04-24 09:14:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 09:14:22 -==> Parameters: 1(Long), 0(String)
2019-04-24 09:14:22 -<==      Total: 1
2019-04-24 09:14:22 -耗时 : 29
2019-04-24 09:14:22 -返回值 : com.bootdo.common.utils.PageUtils@43fa559c
2019-04-24 09:14:23 -请求地址 : http://localhost:8081/main
2019-04-24 09:14:23 -HTTP METHOD : GET
2019-04-24 09:14:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 09:14:23 -参数 : []
2019-04-24 09:14:23 -耗时 : 1
2019-04-24 09:14:23 -返回值 : main
2019-04-24 09:18:20 -请求地址 : http://localhost:8081/index
2019-04-24 09:18:20 -HTTP METHOD : GET
2019-04-24 09:18:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 09:18:20 -参数 : [{}]
2019-04-24 09:18:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 09:18:20 -==> Parameters: 1(Long)
2019-04-24 09:18:21 -<==      Total: 49
2019-04-24 09:18:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 09:18:21 -==> Parameters: 138(Long)
2019-04-24 09:18:21 -<==      Total: 1
2019-04-24 09:18:21 -耗时 : 95
2019-04-24 09:18:21 -返回值 : index_v1
2019-04-24 09:18:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 09:18:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 95(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 09:18:21.064(Timestamp)
2019-04-24 09:18:21 -<==    Updates: 1
2019-04-24 09:18:21 -请求地址 : http://localhost:8081/main
2019-04-24 09:18:21 -HTTP METHOD : GET
2019-04-24 09:18:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 09:18:21 -参数 : []
2019-04-24 09:18:21 -耗时 : 4
2019-04-24 09:18:21 -返回值 : main
2019-04-24 09:18:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 09:18:21 -HTTP METHOD : GET
2019-04-24 09:18:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 09:18:21 -参数 : []
2019-04-24 09:18:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 09:18:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 09:18:21 -<==      Total: 0
2019-04-24 09:18:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 09:18:21 -==> Parameters: 1(Long), 0(String)
2019-04-24 09:18:21 -<==      Total: 1
2019-04-24 09:18:21 -耗时 : 38
2019-04-24 09:18:21 -返回值 : com.bootdo.common.utils.PageUtils@3f65dbd
2019-04-24 09:18:21 -请求地址 : http://localhost:8081/main
2019-04-24 09:18:21 -HTTP METHOD : GET
2019-04-24 09:18:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 09:18:21 -参数 : []
2019-04-24 09:18:21 -耗时 : 1
2019-04-24 09:18:21 -返回值 : main
2019-04-24 09:18:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 09:18:26 -==> Parameters: 1(Long)
2019-04-24 09:18:26 -<==      Total: 93
2019-04-24 09:18:26 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 09:18:26 -HTTP METHOD : GET
2019-04-24 09:18:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 09:18:26 -参数 : []
2019-04-24 09:18:26 -耗时 : 12
2019-04-24 09:18:26 -返回值 : charts/tableElecMM
2019-04-24 09:18:27 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 09:18:27 -HTTP METHOD : GET
2019-04-24 09:18:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 09:18:27 -参数 : []
2019-04-24 09:18:27 -耗时 : 14
2019-04-24 09:18:27 -返回值 : charts/tableDD
2019-04-24 09:18:51 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 09:19:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 14112 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 09:19:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 09:19:44 -The following profiles are active: dev
2019-04-24 09:19:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:19:44 CST 2019]; root of context hierarchy
2019-04-24 09:19:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 09:19:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 09:19:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 09:19:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:19:54 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 09:19:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 09:19:54 -Starting service [Tomcat]
2019-04-24 09:19:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 09:19:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 09:19:55 -Initializing Spring embedded WebApplicationContext
2019-04-24 09:19:55 -Root WebApplicationContext: initialization completed in 10445 ms
2019-04-24 09:19:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 09:19:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 09:19:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 09:19:55 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 09:19:55 -Filter xssFilter was not registered (disabled)
2019-04-24 09:19:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 09:19:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 09:19:55 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 09:19:55 -Servlet dispatcherServlet mapped to [/]
2019-04-24 09:19:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:19:44 CST 2019]; root of context hierarchy
2019-04-24 09:20:00 -Using default implementation for ThreadExecutor
2019-04-24 09:20:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 09:20:00 -Quartz Scheduler v.2.2.1 created.
2019-04-24 09:20:00 -RAMJobStore initialized.
2019-04-24 09:20:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 09:20:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 09:20:00 -Quartz scheduler version: 2.2.1
2019-04-24 09:20:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6009cd34
2019-04-24 09:20:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 09:20:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 09:20:04 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 09:20:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 09:20:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 09:20:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 09:20:04 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 09:20:04 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 09:20:04 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 09:20:04 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 09:20:04 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 09:20:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 09:20:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 09:20:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 09:20:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 09:20:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 09:20:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 09:20:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:20:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 09:20:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:20:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 09:20:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 09:20:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 09:20:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 09:20:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 09:20:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 09:20:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 09:20:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 09:20:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 09:20:04 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 09:20:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 09:20:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 09:20:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 09:20:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 09:20:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 09:20:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 09:20:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:20:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:20:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 09:20:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 09:20:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 09:20:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 09:20:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:04 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:04 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 09:20:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:20:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 09:20:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 09:20:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 09:20:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 09:20:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 09:20:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 09:20:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 09:20:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 09:20:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 09:20:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 09:20:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 09:20:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 09:20:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 09:20:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 09:20:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 09:20:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 09:20:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 09:20:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 09:20:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 09:20:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 09:20:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 09:20:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 09:20:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 09:20:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 09:20:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:20:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:20:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 09:20:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 09:20:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 09:20:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 09:20:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 09:20:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 09:20:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 09:20:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 09:20:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:20:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 09:20:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 09:20:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 09:20:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 09:20:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 09:20:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 09:20:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:19:44 CST 2019]; root of context hierarchy
2019-04-24 09:20:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 09:20:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 09:20:09 -Registering beans for JMX exposure on startup
2019-04-24 09:20:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 09:20:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 09:20:09 -Starting beans in phase 2147483647
2019-04-24 09:20:09 -Context refreshed
2019-04-24 09:20:09 -Found 1 custom documentation plugin(s)
2019-04-24 09:20:09 -Scanning for api listing references
2019-04-24 09:20:10 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_1
2019-04-24 09:20:10 -Generating unique operation named: addUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: editUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: listUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_2
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_3
2019-04-24 09:20:10 -Generating unique operation named: saveUsingPOST_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPOST_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPUT_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 09:20:10 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 09:20:10 -Generating unique operation named: addUsingGET_2
2019-04-24 09:20:10 -Generating unique operation named: editUsingGET_2
2019-04-24 09:20:10 -Generating unique operation named: listUsingGET_2
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_4
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_5
2019-04-24 09:20:10 -Generating unique operation named: saveUsingPOST_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPOST_2
2019-04-24 09:20:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: addUsingGET_3
2019-04-24 09:20:10 -Generating unique operation named: editUsingGET_3
2019-04-24 09:20:10 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: listUsingGET_3
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_6
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_7
2019-04-24 09:20:10 -Generating unique operation named: saveUsingPOST_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingGET_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPOST_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPUT_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 09:20:10 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 09:20:10 -Generating unique operation named: addUsingGET_4
2019-04-24 09:20:10 -Generating unique operation named: editUsingGET_4
2019-04-24 09:20:10 -Generating unique operation named: listUsingGET_4
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_8
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_9
2019-04-24 09:20:10 -Generating unique operation named: saveUsingPOST_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingGET_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPOST_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPUT_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 09:20:10 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 09:20:10 -Generating unique operation named: ElecUsingGET_1
2019-04-24 09:20:10 -Generating unique operation named: addUsingGET_5
2019-04-24 09:20:10 -Generating unique operation named: editUsingGET_5
2019-04-24 09:20:10 -Generating unique operation named: listUsingGET_5
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_10
2019-04-24 09:20:10 -Generating unique operation named: removeUsingPOST_11
2019-04-24 09:20:10 -Generating unique operation named: saveUsingPOST_5
2019-04-24 09:20:10 -Generating unique operation named: updateUsingGET_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPOST_5
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPUT_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 09:20:10 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_6
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_6
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_6
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_7
2019-04-24 09:20:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_7
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_12
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_13
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingGET_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPUT_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 09:20:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_7
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_8
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_8
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_14
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_15
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingGET_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPUT_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_8
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_9
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_9
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_16
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_17
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingGET_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPUT_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_9
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_10
2019-04-24 09:20:11 -Generating unique operation named: infoUsingGET_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingPOST_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingPUT_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 09:20:11 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_10
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_18
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_19
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_10
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_11
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_20
2019-04-24 09:20:11 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_10
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_11
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_12
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_21
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_10
2019-04-24 09:20:11 -Generating unique operation named: treeUsingGET_1
2019-04-24 09:20:11 -Generating unique operation named: treeUsingGET_2
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_11
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_11
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_12
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_13
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_22
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_23
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_11
2019-04-24 09:20:11 -Generating unique operation named: updateUsingGET_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_12
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPUT_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_12
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_13
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_14
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_24
2019-04-24 09:20:11 -Generating unique operation named: removeUsingPOST_25
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_12
2019-04-24 09:20:11 -Generating unique operation named: updateUsingGET_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_13
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPUT_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 09:20:11 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 09:20:11 -Generating unique operation named: addUsingGET_13
2019-04-24 09:20:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 09:20:11 -Generating unique operation named: editUsingGET_14
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_15
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_13
2019-04-24 09:20:11 -Generating unique operation named: saveUsingPOST_14
2019-04-24 09:20:11 -Generating unique operation named: updateUsingPOST_14
2019-04-24 09:20:11 -Generating unique operation named: listUsingGET_16
2019-04-24 09:20:11 -Generating unique operation named: listUsingHEAD_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingPOST_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingPUT_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingPATCH_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingDELETE_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 09:20:11 -Generating unique operation named: listUsingTRACE_1
2019-04-24 09:20:11 -Generating unique operation named: countDDUsingGET_1
2019-04-24 09:20:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 09:20:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 09:20:12 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 09:20:12 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 09:20:12 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 09:20:12 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 09:20:12 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 09:20:12 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 09:20:12 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 09:20:12 -Generating unique operation named: addUsingGET_14
2019-04-24 09:20:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 09:20:12 -Generating unique operation named: editUsingGET_15
2019-04-24 09:20:12 -Generating unique operation named: listUsingGET_17
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_26
2019-04-24 09:20:12 -Generating unique operation named: saveUsingPOST_15
2019-04-24 09:20:12 -Generating unique operation named: treeUsingGET_3
2019-04-24 09:20:12 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPOST_15
2019-04-24 09:20:12 -Generating unique operation named: addUsingGET_15
2019-04-24 09:20:12 -Generating unique operation named: editUsingGET_16
2019-04-24 09:20:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 09:20:12 -Generating unique operation named: listUsingGET_18
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_27
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_28
2019-04-24 09:20:12 -Generating unique operation named: saveUsingPOST_16
2019-04-24 09:20:12 -Generating unique operation named: updateUsingGET_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPOST_16
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPUT_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 09:20:12 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 09:20:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 09:20:12 -Generating unique operation named: addUsingGET_16
2019-04-24 09:20:12 -Generating unique operation named: editUsingGET_17
2019-04-24 09:20:12 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 09:20:12 -Generating unique operation named: listUsingGET_19
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_29
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_30
2019-04-24 09:20:12 -Generating unique operation named: saveUsingPOST_17
2019-04-24 09:20:12 -Generating unique operation named: updateUsingGET_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPOST_17
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPUT_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 09:20:12 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 09:20:12 -Generating unique operation named: addUsingGET_17
2019-04-24 09:20:12 -Generating unique operation named: editUsingGET_18
2019-04-24 09:20:12 -Generating unique operation named: listUsingGET_20
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_31
2019-04-24 09:20:12 -Generating unique operation named: removeUsingPOST_32
2019-04-24 09:20:12 -Generating unique operation named: saveUsingPOST_18
2019-04-24 09:20:12 -Generating unique operation named: updateUsingGET_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPOST_18
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPUT_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 09:20:12 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 09:20:12 -Starting Quartz Scheduler now
2019-04-24 09:20:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 09:20:12 -Starting...
2019-04-24 09:20:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 09:20:12 -Started.
2019-04-24 09:20:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 09:20:12 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-24 09:20:12 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-24 09:20:12 -Stopping service [Tomcat]
2019-04-24 09:20:12 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-24 09:20:12 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-24 09:20:12 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-24 09:20:12 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-24 09:20:12 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-24 09:20:12 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:19:44 CST 2019]; root of context hierarchy
2019-04-24 09:20:12 -Stopping beans in phase 2147483647
2019-04-24 09:20:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-24 09:20:12 -Stopping...
2019-04-24 09:20:12 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 09:20:12 -Stopped.
2019-04-24 09:20:12 -Unregistering JMX-exposed beans on shutdown
2019-04-24 09:20:12 -Unregistering JMX-exposed beans
2019-04-24 09:20:12 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-24 09:20:12 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-24 09:20:12 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-24 09:20:12 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-24 09:20:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-24 09:20:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-24 09:20:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-24 09:20:12 -Shutting down Quartz Scheduler
2019-04-24 09:20:43 -Starting BootdoApplication on ZJZL-20180906VX with PID 7248 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 09:20:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 09:20:43 -The following profiles are active: dev
2019-04-24 09:20:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:20:43 CST 2019]; root of context hierarchy
2019-04-24 09:20:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 09:20:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 09:20:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 09:20:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:20:49 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 09:20:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 09:20:49 -Starting service [Tomcat]
2019-04-24 09:20:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 09:20:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 09:20:50 -Initializing Spring embedded WebApplicationContext
2019-04-24 09:20:50 -Root WebApplicationContext: initialization completed in 6835 ms
2019-04-24 09:20:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 09:20:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 09:20:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 09:20:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 09:20:50 -Filter xssFilter was not registered (disabled)
2019-04-24 09:20:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 09:20:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 09:20:50 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 09:20:50 -Servlet dispatcherServlet mapped to [/]
2019-04-24 09:20:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:20:43 CST 2019]; root of context hierarchy
2019-04-24 09:20:53 -Using default implementation for ThreadExecutor
2019-04-24 09:20:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 09:20:53 -Quartz Scheduler v.2.2.1 created.
2019-04-24 09:20:53 -RAMJobStore initialized.
2019-04-24 09:20:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 09:20:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 09:20:53 -Quartz scheduler version: 2.2.1
2019-04-24 09:20:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-04-24 09:20:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 09:20:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 09:20:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 09:20:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 09:20:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 09:20:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 09:20:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 09:20:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 09:20:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 09:20:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 09:20:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 09:20:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 09:20:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 09:20:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 09:20:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 09:20:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 09:20:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 09:20:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 09:20:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:20:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 09:20:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:20:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 09:20:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 09:20:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 09:20:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 09:20:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 09:20:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 09:20:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 09:20:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 09:20:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 09:20:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 09:20:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 09:20:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 09:20:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 09:20:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 09:20:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 09:20:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 09:20:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 09:20:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:20:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:20:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 09:20:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 09:20:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 09:20:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 09:20:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 09:20:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:20:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 09:20:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 09:20:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 09:20:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 09:20:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 09:20:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 09:20:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 09:20:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 09:20:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 09:20:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 09:20:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 09:20:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 09:20:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 09:20:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 09:20:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 09:20:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 09:20:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 09:20:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 09:20:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 09:20:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 09:20:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 09:20:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 09:20:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 09:20:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 09:20:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 09:20:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 09:20:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 09:20:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 09:20:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 09:20:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 09:20:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 09:20:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:20:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 09:20:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 09:20:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:20:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:20:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 09:20:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 09:20:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 09:20:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 09:20:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 09:20:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 09:20:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 09:20:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 09:20:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:20:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 09:20:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 09:20:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:20:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:20:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 09:20:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:20:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 09:20:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 09:20:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 09:20:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 09:20:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 09:20:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 09:20:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:20:43 CST 2019]; root of context hierarchy
2019-04-24 09:20:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:20:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 09:20:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 09:21:00 -Registering beans for JMX exposure on startup
2019-04-24 09:21:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 09:21:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 09:21:00 -Starting beans in phase 2147483647
2019-04-24 09:21:00 -Context refreshed
2019-04-24 09:21:00 -Found 1 custom documentation plugin(s)
2019-04-24 09:21:00 -Scanning for api listing references
2019-04-24 09:21:00 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 09:21:00 -Generating unique operation named: removeUsingPOST_1
2019-04-24 09:21:00 -Generating unique operation named: addUsingGET_1
2019-04-24 09:21:00 -Generating unique operation named: editUsingGET_1
2019-04-24 09:21:00 -Generating unique operation named: listUsingGET_1
2019-04-24 09:21:00 -Generating unique operation named: removeUsingPOST_2
2019-04-24 09:21:00 -Generating unique operation named: removeUsingPOST_3
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_2
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_2
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_2
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_4
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_5
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_2
2019-04-24 09:21:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_3
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_3
2019-04-24 09:21:01 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_3
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_6
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_7
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_4
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_4
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_4
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_8
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_9
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 09:21:01 -Generating unique operation named: ElecUsingGET_1
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_5
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_5
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_5
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_10
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_11
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_6
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_6
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_6
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_7
2019-04-24 09:21:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_7
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_12
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_13
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 09:21:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_7
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_8
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_8
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_14
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_15
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_8
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_8
2019-04-24 09:21:01 -Generating unique operation named: editUsingGET_9
2019-04-24 09:21:01 -Generating unique operation named: listUsingGET_9
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_16
2019-04-24 09:21:01 -Generating unique operation named: removeUsingPOST_17
2019-04-24 09:21:01 -Generating unique operation named: saveUsingPOST_8
2019-04-24 09:21:01 -Generating unique operation named: updateUsingGET_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPOST_9
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPUT_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 09:21:01 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 09:21:01 -Generating unique operation named: addUsingGET_9
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_10
2019-04-24 09:21:02 -Generating unique operation named: infoUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingPOST_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingPUT_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 09:21:02 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_10
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_18
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_19
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_10
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_11
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_20
2019-04-24 09:21:02 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_10
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_11
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_12
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_21
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_10
2019-04-24 09:21:02 -Generating unique operation named: treeUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: treeUsingGET_2
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_11
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_11
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_12
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_13
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_22
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_23
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingGET_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPUT_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 09:21:02 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_12
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_13
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_14
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_24
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_25
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingGET_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_13
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPUT_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 09:21:02 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_13
2019-04-24 09:21:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_14
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_15
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_13
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_14
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_14
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_16
2019-04-24 09:21:02 -Generating unique operation named: listUsingHEAD_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingPOST_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingPUT_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingPATCH_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingDELETE_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingTRACE_1
2019-04-24 09:21:02 -Generating unique operation named: countDDUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 09:21:02 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 09:21:02 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 09:21:02 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_14
2019-04-24 09:21:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_15
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_17
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_26
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_15
2019-04-24 09:21:02 -Generating unique operation named: treeUsingGET_3
2019-04-24 09:21:02 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_15
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_15
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_16
2019-04-24 09:21:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_18
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_27
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_28
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_16
2019-04-24 09:21:02 -Generating unique operation named: updateUsingGET_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_16
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPUT_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 09:21:02 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 09:21:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_16
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_17
2019-04-24 09:21:02 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_19
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_29
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_30
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_17
2019-04-24 09:21:02 -Generating unique operation named: updateUsingGET_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_17
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPUT_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 09:21:02 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 09:21:02 -Generating unique operation named: addUsingGET_17
2019-04-24 09:21:02 -Generating unique operation named: editUsingGET_18
2019-04-24 09:21:02 -Generating unique operation named: listUsingGET_20
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_31
2019-04-24 09:21:02 -Generating unique operation named: removeUsingPOST_32
2019-04-24 09:21:02 -Generating unique operation named: saveUsingPOST_18
2019-04-24 09:21:02 -Generating unique operation named: updateUsingGET_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPOST_18
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPUT_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 09:21:02 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 09:21:03 -Starting Quartz Scheduler now
2019-04-24 09:21:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 09:21:03 -Starting...
2019-04-24 09:21:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 09:21:03 -Started.
2019-04-24 09:21:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 09:21:03 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-24 09:21:03 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-24 09:21:03 -Stopping service [Tomcat]
2019-04-24 09:21:03 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-24 09:21:03 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-24 09:21:03 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-24 09:21:03 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-24 09:21:03 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-24 09:21:03 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:20:43 CST 2019]; root of context hierarchy
2019-04-24 09:21:03 -Stopping beans in phase 2147483647
2019-04-24 09:21:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-24 09:21:03 -Stopping...
2019-04-24 09:21:03 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 09:21:03 -Stopped.
2019-04-24 09:21:03 -Unregistering JMX-exposed beans on shutdown
2019-04-24 09:21:03 -Unregistering JMX-exposed beans
2019-04-24 09:21:03 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-24 09:21:03 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-24 09:21:03 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-24 09:21:03 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-24 09:21:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-24 09:21:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-24 09:21:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-24 09:21:03 -Shutting down Quartz Scheduler
2019-04-24 09:26:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 6812 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 09:26:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 09:26:08 -The following profiles are active: dev
2019-04-24 09:26:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:26:09 CST 2019]; root of context hierarchy
2019-04-24 09:26:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 09:26:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 09:26:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 09:26:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 09:26:15 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 09:26:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 09:26:15 -Starting service [Tomcat]
2019-04-24 09:26:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 09:26:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 09:26:15 -Initializing Spring embedded WebApplicationContext
2019-04-24 09:26:15 -Root WebApplicationContext: initialization completed in 6864 ms
2019-04-24 09:26:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 09:26:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 09:26:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 09:26:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 09:26:16 -Filter xssFilter was not registered (disabled)
2019-04-24 09:26:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 09:26:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 09:26:16 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 09:26:16 -Servlet dispatcherServlet mapped to [/]
2019-04-24 09:26:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:26:09 CST 2019]; root of context hierarchy
2019-04-24 09:26:19 -Using default implementation for ThreadExecutor
2019-04-24 09:26:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 09:26:19 -Quartz Scheduler v.2.2.1 created.
2019-04-24 09:26:19 -RAMJobStore initialized.
2019-04-24 09:26:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 09:26:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 09:26:19 -Quartz scheduler version: 2.2.1
2019-04-24 09:26:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-24 09:26:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 09:26:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 09:26:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 09:26:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 09:26:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 09:26:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 09:26:23 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 09:26:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 09:26:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 09:26:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 09:26:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 09:26:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 09:26:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 09:26:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 09:26:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 09:26:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 09:26:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:26:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 09:26:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 09:26:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 09:26:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 09:26:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 09:26:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 09:26:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 09:26:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 09:26:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 09:26:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 09:26:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 09:26:23 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 09:26:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 09:26:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 09:26:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 09:26:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 09:26:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 09:26:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 09:26:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 09:26:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:26:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 09:26:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 09:26:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 09:26:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 09:26:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 09:26:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:26:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:26:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 09:26:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 09:26:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 09:26:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 09:26:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 09:26:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 09:26:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 09:26:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 09:26:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 09:26:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 09:26:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 09:26:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 09:26:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 09:26:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 09:26:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 09:26:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 09:26:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 09:26:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 09:26:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 09:26:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 09:26:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 09:26:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 09:26:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 09:26:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 09:26:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 09:26:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 09:26:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 09:26:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 09:26:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 09:26:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:26:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 09:26:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 09:26:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 09:26:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 09:26:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 09:26:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 09:26:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 09:26:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 09:26:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 09:26:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 09:26:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 09:26:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 09:26:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 09:26:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 09:26:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 09:26:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 09:26:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 09:26:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 09:26:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:26:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 09:26:09 CST 2019]; root of context hierarchy
2019-04-24 09:26:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:26:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:26:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 09:26:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 09:26:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 09:26:27 -Registering beans for JMX exposure on startup
2019-04-24 09:26:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 09:26:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 09:26:27 -Starting beans in phase 2147483647
2019-04-24 09:26:27 -Context refreshed
2019-04-24 09:26:27 -Found 1 custom documentation plugin(s)
2019-04-24 09:26:27 -Scanning for api listing references
2019-04-24 09:26:27 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 09:26:27 -Generating unique operation named: removeUsingPOST_1
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_2
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_3
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPUT_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 09:26:28 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_2
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_2
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_2
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_4
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_5
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_2
2019-04-24 09:26:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_3
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_3
2019-04-24 09:26:28 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_3
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_6
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_7
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingGET_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPUT_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 09:26:28 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_4
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_4
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_4
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_8
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_9
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingGET_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPUT_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 09:26:28 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 09:26:28 -Generating unique operation named: ElecUsingGET_1
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_5
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_5
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_5
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_10
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_11
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingGET_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPUT_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 09:26:28 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_6
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_6
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_6
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_6
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_7
2019-04-24 09:26:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 09:26:28 -Generating unique operation named: listUsingGET_7
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_12
2019-04-24 09:26:28 -Generating unique operation named: removeUsingPOST_13
2019-04-24 09:26:28 -Generating unique operation named: saveUsingPOST_6
2019-04-24 09:26:28 -Generating unique operation named: updateUsingGET_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPOST_7
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPUT_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 09:26:28 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 09:26:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 09:26:28 -Generating unique operation named: addUsingGET_7
2019-04-24 09:26:28 -Generating unique operation named: editUsingGET_8
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_8
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_14
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_15
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingGET_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPUT_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 09:26:29 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_8
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_9
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_9
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_16
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_17
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingGET_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPUT_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 09:26:29 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_9
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_10
2019-04-24 09:26:29 -Generating unique operation named: infoUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingPOST_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingPUT_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 09:26:29 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_10
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_18
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_19
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_10
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_11
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_20
2019-04-24 09:26:29 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_10
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_11
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_12
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_21
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_10
2019-04-24 09:26:29 -Generating unique operation named: treeUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: treeUsingGET_2
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_11
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_11
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_12
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_13
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_22
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_23
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_11
2019-04-24 09:26:29 -Generating unique operation named: updateUsingGET_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_12
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPUT_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 09:26:29 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_12
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_13
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_14
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_24
2019-04-24 09:26:29 -Generating unique operation named: removeUsingPOST_25
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_12
2019-04-24 09:26:29 -Generating unique operation named: updateUsingGET_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_13
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPUT_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 09:26:29 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_13
2019-04-24 09:26:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_14
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_15
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_13
2019-04-24 09:26:29 -Generating unique operation named: saveUsingPOST_14
2019-04-24 09:26:29 -Generating unique operation named: updateUsingPOST_14
2019-04-24 09:26:29 -Generating unique operation named: listUsingGET_16
2019-04-24 09:26:29 -Generating unique operation named: listUsingHEAD_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingPOST_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingPUT_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingPATCH_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingDELETE_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 09:26:29 -Generating unique operation named: listUsingTRACE_1
2019-04-24 09:26:29 -Generating unique operation named: countDDUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 09:26:29 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 09:26:29 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 09:26:29 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 09:26:29 -Generating unique operation named: addUsingGET_14
2019-04-24 09:26:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 09:26:29 -Generating unique operation named: editUsingGET_15
2019-04-24 09:26:30 -Generating unique operation named: listUsingGET_17
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_26
2019-04-24 09:26:30 -Generating unique operation named: saveUsingPOST_15
2019-04-24 09:26:30 -Generating unique operation named: treeUsingGET_3
2019-04-24 09:26:30 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPOST_15
2019-04-24 09:26:30 -Generating unique operation named: addUsingGET_15
2019-04-24 09:26:30 -Generating unique operation named: editUsingGET_16
2019-04-24 09:26:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 09:26:30 -Generating unique operation named: listUsingGET_18
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_27
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_28
2019-04-24 09:26:30 -Generating unique operation named: saveUsingPOST_16
2019-04-24 09:26:30 -Generating unique operation named: updateUsingGET_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPOST_16
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPUT_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 09:26:30 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 09:26:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 09:26:30 -Generating unique operation named: addUsingGET_16
2019-04-24 09:26:30 -Generating unique operation named: editUsingGET_17
2019-04-24 09:26:30 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 09:26:30 -Generating unique operation named: listUsingGET_19
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_29
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_30
2019-04-24 09:26:30 -Generating unique operation named: saveUsingPOST_17
2019-04-24 09:26:30 -Generating unique operation named: updateUsingGET_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPOST_17
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPUT_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 09:26:30 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 09:26:30 -Generating unique operation named: addUsingGET_17
2019-04-24 09:26:30 -Generating unique operation named: editUsingGET_18
2019-04-24 09:26:30 -Generating unique operation named: listUsingGET_20
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_31
2019-04-24 09:26:30 -Generating unique operation named: removeUsingPOST_32
2019-04-24 09:26:30 -Generating unique operation named: saveUsingPOST_18
2019-04-24 09:26:30 -Generating unique operation named: updateUsingGET_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPOST_18
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPUT_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 09:26:30 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 09:26:30 -Starting Quartz Scheduler now
2019-04-24 09:26:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 09:26:30 -Starting...
2019-04-24 09:26:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 09:26:30 -Started.
2019-04-24 09:26:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 09:26:30 -Using a shared selector for servlet write/read
2019-04-24 09:26:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 09:26:30 -Started BootdoApplication in 22.711 seconds (JVM running for 23.521)
2019-04-24 09:26:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 09:26:31 -==> Parameters: 
2019-04-24 09:26:31 -<==      Total: 1
2019-04-24 09:27:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-24 09:57:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-04-24 10:00:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 10:00:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 10:00:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 177 ms
2019-04-24 10:00:35 -Enabling session validation scheduler...
2019-04-24 10:00:35 -请求地址 : http://localhost:8081/login;JSESSIONID=dad11bfb-e481-4373-9cd4-3471dfaf14a6
2019-04-24 10:00:35 -HTTP METHOD : GET
2019-04-24 10:00:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:00:35 -参数 : [{}]
2019-04-24 10:00:35 -耗时 : 4
2019-04-24 10:00:35 -返回值 : login
2019-04-24 10:00:36 -请求地址 : http://localhost:8081/login;JSESSIONID=dad11bfb-e481-4373-9cd4-3471dfaf14a6
2019-04-24 10:00:36 -HTTP METHOD : GET
2019-04-24 10:00:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:00:36 -参数 : [{}]
2019-04-24 10:00:36 -耗时 : 0
2019-04-24 10:00:36 -返回值 : login
2019-04-24 10:00:37 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:00:37 -HTTP METHOD : GET
2019-04-24 10:00:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:00:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@fa0ed84, org.apache.shiro.web.servlet.ShiroHttpServletResponse@244d87e5]
2019-04-24 10:00:37 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:00:37 -HTTP METHOD : GET
2019-04-24 10:00:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:00:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7768c83e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ae727d7]
2019-04-24 10:00:51 -5920
2019-04-24 10:00:51 -2902
2019-04-24 10:00:51 -耗时 : 14162
2019-04-24 10:00:51 -返回值 : null
2019-04-24 10:00:51 -耗时 : 14539
2019-04-24 10:00:51 -返回值 : null
2019-04-24 10:00:51 -请求地址 : http://localhost:8081/login
2019-04-24 10:00:51 -HTTP METHOD : GET
2019-04-24 10:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:00:51 -参数 : [{}]
2019-04-24 10:00:51 -耗时 : 0
2019-04-24 10:00:51 -返回值 : login
2019-04-24 10:00:57 -请求地址 : http://localhost:8081/login
2019-04-24 10:00:57 -HTTP METHOD : POST
2019-04-24 10:00:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:00:57 -参数 : [admin, 111111, 5920, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a99009a]
2019-04-24 10:00:57 -耗时 : 10
2019-04-24 10:00:57 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-24 10:00:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 10:00:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:00:57 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:00:57.83(Timestamp)
2019-04-24 10:00:58 -<==    Updates: 1
2019-04-24 10:01:05 -请求地址 : http://localhost:8081/login
2019-04-24 10:01:05 -HTTP METHOD : POST
2019-04-24 10:01:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:01:05 -参数 : [admin, 111111, 5920, org.apache.shiro.web.servlet.ShiroHttpServletRequest@29f036fe]
2019-04-24 10:01:05 -耗时 : 1
2019-04-24 10:01:05 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-24 10:01:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:01:05 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:01:05.402(Timestamp)
2019-04-24 10:01:05 -<==    Updates: 1
2019-04-24 10:01:06 -请求地址 : http://localhost:8081/login
2019-04-24 10:01:06 -HTTP METHOD : POST
2019-04-24 10:01:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:01:06 -参数 : [admin, 111111, 5920, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e26f3c4]
2019-04-24 10:01:06 -耗时 : 1
2019-04-24 10:01:06 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-24 10:01:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:01:06 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:01:06.208(Timestamp)
2019-04-24 10:01:06 -<==    Updates: 1
2019-04-24 10:01:08 -请求地址 : http://localhost:8081/login;JSESSIONID=dad11bfb-e481-4373-9cd4-3471dfaf14a6
2019-04-24 10:01:08 -HTTP METHOD : GET
2019-04-24 10:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:01:08 -参数 : [{}]
2019-04-24 10:01:08 -耗时 : 1
2019-04-24 10:01:08 -返回值 : login
2019-04-24 10:01:08 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:01:08 -HTTP METHOD : GET
2019-04-24 10:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:01:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1488d197, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ed7c111]
2019-04-24 10:01:08 -0669
2019-04-24 10:01:08 -耗时 : 14
2019-04-24 10:01:08 -返回值 : null
2019-04-24 10:01:08 -请求地址 : http://localhost:8081/login
2019-04-24 10:01:08 -HTTP METHOD : GET
2019-04-24 10:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:01:08 -参数 : [{}]
2019-04-24 10:01:08 -耗时 : 1
2019-04-24 10:01:08 -返回值 : login
2019-04-24 10:01:14 -请求地址 : http://localhost:8081/login
2019-04-24 10:01:14 -HTTP METHOD : POST
2019-04-24 10:01:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:01:14 -参数 : [admin, 111111, 0669, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c21d6da]
2019-04-24 10:01:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 10:01:14 -==> Parameters: admin(String)
2019-04-24 10:01:14 -<==      Total: 1
2019-04-24 10:01:14 -耗时 : 348
2019-04-24 10:01:14 -返回值 : {msg=操作成功, code=0}
2019-04-24 10:01:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:01:14 -==> Parameters: 1(Long), admin(String), 登录(String), 348(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:01:14.831(Timestamp)
2019-04-24 10:01:14 -请求地址 : http://localhost:8081/index
2019-04-24 10:01:14 -HTTP METHOD : GET
2019-04-24 10:01:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:01:14 -参数 : [{}]
2019-04-24 10:01:14 -<==    Updates: 1
2019-04-24 10:01:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:01:15 -==> Parameters: 1(Long)
2019-04-24 10:01:15 -<==      Total: 49
2019-04-24 10:01:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:01:15 -==> Parameters: 138(Long)
2019-04-24 10:01:15 -<==      Total: 1
2019-04-24 10:01:15 -耗时 : 496
2019-04-24 10:01:15 -返回值 : index_v1
2019-04-24 10:01:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:01:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 496(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:01:15.502(Timestamp)
2019-04-24 10:01:15 -<==    Updates: 1
2019-04-24 10:01:15 -请求地址 : http://localhost:8081/main
2019-04-24 10:01:15 -HTTP METHOD : GET
2019-04-24 10:01:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:01:15 -参数 : []
2019-04-24 10:01:15 -耗时 : 1
2019-04-24 10:01:15 -返回值 : main
2019-04-24 10:01:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:01:16 -HTTP METHOD : GET
2019-04-24 10:01:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:01:16 -参数 : []
2019-04-24 10:01:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:01:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:01:16 -<==      Total: 0
2019-04-24 10:01:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:01:16 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:01:16 -<==      Total: 1
2019-04-24 10:01:16 -耗时 : 160
2019-04-24 10:01:16 -返回值 : com.bootdo.common.utils.PageUtils@3d8b5c84
2019-04-24 10:01:16 -请求地址 : http://localhost:8081/main
2019-04-24 10:01:16 -HTTP METHOD : GET
2019-04-24 10:01:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:01:16 -参数 : []
2019-04-24 10:01:16 -耗时 : 1
2019-04-24 10:01:16 -返回值 : main
2019-04-24 10:01:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 10:01:49 -==> Parameters: 1(Long)
2019-04-24 10:01:49 -<==      Total: 93
2019-04-24 10:01:49 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:01:49 -HTTP METHOD : GET
2019-04-24 10:01:49 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:01:49 -参数 : []
2019-04-24 10:01:49 -耗时 : 18
2019-04-24 10:01:49 -返回值 : charts/tableDD
2019-04-24 10:01:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:01:57 -HTTP METHOD : GET
2019-04-24 10:01:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:01:57 -参数 : []
2019-04-24 10:01:57 -耗时 : 1
2019-04-24 10:01:57 -返回值 : system/dept/deptTree
2019-04-24 10:01:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:01:57 -HTTP METHOD : GET
2019-04-24 10:01:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:01:57 -参数 : []
2019-04-24 10:01:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:01:57 -==> Parameters: 
2019-04-24 10:01:57 -<==      Total: 3
2019-04-24 10:01:57 -耗时 : 99
2019-04-24 10:01:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:02:00 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:02:00 -HTTP METHOD : POST
2019-04-24 10:02:00 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:02:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@681f6f78, com.bootdo.moneyLog.vo.WaterLogVo@23907fd7, com.bootdo.moneyLog.vo.HeatLogVo@29e682b2]
2019-04-24 10:02:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:00 -<==      Total: 1
2019-04-24 10:02:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:00 -<==      Total: 1
2019-04-24 10:02:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:00 -<==      Total: 1
2019-04-24 10:02:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:00 -<==      Total: 1
2019-04-24 10:02:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:02:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NullPointerException(String), null, 2019-04-24 10:02:00.782(Timestamp)
2019-04-24 10:02:00 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:76)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$39fd37d4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 10:02:00 -<==    Updates: 1
2019-04-24 10:02:17 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:02:17 -HTTP METHOD : POST
2019-04-24 10:02:17 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:02:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4b91ecbb, com.bootdo.moneyLog.vo.WaterLogVo@4365c815, com.bootdo.moneyLog.vo.HeatLogVo@16661bdd]
2019-04-24 10:02:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:17 -<==      Total: 1
2019-04-24 10:02:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:17 -<==      Total: 1
2019-04-24 10:02:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:17 -<==      Total: 1
2019-04-24 10:02:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:17 -<==      Total: 1
2019-04-24 10:02:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:02:17 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:76)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$39fd37d4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 10:02:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NullPointerException(String), null, 2019-04-24 10:02:17.342(Timestamp)
2019-04-24 10:02:17 -<==    Updates: 1
2019-04-24 10:02:32 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:02:32 -HTTP METHOD : POST
2019-04-24 10:02:32 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:02:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@61e5b5a7, com.bootdo.moneyLog.vo.WaterLogVo@cdeee24, com.bootdo.moneyLog.vo.HeatLogVo@3e08a93]
2019-04-24 10:02:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:32 -<==      Total: 1
2019-04-24 10:02:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:32 -<==      Total: 1
2019-04-24 10:02:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:32 -<==      Total: 1
2019-04-24 10:02:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:02:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:02:32 -<==      Total: 1
2019-04-24 10:02:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:02:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NullPointerException(String), null, 2019-04-24 10:02:32.554(Timestamp)
2019-04-24 10:02:32 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:76)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$39fd37d4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 10:02:32 -<==    Updates: 1
2019-04-24 10:15:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 9072 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 10:15:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 10:15:45 -The following profiles are active: dev
2019-04-24 10:15:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 10:15:45 CST 2019]; root of context hierarchy
2019-04-24 10:15:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 10:15:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 10:15:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 10:15:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:15:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 10:15:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 10:15:53 -Starting service [Tomcat]
2019-04-24 10:15:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 10:15:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 10:15:53 -Initializing Spring embedded WebApplicationContext
2019-04-24 10:15:53 -Root WebApplicationContext: initialization completed in 7821 ms
2019-04-24 10:15:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 10:15:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 10:15:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 10:15:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 10:15:54 -Filter xssFilter was not registered (disabled)
2019-04-24 10:15:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 10:15:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 10:15:54 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 10:15:54 -Servlet dispatcherServlet mapped to [/]
2019-04-24 10:15:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 10:15:45 CST 2019]; root of context hierarchy
2019-04-24 10:15:58 -Using default implementation for ThreadExecutor
2019-04-24 10:15:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 10:15:59 -Quartz Scheduler v.2.2.1 created.
2019-04-24 10:15:59 -RAMJobStore initialized.
2019-04-24 10:15:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 10:15:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 10:15:59 -Quartz scheduler version: 2.2.1
2019-04-24 10:15:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-24 10:15:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 10:15:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 10:16:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 10:16:03 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 10:16:03 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 10:16:03 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 10:16:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 10:16:03 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 10:16:03 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 10:16:03 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 10:16:03 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 10:16:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 10:16:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 10:16:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 10:16:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 10:16:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 10:16:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 10:16:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 10:16:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 10:16:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 10:16:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:16:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 10:16:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:16:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 10:16:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 10:16:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 10:16:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 10:16:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 10:16:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 10:16:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 10:16:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 10:16:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 10:16:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 10:16:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 10:16:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 10:16:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 10:16:03 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 10:16:03 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 10:16:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 10:16:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 10:16:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 10:16:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 10:16:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 10:16:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 10:16:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:16:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:16:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 10:16:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 10:16:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 10:16:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 10:16:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 10:16:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:16:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 10:16:04 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:16:04 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:16:04 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 10:16:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 10:16:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 10:16:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 10:16:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 10:16:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 10:16:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 10:16:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 10:16:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 10:16:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 10:16:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 10:16:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 10:16:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 10:16:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 10:16:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 10:16:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 10:16:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 10:16:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 10:16:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 10:16:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 10:16:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 10:16:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 10:16:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 10:16:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 10:16:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 10:16:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 10:16:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 10:16:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 10:16:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 10:16:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:16:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:16:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 10:16:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 10:16:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 10:16:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 10:16:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 10:16:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 10:16:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 10:16:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:16:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 10:16:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 10:16:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:16:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:16:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:16:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 10:16:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 10:16:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 10:16:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 10:16:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 10:16:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 10:16:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:16:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 10:15:45 CST 2019]; root of context hierarchy
2019-04-24 10:16:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:16:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:16:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:16:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 10:16:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 10:16:08 -Registering beans for JMX exposure on startup
2019-04-24 10:16:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 10:16:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 10:16:08 -Starting beans in phase 2147483647
2019-04-24 10:16:08 -Context refreshed
2019-04-24 10:16:08 -Found 1 custom documentation plugin(s)
2019-04-24 10:16:08 -Scanning for api listing references
2019-04-24 10:16:09 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 10:16:09 -Generating unique operation named: removeUsingPOST_1
2019-04-24 10:16:09 -Generating unique operation named: addUsingGET_1
2019-04-24 10:16:09 -Generating unique operation named: editUsingGET_1
2019-04-24 10:16:09 -Generating unique operation named: listUsingGET_1
2019-04-24 10:16:09 -Generating unique operation named: removeUsingPOST_2
2019-04-24 10:16:09 -Generating unique operation named: removeUsingPOST_3
2019-04-24 10:16:09 -Generating unique operation named: saveUsingPOST_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingGET_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingPOST_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingPUT_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 10:16:09 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 10:16:09 -Generating unique operation named: addUsingGET_2
2019-04-24 10:16:09 -Generating unique operation named: editUsingGET_2
2019-04-24 10:16:09 -Generating unique operation named: listUsingGET_2
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_4
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_5
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_2
2019-04-24 10:16:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_3
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_3
2019-04-24 10:16:10 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_3
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_6
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_7
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_4
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_4
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_4
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_8
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_9
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 10:16:10 -Generating unique operation named: ElecUsingGET_1
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_5
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_5
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_5
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_10
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_11
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_6
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_6
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_6
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_7
2019-04-24 10:16:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_7
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_12
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_13
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 10:16:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_7
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_8
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_8
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_14
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_15
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_8
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_8
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_9
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_9
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_16
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_17
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_8
2019-04-24 10:16:10 -Generating unique operation named: updateUsingGET_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_9
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPUT_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 10:16:10 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_9
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_10
2019-04-24 10:16:10 -Generating unique operation named: infoUsingGET_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingPOST_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingPUT_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 10:16:10 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_10
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_18
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_19
2019-04-24 10:16:10 -Generating unique operation named: saveUsingPOST_9
2019-04-24 10:16:10 -Generating unique operation named: updateUsingPOST_10
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_11
2019-04-24 10:16:10 -Generating unique operation named: removeUsingPOST_20
2019-04-24 10:16:10 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 10:16:10 -Generating unique operation named: addUsingGET_10
2019-04-24 10:16:10 -Generating unique operation named: editUsingGET_11
2019-04-24 10:16:10 -Generating unique operation named: listUsingGET_12
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_21
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_10
2019-04-24 10:16:11 -Generating unique operation named: treeUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: treeUsingGET_2
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_11
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_11
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_12
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_13
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_22
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_23
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingGET_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPUT_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 10:16:11 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_12
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_13
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_14
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_24
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_25
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingGET_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_13
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPUT_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 10:16:11 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_13
2019-04-24 10:16:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_14
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_15
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_13
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_14
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_14
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_16
2019-04-24 10:16:11 -Generating unique operation named: listUsingHEAD_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingPOST_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingPUT_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingPATCH_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingDELETE_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingTRACE_1
2019-04-24 10:16:11 -Generating unique operation named: countDDUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 10:16:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 10:16:11 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 10:16:11 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_14
2019-04-24 10:16:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_15
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_17
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_26
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_15
2019-04-24 10:16:11 -Generating unique operation named: treeUsingGET_3
2019-04-24 10:16:11 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_15
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_15
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_16
2019-04-24 10:16:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_18
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_27
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_28
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_16
2019-04-24 10:16:11 -Generating unique operation named: updateUsingGET_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_16
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPUT_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 10:16:11 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 10:16:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_16
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_17
2019-04-24 10:16:11 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_19
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_29
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_30
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_17
2019-04-24 10:16:11 -Generating unique operation named: updateUsingGET_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_17
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPUT_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 10:16:11 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 10:16:11 -Generating unique operation named: addUsingGET_17
2019-04-24 10:16:11 -Generating unique operation named: editUsingGET_18
2019-04-24 10:16:11 -Generating unique operation named: listUsingGET_20
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_31
2019-04-24 10:16:11 -Generating unique operation named: removeUsingPOST_32
2019-04-24 10:16:11 -Generating unique operation named: saveUsingPOST_18
2019-04-24 10:16:11 -Generating unique operation named: updateUsingGET_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPOST_18
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPUT_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 10:16:11 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 10:16:11 -Starting Quartz Scheduler now
2019-04-24 10:16:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 10:16:11 -Starting...
2019-04-24 10:16:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 10:16:11 -Started.
2019-04-24 10:16:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 10:16:11 -Using a shared selector for servlet write/read
2019-04-24 10:16:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 10:16:11 -Started BootdoApplication in 27.524 seconds (JVM running for 28.295)
2019-04-24 10:16:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 10:16:12 -==> Parameters: 
2019-04-24 10:16:12 -<==      Total: 1
2019-04-24 10:16:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 10:16:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 10:16:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-04-24 10:16:43 -Enabling session validation scheduler...
2019-04-24 10:16:43 -请求地址 : http://localhost:8081/login;JSESSIONID=916d93ea-0fc5-4cd4-b4a3-fa25fed7f082
2019-04-24 10:16:43 -HTTP METHOD : GET
2019-04-24 10:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:16:43 -参数 : [{}]
2019-04-24 10:16:43 -耗时 : 3
2019-04-24 10:16:43 -返回值 : login
2019-04-24 10:16:45 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:16:45 -HTTP METHOD : GET
2019-04-24 10:16:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:16:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7b8fb589, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7fb02e20]
2019-04-24 10:16:48 -7737
2019-04-24 10:16:48 -耗时 : 3235
2019-04-24 10:16:48 -返回值 : null
2019-04-24 10:16:48 -请求地址 : http://localhost:8081/login
2019-04-24 10:16:48 -HTTP METHOD : GET
2019-04-24 10:16:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:16:48 -参数 : [{}]
2019-04-24 10:16:48 -耗时 : 2
2019-04-24 10:16:48 -返回值 : login
2019-04-24 10:16:54 -请求地址 : http://localhost:8081/login
2019-04-24 10:16:54 -HTTP METHOD : POST
2019-04-24 10:16:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:16:54 -参数 : [admin, 111111, 7737, org.apache.shiro.web.servlet.ShiroHttpServletRequest@18c97dba]
2019-04-24 10:16:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 10:16:54 -==> Parameters: admin(String)
2019-04-24 10:16:54 -<==      Total: 1
2019-04-24 10:16:54 -耗时 : 155
2019-04-24 10:16:54 -返回值 : {msg=操作成功, code=0}
2019-04-24 10:16:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 10:16:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:16:54 -==> Parameters: 1(Long), admin(String), 登录(String), 156(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:16:54.794(Timestamp)
2019-04-24 10:16:54 -请求地址 : http://localhost:8081/index
2019-04-24 10:16:54 -HTTP METHOD : GET
2019-04-24 10:16:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:16:54 -参数 : [{}]
2019-04-24 10:16:54 -<==    Updates: 1
2019-04-24 10:16:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:16:55 -==> Parameters: 1(Long)
2019-04-24 10:16:55 -<==      Total: 49
2019-04-24 10:16:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:16:55 -==> Parameters: 138(Long)
2019-04-24 10:16:55 -<==      Total: 1
2019-04-24 10:16:55 -耗时 : 274
2019-04-24 10:16:55 -返回值 : index_v1
2019-04-24 10:16:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:16:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 274(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:16:55.312(Timestamp)
2019-04-24 10:16:55 -请求地址 : http://localhost:8081/main
2019-04-24 10:16:55 -HTTP METHOD : GET
2019-04-24 10:16:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:16:55 -参数 : []
2019-04-24 10:16:55 -耗时 : 0
2019-04-24 10:16:55 -返回值 : main
2019-04-24 10:16:55 -<==    Updates: 1
2019-04-24 10:16:56 -请求地址 : http://localhost:8081/main
2019-04-24 10:16:56 -HTTP METHOD : GET
2019-04-24 10:16:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:16:56 -参数 : []
2019-04-24 10:16:56 -耗时 : 1
2019-04-24 10:16:56 -返回值 : main
2019-04-24 10:16:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:16:56 -HTTP METHOD : GET
2019-04-24 10:16:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:16:56 -参数 : []
2019-04-24 10:16:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:16:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:16:56 -<==      Total: 0
2019-04-24 10:16:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:16:56 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:16:56 -<==      Total: 1
2019-04-24 10:16:56 -耗时 : 233
2019-04-24 10:16:56 -返回值 : com.bootdo.common.utils.PageUtils@9376ce
2019-04-24 10:17:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-04-24 10:17:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 10:17:05 -==> Parameters: 1(Long)
2019-04-24 10:17:05 -<==      Total: 93
2019-04-24 10:17:05 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:17:05 -HTTP METHOD : GET
2019-04-24 10:17:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:17:05 -参数 : []
2019-04-24 10:17:05 -耗时 : 12
2019-04-24 10:17:05 -返回值 : charts/tableDD
2019-04-24 10:17:07 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 10:17:07 -HTTP METHOD : GET
2019-04-24 10:17:07 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 10:17:07 -参数 : []
2019-04-24 10:17:07 -耗时 : 15
2019-04-24 10:17:07 -返回值 : charts/countDD
2019-04-24 10:17:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:17:08 -HTTP METHOD : GET
2019-04-24 10:17:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:17:08 -参数 : [userType]
2019-04-24 10:17:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:17:08 -==> Parameters: userType(String)
2019-04-24 10:17:08 -<==      Total: 4
2019-04-24 10:17:08 -耗时 : 165
2019-04-24 10:17:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:17:11 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 10:17:11 -HTTP METHOD : GET
2019-04-24 10:17:11 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 10:17:11 -参数 : []
2019-04-24 10:17:11 -耗时 : 11
2019-04-24 10:17:11 -返回值 : charts/countMM
2019-04-24 10:17:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:17:11 -HTTP METHOD : GET
2019-04-24 10:17:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:17:11 -参数 : [userType]
2019-04-24 10:17:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:17:11 -==> Parameters: userType(String)
2019-04-24 10:17:11 -<==      Total: 4
2019-04-24 10:17:11 -耗时 : 5
2019-04-24 10:17:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:17:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:17:20 -HTTP METHOD : GET
2019-04-24 10:17:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:17:20 -参数 : []
2019-04-24 10:17:20 -耗时 : 0
2019-04-24 10:17:20 -返回值 : system/dept/deptTree
2019-04-24 10:17:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:17:20 -HTTP METHOD : GET
2019-04-24 10:17:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:17:20 -参数 : []
2019-04-24 10:17:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:17:20 -==> Parameters: 
2019-04-24 10:17:20 -<==      Total: 3
2019-04-24 10:17:20 -耗时 : 17
2019-04-24 10:17:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:17:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:17:26 -HTTP METHOD : POST
2019-04-24 10:17:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:17:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5bc7b581, com.bootdo.moneyLog.vo.WaterLogVo@76c94bb6, com.bootdo.moneyLog.vo.HeatLogVo@24fec410]
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:26 -<==      Total: 1
2019-04-24 10:17:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:17:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:27 -<==      Total: 1
2019-04-24 10:17:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:17:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:27 -<==      Total: 1
2019-04-24 10:17:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:17:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:27 -<==      Total: 1
2019-04-24 10:17:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:17:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:27 -<==      Total: 1
2019-04-24 10:17:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:17:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:17:27 -<==      Total: 1
2019-04-24 10:17:27 -耗时 : 364
2019-04-24 10:17:27 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:20:51 -请求地址 : http://localhost:8081/index
2019-04-24 10:20:51 -HTTP METHOD : GET
2019-04-24 10:20:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:20:51 -参数 : [{}]
2019-04-24 10:20:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:20:51 -==> Parameters: 1(Long)
2019-04-24 10:20:51 -<==      Total: 49
2019-04-24 10:20:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:20:51 -==> Parameters: 138(Long)
2019-04-24 10:20:51 -<==      Total: 1
2019-04-24 10:20:51 -耗时 : 29
2019-04-24 10:20:51 -返回值 : index_v1
2019-04-24 10:20:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:20:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:20:51.94(Timestamp)
2019-04-24 10:20:52 -请求地址 : http://localhost:8081/main
2019-04-24 10:20:52 -HTTP METHOD : GET
2019-04-24 10:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:20:52 -参数 : []
2019-04-24 10:20:52 -耗时 : 0
2019-04-24 10:20:52 -返回值 : main
2019-04-24 10:20:52 -<==    Updates: 1
2019-04-24 10:20:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:20:52 -HTTP METHOD : GET
2019-04-24 10:20:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:20:52 -参数 : []
2019-04-24 10:20:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:20:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:20:52 -<==      Total: 0
2019-04-24 10:20:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:20:52 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:20:52 -<==      Total: 1
2019-04-24 10:20:52 -耗时 : 10
2019-04-24 10:20:52 -返回值 : com.bootdo.common.utils.PageUtils@797495af
2019-04-24 10:20:52 -请求地址 : http://localhost:8081/main
2019-04-24 10:20:52 -HTTP METHOD : GET
2019-04-24 10:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:20:52 -参数 : []
2019-04-24 10:20:52 -耗时 : 0
2019-04-24 10:20:52 -返回值 : main
2019-04-24 10:20:56 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:20:56 -HTTP METHOD : GET
2019-04-24 10:20:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:20:56 -参数 : []
2019-04-24 10:20:56 -耗时 : 1
2019-04-24 10:20:56 -返回值 : charts/tableDD
2019-04-24 10:21:49 -请求地址 : http://localhost:8081/index
2019-04-24 10:21:49 -HTTP METHOD : GET
2019-04-24 10:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:21:49 -参数 : [{}]
2019-04-24 10:21:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:21:49 -==> Parameters: 1(Long)
2019-04-24 10:21:49 -<==      Total: 49
2019-04-24 10:21:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:21:49 -==> Parameters: 138(Long)
2019-04-24 10:21:49 -<==      Total: 1
2019-04-24 10:21:49 -耗时 : 30
2019-04-24 10:21:49 -返回值 : index_v1
2019-04-24 10:21:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:21:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:21:49.308(Timestamp)
2019-04-24 10:21:49 -请求地址 : http://localhost:8081/main
2019-04-24 10:21:49 -HTTP METHOD : GET
2019-04-24 10:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:21:49 -参数 : []
2019-04-24 10:21:49 -耗时 : 0
2019-04-24 10:21:49 -返回值 : main
2019-04-24 10:21:49 -<==    Updates: 1
2019-04-24 10:21:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:21:49 -HTTP METHOD : GET
2019-04-24 10:21:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:21:49 -参数 : []
2019-04-24 10:21:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:21:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:21:49 -<==      Total: 0
2019-04-24 10:21:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:21:49 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:21:49 -<==      Total: 1
2019-04-24 10:21:49 -耗时 : 7
2019-04-24 10:21:49 -返回值 : com.bootdo.common.utils.PageUtils@391d2375
2019-04-24 10:21:49 -请求地址 : http://localhost:8081/main
2019-04-24 10:21:49 -HTTP METHOD : GET
2019-04-24 10:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:21:49 -参数 : []
2019-04-24 10:21:49 -耗时 : 0
2019-04-24 10:21:49 -返回值 : main
2019-04-24 10:21:53 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:21:53 -HTTP METHOD : GET
2019-04-24 10:21:53 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:21:53 -参数 : []
2019-04-24 10:21:53 -耗时 : 1
2019-04-24 10:21:53 -返回值 : charts/tableDD
2019-04-24 10:22:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:22:06 -HTTP METHOD : GET
2019-04-24 10:22:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:22:06 -参数 : []
2019-04-24 10:22:06 -耗时 : 1
2019-04-24 10:22:06 -返回值 : system/dept/deptTree
2019-04-24 10:22:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:22:06 -HTTP METHOD : GET
2019-04-24 10:22:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:22:06 -参数 : []
2019-04-24 10:22:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:22:06 -==> Parameters: 
2019-04-24 10:22:06 -<==      Total: 3
2019-04-24 10:22:06 -耗时 : 6
2019-04-24 10:22:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:22:09 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:22:09 -HTTP METHOD : POST
2019-04-24 10:22:09 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:22:09 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@117d580c, com.bootdo.moneyLog.vo.WaterLogVo@21a8a716, com.bootdo.moneyLog.vo.HeatLogVo@7a1cde70]
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:09 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:09 -<==      Total: 1
2019-04-24 10:22:09 -耗时 : 108
2019-04-24 10:22:09 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:22:50 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:22:50 -HTTP METHOD : POST
2019-04-24 10:22:50 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:22:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5c587e4e, com.bootdo.moneyLog.vo.WaterLogVo@563f4094, com.bootdo.moneyLog.vo.HeatLogVo@4f82eec5]
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:22:50 -==> Parameters: 2019-12-24 00:00:00(String), 2019-12-24 23:59:59(String), 2(String)
2019-04-24 10:22:50 -<==      Total: 1
2019-04-24 10:22:50 -耗时 : 107
2019-04-24 10:22:50 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:23:33 -请求地址 : http://localhost:8081/index
2019-04-24 10:23:33 -HTTP METHOD : GET
2019-04-24 10:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:23:33 -参数 : [{}]
2019-04-24 10:23:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:23:33 -==> Parameters: 1(Long)
2019-04-24 10:23:33 -<==      Total: 49
2019-04-24 10:23:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:23:33 -==> Parameters: 138(Long)
2019-04-24 10:23:33 -<==      Total: 1
2019-04-24 10:23:33 -耗时 : 34
2019-04-24 10:23:33 -返回值 : index_v1
2019-04-24 10:23:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:23:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:23:33.524(Timestamp)
2019-04-24 10:23:33 -请求地址 : http://localhost:8081/main
2019-04-24 10:23:33 -HTTP METHOD : GET
2019-04-24 10:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:23:33 -参数 : []
2019-04-24 10:23:33 -耗时 : 1
2019-04-24 10:23:33 -返回值 : main
2019-04-24 10:23:33 -<==    Updates: 1
2019-04-24 10:23:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:23:33 -HTTP METHOD : GET
2019-04-24 10:23:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:23:33 -参数 : []
2019-04-24 10:23:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:23:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:23:33 -<==      Total: 0
2019-04-24 10:23:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:23:33 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:23:33 -<==      Total: 1
2019-04-24 10:23:33 -耗时 : 10
2019-04-24 10:23:33 -返回值 : com.bootdo.common.utils.PageUtils@61ae5991
2019-04-24 10:23:33 -请求地址 : http://localhost:8081/main
2019-04-24 10:23:33 -HTTP METHOD : GET
2019-04-24 10:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:23:33 -参数 : []
2019-04-24 10:23:33 -耗时 : 1
2019-04-24 10:23:33 -返回值 : main
2019-04-24 10:23:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:23:37 -HTTP METHOD : GET
2019-04-24 10:23:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:23:37 -参数 : []
2019-04-24 10:23:37 -耗时 : 0
2019-04-24 10:23:37 -返回值 : charts/tableDD
2019-04-24 10:35:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 5288 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 10:35:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 10:35:45 -The following profiles are active: dev
2019-04-24 10:35:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:35:45 CST 2019]; root of context hierarchy
2019-04-24 10:35:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 10:35:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 10:35:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 10:35:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:35:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 10:35:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 10:35:53 -Starting service [Tomcat]
2019-04-24 10:35:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 10:35:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 10:35:54 -Initializing Spring embedded WebApplicationContext
2019-04-24 10:35:54 -Root WebApplicationContext: initialization completed in 8485 ms
2019-04-24 10:35:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 10:35:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 10:35:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 10:35:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 10:35:54 -Filter xssFilter was not registered (disabled)
2019-04-24 10:35:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 10:35:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 10:35:54 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 10:35:54 -Servlet dispatcherServlet mapped to [/]
2019-04-24 10:35:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:35:45 CST 2019]; root of context hierarchy
2019-04-24 10:35:59 -Using default implementation for ThreadExecutor
2019-04-24 10:35:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 10:35:59 -Quartz Scheduler v.2.2.1 created.
2019-04-24 10:35:59 -RAMJobStore initialized.
2019-04-24 10:35:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 10:35:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 10:35:59 -Quartz scheduler version: 2.2.1
2019-04-24 10:35:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6009cd34
2019-04-24 10:35:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 10:35:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 10:36:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 10:36:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 10:36:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 10:36:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 10:36:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 10:36:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 10:36:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 10:36:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 10:36:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 10:36:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 10:36:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 10:36:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 10:36:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 10:36:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 10:36:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 10:36:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:36:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 10:36:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:36:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 10:36:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 10:36:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 10:36:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 10:36:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 10:36:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 10:36:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 10:36:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 10:36:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 10:36:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 10:36:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 10:36:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 10:36:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 10:36:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 10:36:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 10:36:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 10:36:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 10:36:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:36:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:36:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 10:36:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 10:36:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 10:36:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 10:36:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:36:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 10:36:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:36:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 10:36:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 10:36:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 10:36:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 10:36:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 10:36:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 10:36:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 10:36:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 10:36:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 10:36:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 10:36:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 10:36:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 10:36:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 10:36:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 10:36:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 10:36:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 10:36:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 10:36:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 10:36:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 10:36:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 10:36:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 10:36:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 10:36:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 10:36:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 10:36:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 10:36:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 10:36:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 10:36:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 10:36:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 10:36:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:36:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:36:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 10:36:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 10:36:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 10:36:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 10:36:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 10:36:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 10:36:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:36:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 10:36:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 10:36:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:36:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:36:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:36:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 10:36:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 10:36:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 10:36:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 10:36:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 10:36:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 10:36:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:36:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:35:45 CST 2019]; root of context hierarchy
2019-04-24 10:36:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:36:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:36:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:36:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 10:36:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 10:36:06 -Registering beans for JMX exposure on startup
2019-04-24 10:36:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 10:36:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 10:36:06 -Starting beans in phase 2147483647
2019-04-24 10:36:06 -Context refreshed
2019-04-24 10:36:06 -Found 1 custom documentation plugin(s)
2019-04-24 10:36:06 -Scanning for api listing references
2019-04-24 10:36:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 10:36:06 -Generating unique operation named: removeUsingPOST_1
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_2
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_3
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_2
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_2
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_2
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_4
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_5
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_2
2019-04-24 10:36:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_3
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_3
2019-04-24 10:36:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_3
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_6
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_7
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_4
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_4
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_4
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_8
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_9
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 10:36:07 -Generating unique operation named: ElecUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_5
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_5
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_5
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_10
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_11
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_6
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_6
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_6
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_7
2019-04-24 10:36:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_7
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_12
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_13
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 10:36:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_7
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_8
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_8
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_14
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_15
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_8
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_8
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_9
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_9
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_16
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_17
2019-04-24 10:36:07 -Generating unique operation named: saveUsingPOST_8
2019-04-24 10:36:07 -Generating unique operation named: updateUsingGET_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPOST_9
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPUT_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 10:36:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 10:36:07 -Generating unique operation named: addUsingGET_9
2019-04-24 10:36:07 -Generating unique operation named: editUsingGET_10
2019-04-24 10:36:07 -Generating unique operation named: infoUsingGET_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingPOST_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingPUT_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 10:36:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 10:36:07 -Generating unique operation named: listUsingGET_10
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_18
2019-04-24 10:36:07 -Generating unique operation named: removeUsingPOST_19
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_10
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_11
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_20
2019-04-24 10:36:08 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_10
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_11
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_12
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_21
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_10
2019-04-24 10:36:08 -Generating unique operation named: treeUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: treeUsingGET_2
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_11
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_11
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_12
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_13
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_22
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_23
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_11
2019-04-24 10:36:08 -Generating unique operation named: updateUsingGET_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_12
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPUT_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 10:36:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_12
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_13
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_14
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_24
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_25
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_12
2019-04-24 10:36:08 -Generating unique operation named: updateUsingGET_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_13
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPUT_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 10:36:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_13
2019-04-24 10:36:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_14
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_15
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_13
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_14
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_14
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_16
2019-04-24 10:36:08 -Generating unique operation named: listUsingHEAD_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingPOST_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingPUT_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingPATCH_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingDELETE_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingTRACE_1
2019-04-24 10:36:08 -Generating unique operation named: countDDUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 10:36:08 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 10:36:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 10:36:08 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_14
2019-04-24 10:36:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_15
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_17
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_26
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_15
2019-04-24 10:36:08 -Generating unique operation named: treeUsingGET_3
2019-04-24 10:36:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_15
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_15
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_16
2019-04-24 10:36:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_18
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_27
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_28
2019-04-24 10:36:08 -Generating unique operation named: saveUsingPOST_16
2019-04-24 10:36:08 -Generating unique operation named: updateUsingGET_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPOST_16
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPUT_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 10:36:08 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 10:36:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 10:36:08 -Generating unique operation named: addUsingGET_16
2019-04-24 10:36:08 -Generating unique operation named: editUsingGET_17
2019-04-24 10:36:08 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 10:36:08 -Generating unique operation named: listUsingGET_19
2019-04-24 10:36:08 -Generating unique operation named: removeUsingPOST_29
2019-04-24 10:36:09 -Generating unique operation named: removeUsingPOST_30
2019-04-24 10:36:09 -Generating unique operation named: saveUsingPOST_17
2019-04-24 10:36:09 -Generating unique operation named: updateUsingGET_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPOST_17
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPUT_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 10:36:09 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 10:36:09 -Generating unique operation named: addUsingGET_17
2019-04-24 10:36:09 -Generating unique operation named: editUsingGET_18
2019-04-24 10:36:09 -Generating unique operation named: listUsingGET_20
2019-04-24 10:36:09 -Generating unique operation named: removeUsingPOST_31
2019-04-24 10:36:09 -Generating unique operation named: removeUsingPOST_32
2019-04-24 10:36:09 -Generating unique operation named: saveUsingPOST_18
2019-04-24 10:36:09 -Generating unique operation named: updateUsingGET_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPOST_18
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPUT_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 10:36:09 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 10:36:09 -Starting Quartz Scheduler now
2019-04-24 10:36:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 10:36:09 -Starting...
2019-04-24 10:36:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 10:36:09 -Started.
2019-04-24 10:36:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 10:36:09 -Using a shared selector for servlet write/read
2019-04-24 10:36:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 10:36:09 -Started BootdoApplication in 25.187 seconds (JVM running for 26.023)
2019-04-24 10:36:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 10:36:09 -==> Parameters: 
2019-04-24 10:36:09 -<==      Total: 1
2019-04-24 10:36:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 10:36:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 10:36:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-04-24 10:36:32 -Enabling session validation scheduler...
2019-04-24 10:36:32 -请求地址 : http://localhost:8081/login;JSESSIONID=02831769-bcb6-42b2-a302-709a5eb22f02
2019-04-24 10:36:32 -HTTP METHOD : GET
2019-04-24 10:36:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:36:32 -参数 : [{}]
2019-04-24 10:36:32 -耗时 : 3
2019-04-24 10:36:32 -返回值 : login
2019-04-24 10:36:34 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:36:34 -HTTP METHOD : GET
2019-04-24 10:36:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:36:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@790a739b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34d63107]
2019-04-24 10:36:43 -7104
2019-04-24 10:36:43 -耗时 : 9416
2019-04-24 10:36:43 -返回值 : null
2019-04-24 10:36:43 -请求地址 : http://localhost:8081/login
2019-04-24 10:36:43 -HTTP METHOD : GET
2019-04-24 10:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:36:43 -参数 : [{}]
2019-04-24 10:36:43 -耗时 : 0
2019-04-24 10:36:43 -返回值 : login
2019-04-24 10:36:49 -请求地址 : http://localhost:8081/login
2019-04-24 10:36:49 -HTTP METHOD : POST
2019-04-24 10:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:36:49 -参数 : [admin, 111111, 7104, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dacc6a6]
2019-04-24 10:36:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 10:36:50 -==> Parameters: admin(String)
2019-04-24 10:36:50 -<==      Total: 1
2019-04-24 10:36:50 -耗时 : 218
2019-04-24 10:36:50 -返回值 : {msg=操作成功, code=0}
2019-04-24 10:36:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 10:36:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:36:50 -==> Parameters: 1(Long), admin(String), 登录(String), 218(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:36:50.3(Timestamp)
2019-04-24 10:36:50 -请求地址 : http://localhost:8081/index
2019-04-24 10:36:50 -HTTP METHOD : GET
2019-04-24 10:36:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:36:50 -参数 : [{}]
2019-04-24 10:36:50 -<==    Updates: 1
2019-04-24 10:36:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:36:50 -==> Parameters: 1(Long)
2019-04-24 10:36:50 -<==      Total: 49
2019-04-24 10:36:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:36:50 -==> Parameters: 138(Long)
2019-04-24 10:36:51 -<==      Total: 1
2019-04-24 10:36:51 -耗时 : 654
2019-04-24 10:36:51 -返回值 : index_v1
2019-04-24 10:36:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:36:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 654(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:36:51.108(Timestamp)
2019-04-24 10:36:51 -<==    Updates: 1
2019-04-24 10:36:51 -请求地址 : http://localhost:8081/main
2019-04-24 10:36:51 -HTTP METHOD : GET
2019-04-24 10:36:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:36:51 -参数 : []
2019-04-24 10:36:51 -耗时 : 1
2019-04-24 10:36:51 -返回值 : main
2019-04-24 10:36:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:36:51 -HTTP METHOD : GET
2019-04-24 10:36:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:36:51 -参数 : []
2019-04-24 10:36:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:36:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:36:51 -请求地址 : http://localhost:8081/main
2019-04-24 10:36:51 -HTTP METHOD : GET
2019-04-24 10:36:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:36:51 -参数 : []
2019-04-24 10:36:51 -耗时 : 4
2019-04-24 10:36:51 -返回值 : main
2019-04-24 10:36:52 -<==      Total: 0
2019-04-24 10:36:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:36:52 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:36:52 -<==      Total: 1
2019-04-24 10:36:52 -耗时 : 480
2019-04-24 10:36:52 -返回值 : com.bootdo.common.utils.PageUtils@762f7050
2019-04-24 10:36:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 10:36:57 -==> Parameters: 1(Long)
2019-04-24 10:36:57 -<==      Total: 93
2019-04-24 10:36:57 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 10:36:57 -HTTP METHOD : GET
2019-04-24 10:36:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 10:36:57 -参数 : []
2019-04-24 10:36:57 -耗时 : 12
2019-04-24 10:36:57 -返回值 : charts/countDD
2019-04-24 10:36:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:36:57 -HTTP METHOD : GET
2019-04-24 10:36:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:36:57 -参数 : [userType]
2019-04-24 10:36:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:36:57 -==> Parameters: userType(String)
2019-04-24 10:36:58 -<==      Total: 4
2019-04-24 10:36:58 -耗时 : 84
2019-04-24 10:36:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:37:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-24 10:37:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:37:06 -HTTP METHOD : GET
2019-04-24 10:37:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:37:06 -参数 : []
2019-04-24 10:37:06 -耗时 : 1
2019-04-24 10:37:06 -返回值 : system/dept/deptTree
2019-04-24 10:37:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:37:07 -HTTP METHOD : GET
2019-04-24 10:37:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:37:07 -参数 : []
2019-04-24 10:37:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:37:07 -==> Parameters: 
2019-04-24 10:37:07 -<==      Total: 3
2019-04-24 10:37:07 -耗时 : 57
2019-04-24 10:37:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:37:09 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-24 10:37:09 -HTTP METHOD : GET
2019-04-24 10:37:09 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-24 10:37:09 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3f3598bc, com.bootdo.moneyLog.vo.HeatLogVo@2f66c74, com.bootdo.moneyLog.vo.WaterLogVo@541cc48, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34ab23ab]
2019-04-24 10:37:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:37:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:37:10 -<==      Total: 4
2019-04-24 10:37:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:37:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:37:10 -<==      Total: 1
2019-04-24 10:37:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:37:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:37:10 -<==      Total: 1
2019-04-24 10:37:11 -耗时 : 1254
2019-04-24 10:37:11 -返回值 : null
2019-04-24 10:46:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 12884 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 10:46:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 10:46:55 -The following profiles are active: dev
2019-04-24 10:46:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:46:55 CST 2019]; root of context hierarchy
2019-04-24 10:46:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 10:47:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 10:47:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 10:47:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 10:47:06 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 10:47:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 10:47:06 -Starting service [Tomcat]
2019-04-24 10:47:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 10:47:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 10:47:06 -Initializing Spring embedded WebApplicationContext
2019-04-24 10:47:06 -Root WebApplicationContext: initialization completed in 11010 ms
2019-04-24 10:47:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 10:47:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 10:47:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 10:47:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 10:47:08 -Filter xssFilter was not registered (disabled)
2019-04-24 10:47:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 10:47:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 10:47:08 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 10:47:08 -Servlet dispatcherServlet mapped to [/]
2019-04-24 10:47:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:46:55 CST 2019]; root of context hierarchy
2019-04-24 10:47:15 -Using default implementation for ThreadExecutor
2019-04-24 10:47:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 10:47:15 -Quartz Scheduler v.2.2.1 created.
2019-04-24 10:47:15 -RAMJobStore initialized.
2019-04-24 10:47:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 10:47:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 10:47:15 -Quartz scheduler version: 2.2.1
2019-04-24 10:47:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@45b7c97f
2019-04-24 10:47:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 10:47:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 10:47:19 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 10:47:19 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 10:47:19 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 10:47:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 10:47:19 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 10:47:19 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 10:47:19 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 10:47:19 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 10:47:19 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 10:47:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 10:47:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 10:47:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 10:47:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 10:47:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 10:47:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 10:47:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 10:47:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:47:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 10:47:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 10:47:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 10:47:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 10:47:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 10:47:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 10:47:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 10:47:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 10:47:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 10:47:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 10:47:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 10:47:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 10:47:19 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 10:47:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 10:47:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 10:47:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 10:47:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 10:47:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 10:47:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 10:47:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:47:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 10:47:19 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 10:47:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 10:47:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 10:47:19 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 10:47:19 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:47:19 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:19 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:47:19 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:47:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 10:47:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 10:47:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 10:47:19 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 10:47:19 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 10:47:19 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 10:47:19 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 10:47:19 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 10:47:19 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 10:47:19 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 10:47:19 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:19 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 10:47:19 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 10:47:19 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:19 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 10:47:19 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 10:47:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 10:47:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 10:47:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 10:47:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:20 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 10:47:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 10:47:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 10:47:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 10:47:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 10:47:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 10:47:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 10:47:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 10:47:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 10:47:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 10:47:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 10:47:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 10:47:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 10:47:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 10:47:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 10:47:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 10:47:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 10:47:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:47:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 10:47:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 10:47:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 10:47:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 10:47:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 10:47:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 10:47:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 10:47:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 10:47:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 10:47:20 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 10:47:20 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 10:47:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 10:47:20 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 10:47:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 10:47:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 10:47:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 10:47:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 10:47:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 10:47:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 10:47:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 10:47:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:47:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 10:46:55 CST 2019]; root of context hierarchy
2019-04-24 10:47:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:47:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:47:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 10:47:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 10:47:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 10:47:25 -Registering beans for JMX exposure on startup
2019-04-24 10:47:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 10:47:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 10:47:25 -Starting beans in phase 2147483647
2019-04-24 10:47:25 -Context refreshed
2019-04-24 10:47:25 -Found 1 custom documentation plugin(s)
2019-04-24 10:47:25 -Scanning for api listing references
2019-04-24 10:47:25 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_1
2019-04-24 10:47:26 -Generating unique operation named: addUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: editUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: listUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_2
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_3
2019-04-24 10:47:26 -Generating unique operation named: saveUsingPOST_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPOST_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPUT_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 10:47:26 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 10:47:26 -Generating unique operation named: addUsingGET_2
2019-04-24 10:47:26 -Generating unique operation named: editUsingGET_2
2019-04-24 10:47:26 -Generating unique operation named: listUsingGET_2
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_4
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_5
2019-04-24 10:47:26 -Generating unique operation named: saveUsingPOST_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPOST_2
2019-04-24 10:47:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: addUsingGET_3
2019-04-24 10:47:26 -Generating unique operation named: editUsingGET_3
2019-04-24 10:47:26 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: listUsingGET_3
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_6
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_7
2019-04-24 10:47:26 -Generating unique operation named: saveUsingPOST_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingGET_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPOST_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPUT_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 10:47:26 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 10:47:26 -Generating unique operation named: addUsingGET_4
2019-04-24 10:47:26 -Generating unique operation named: editUsingGET_4
2019-04-24 10:47:26 -Generating unique operation named: listUsingGET_4
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_8
2019-04-24 10:47:26 -Generating unique operation named: removeUsingPOST_9
2019-04-24 10:47:26 -Generating unique operation named: saveUsingPOST_4
2019-04-24 10:47:26 -Generating unique operation named: updateUsingGET_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPOST_4
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPUT_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 10:47:26 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 10:47:26 -Generating unique operation named: ElecUsingGET_1
2019-04-24 10:47:26 -Generating unique operation named: addUsingGET_5
2019-04-24 10:47:26 -Generating unique operation named: editUsingGET_5
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_5
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_10
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_11
2019-04-24 10:47:27 -Generating unique operation named: saveUsingPOST_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingGET_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPUT_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 10:47:27 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 10:47:27 -Generating unique operation named: editUsingGET_6
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_6
2019-04-24 10:47:27 -Generating unique operation named: addUsingGET_6
2019-04-24 10:47:27 -Generating unique operation named: editUsingGET_7
2019-04-24 10:47:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_7
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_12
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_13
2019-04-24 10:47:27 -Generating unique operation named: saveUsingPOST_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingGET_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPUT_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 10:47:27 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 10:47:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 10:47:27 -Generating unique operation named: addUsingGET_7
2019-04-24 10:47:27 -Generating unique operation named: editUsingGET_8
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_8
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_14
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_15
2019-04-24 10:47:27 -Generating unique operation named: saveUsingPOST_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingGET_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_8
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPUT_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 10:47:27 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 10:47:27 -Generating unique operation named: addUsingGET_8
2019-04-24 10:47:27 -Generating unique operation named: editUsingGET_9
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_9
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_16
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_17
2019-04-24 10:47:27 -Generating unique operation named: saveUsingPOST_8
2019-04-24 10:47:27 -Generating unique operation named: updateUsingGET_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_9
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPUT_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 10:47:27 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 10:47:27 -Generating unique operation named: addUsingGET_9
2019-04-24 10:47:27 -Generating unique operation named: editUsingGET_10
2019-04-24 10:47:27 -Generating unique operation named: infoUsingGET_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingPOST_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingPUT_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 10:47:27 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_10
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_18
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_19
2019-04-24 10:47:27 -Generating unique operation named: saveUsingPOST_9
2019-04-24 10:47:27 -Generating unique operation named: updateUsingPOST_10
2019-04-24 10:47:27 -Generating unique operation named: listUsingGET_11
2019-04-24 10:47:27 -Generating unique operation named: removeUsingPOST_20
2019-04-24 10:47:27 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_10
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_11
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_12
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_21
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_10
2019-04-24 10:47:28 -Generating unique operation named: treeUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: treeUsingGET_2
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_11
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_11
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_12
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_13
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_22
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_23
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_11
2019-04-24 10:47:28 -Generating unique operation named: updateUsingGET_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_12
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPUT_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 10:47:28 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_12
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_13
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_14
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_24
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_25
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_12
2019-04-24 10:47:28 -Generating unique operation named: updateUsingGET_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_13
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPUT_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 10:47:28 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_13
2019-04-24 10:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_14
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_15
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_13
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_14
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_14
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_16
2019-04-24 10:47:28 -Generating unique operation named: listUsingHEAD_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingPOST_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingPUT_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingPATCH_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingDELETE_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 10:47:28 -Generating unique operation named: listUsingTRACE_1
2019-04-24 10:47:28 -Generating unique operation named: countDDUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 10:47:28 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 10:47:28 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 10:47:28 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_14
2019-04-24 10:47:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_15
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_17
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_26
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_15
2019-04-24 10:47:28 -Generating unique operation named: treeUsingGET_3
2019-04-24 10:47:28 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_15
2019-04-24 10:47:28 -Generating unique operation named: addUsingGET_15
2019-04-24 10:47:28 -Generating unique operation named: editUsingGET_16
2019-04-24 10:47:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 10:47:28 -Generating unique operation named: listUsingGET_18
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_27
2019-04-24 10:47:28 -Generating unique operation named: removeUsingPOST_28
2019-04-24 10:47:28 -Generating unique operation named: saveUsingPOST_16
2019-04-24 10:47:28 -Generating unique operation named: updateUsingGET_10
2019-04-24 10:47:28 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPOST_16
2019-04-24 10:47:28 -Generating unique operation named: updateUsingPUT_10
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 10:47:29 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 10:47:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 10:47:29 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 10:47:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 10:47:29 -Generating unique operation named: addUsingGET_16
2019-04-24 10:47:29 -Generating unique operation named: editUsingGET_17
2019-04-24 10:47:29 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 10:47:29 -Generating unique operation named: listUsingGET_19
2019-04-24 10:47:29 -Generating unique operation named: removeUsingPOST_29
2019-04-24 10:47:29 -Generating unique operation named: removeUsingPOST_30
2019-04-24 10:47:29 -Generating unique operation named: saveUsingPOST_17
2019-04-24 10:47:29 -Generating unique operation named: updateUsingGET_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPOST_17
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPUT_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 10:47:29 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 10:47:29 -Generating unique operation named: addUsingGET_17
2019-04-24 10:47:29 -Generating unique operation named: editUsingGET_18
2019-04-24 10:47:29 -Generating unique operation named: listUsingGET_20
2019-04-24 10:47:29 -Generating unique operation named: removeUsingPOST_31
2019-04-24 10:47:29 -Generating unique operation named: removeUsingPOST_32
2019-04-24 10:47:29 -Generating unique operation named: saveUsingPOST_18
2019-04-24 10:47:29 -Generating unique operation named: updateUsingGET_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPOST_18
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPUT_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 10:47:29 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 10:47:29 -Starting Quartz Scheduler now
2019-04-24 10:47:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 10:47:29 -Starting...
2019-04-24 10:47:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 10:47:29 -Started.
2019-04-24 10:47:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 10:47:29 -Using a shared selector for servlet write/read
2019-04-24 10:47:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 10:47:29 -Started BootdoApplication in 35.183 seconds (JVM running for 36.168)
2019-04-24 10:47:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 10:47:29 -==> Parameters: 
2019-04-24 10:47:30 -<==      Total: 1
2019-04-24 10:48:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 10:48:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 10:48:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 109 ms
2019-04-24 10:48:00 -Enabling session validation scheduler...
2019-04-24 10:48:01 -请求地址 : http://localhost:8081/login;JSESSIONID=d467d247-0aba-45f3-b27b-14b4b30bf78b
2019-04-24 10:48:01 -HTTP METHOD : GET
2019-04-24 10:48:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 10:48:01 -参数 : [{}]
2019-04-24 10:48:01 -耗时 : 7
2019-04-24 10:48:01 -返回值 : login
2019-04-24 10:48:03 -请求地址 : http://localhost:8081/getVerify
2019-04-24 10:48:03 -HTTP METHOD : GET
2019-04-24 10:48:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 10:48:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@29918a1c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@707d752d]
2019-04-24 10:48:07 -0395
2019-04-24 10:48:07 -耗时 : 4515
2019-04-24 10:48:07 -返回值 : null
2019-04-24 10:48:17 -请求地址 : http://localhost:8081/login
2019-04-24 10:48:17 -HTTP METHOD : POST
2019-04-24 10:48:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 10:48:17 -参数 : [admin, 111111, 0395, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4953c8b1]
2019-04-24 10:48:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 10:48:17 -==> Parameters: admin(String)
2019-04-24 10:48:17 -<==      Total: 1
2019-04-24 10:48:17 -耗时 : 213
2019-04-24 10:48:17 -返回值 : {msg=操作成功, code=0}
2019-04-24 10:48:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 10:48:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:48:17 -==> Parameters: 1(Long), admin(String), 登录(String), 214(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 10:48:17.601(Timestamp)
2019-04-24 10:48:17 -请求地址 : http://localhost:8081/index
2019-04-24 10:48:17 -HTTP METHOD : GET
2019-04-24 10:48:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:48:17 -参数 : [{}]
2019-04-24 10:48:18 -<==    Updates: 1
2019-04-24 10:48:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:48:18 -==> Parameters: 1(Long)
2019-04-24 10:48:18 -<==      Total: 49
2019-04-24 10:48:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:48:18 -==> Parameters: 138(Long)
2019-04-24 10:48:18 -<==      Total: 1
2019-04-24 10:48:18 -耗时 : 665
2019-04-24 10:48:18 -返回值 : index_v1
2019-04-24 10:48:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:48:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 666(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:48:18.729(Timestamp)
2019-04-24 10:48:18 -请求地址 : http://localhost:8081/main
2019-04-24 10:48:18 -HTTP METHOD : GET
2019-04-24 10:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:48:18 -参数 : []
2019-04-24 10:48:18 -耗时 : 1
2019-04-24 10:48:18 -返回值 : main
2019-04-24 10:48:19 -<==    Updates: 1
2019-04-24 10:48:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:48:19 -HTTP METHOD : GET
2019-04-24 10:48:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:48:19 -参数 : []
2019-04-24 10:48:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:48:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:48:19 -<==      Total: 0
2019-04-24 10:48:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:48:19 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:48:19 -<==      Total: 1
2019-04-24 10:48:19 -耗时 : 86
2019-04-24 10:48:19 -返回值 : com.bootdo.common.utils.PageUtils@60fa4c82
2019-04-24 10:48:19 -请求地址 : http://localhost:8081/main
2019-04-24 10:48:19 -HTTP METHOD : GET
2019-04-24 10:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:48:19 -参数 : []
2019-04-24 10:48:19 -耗时 : 0
2019-04-24 10:48:19 -返回值 : main
2019-04-24 10:48:20 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2019-04-24 10:48:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 10:48:31 -==> Parameters: 1(Long)
2019-04-24 10:48:31 -<==      Total: 93
2019-04-24 10:48:31 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 10:48:31 -HTTP METHOD : GET
2019-04-24 10:48:31 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 10:48:31 -参数 : []
2019-04-24 10:48:31 -耗时 : 7
2019-04-24 10:48:31 -返回值 : charts/countDD
2019-04-24 10:48:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:48:32 -HTTP METHOD : GET
2019-04-24 10:48:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:48:32 -参数 : [userType]
2019-04-24 10:48:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:48:32 -==> Parameters: userType(String)
2019-04-24 10:48:32 -<==      Total: 4
2019-04-24 10:48:32 -耗时 : 56
2019-04-24 10:48:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:48:44 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:48:44 -HTTP METHOD : GET
2019-04-24 10:48:44 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:48:44 -参数 : []
2019-04-24 10:48:44 -耗时 : 13
2019-04-24 10:48:44 -返回值 : charts/tableDD
2019-04-24 10:48:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:48:54 -HTTP METHOD : GET
2019-04-24 10:48:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:48:54 -参数 : []
2019-04-24 10:48:54 -耗时 : 1
2019-04-24 10:48:54 -返回值 : system/dept/deptTree
2019-04-24 10:48:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:48:55 -HTTP METHOD : GET
2019-04-24 10:48:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:48:55 -参数 : []
2019-04-24 10:48:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:48:55 -==> Parameters: 
2019-04-24 10:48:55 -<==      Total: 3
2019-04-24 10:48:55 -耗时 : 27
2019-04-24 10:48:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:48:57 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-24 10:48:57 -HTTP METHOD : GET
2019-04-24 10:48:57 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-24 10:48:57 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@17cf924d, com.bootdo.moneyLog.vo.HeatLogVo@566e8ef8, com.bootdo.moneyLog.vo.WaterLogVo@68ec9abd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a09f467]
2019-04-24 10:48:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:48:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:48:58 -<==      Total: 4
2019-04-24 10:48:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:48:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:48:58 -<==      Total: 1
2019-04-24 10:48:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:48:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 10:48:58 -<==      Total: 1
2019-04-24 10:48:59 -耗时 : 1440
2019-04-24 10:48:59 -返回值 : null
2019-04-24 10:54:32 -请求地址 : http://localhost:8081/index
2019-04-24 10:54:32 -HTTP METHOD : GET
2019-04-24 10:54:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:54:32 -参数 : [{}]
2019-04-24 10:54:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:54:32 -==> Parameters: 1(Long)
2019-04-24 10:54:32 -<==      Total: 49
2019-04-24 10:54:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:54:32 -==> Parameters: 138(Long)
2019-04-24 10:54:32 -<==      Total: 1
2019-04-24 10:54:32 -耗时 : 26
2019-04-24 10:54:32 -返回值 : index_v1
2019-04-24 10:54:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:54:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:54:32.706(Timestamp)
2019-04-24 10:54:32 -请求地址 : http://localhost:8081/main
2019-04-24 10:54:32 -HTTP METHOD : GET
2019-04-24 10:54:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:54:32 -参数 : []
2019-04-24 10:54:32 -耗时 : 0
2019-04-24 10:54:32 -返回值 : main
2019-04-24 10:54:33 -<==    Updates: 1
2019-04-24 10:54:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:54:33 -HTTP METHOD : GET
2019-04-24 10:54:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:54:33 -参数 : []
2019-04-24 10:54:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:54:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:54:33 -<==      Total: 0
2019-04-24 10:54:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:54:33 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:54:33 -<==      Total: 1
2019-04-24 10:54:33 -耗时 : 13
2019-04-24 10:54:33 -返回值 : com.bootdo.common.utils.PageUtils@571fd5e4
2019-04-24 10:54:33 -请求地址 : http://localhost:8081/main
2019-04-24 10:54:33 -HTTP METHOD : GET
2019-04-24 10:54:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:54:33 -参数 : []
2019-04-24 10:54:33 -耗时 : 0
2019-04-24 10:54:33 -返回值 : main
2019-04-24 10:55:03 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 10:56:12 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:56:12 -HTTP METHOD : GET
2019-04-24 10:56:12 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:56:12 -参数 : []
2019-04-24 10:56:12 -耗时 : 0
2019-04-24 10:56:12 -返回值 : charts/tableDD
2019-04-24 10:56:15 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 10:56:15 -HTTP METHOD : GET
2019-04-24 10:56:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 10:56:15 -参数 : []
2019-04-24 10:56:15 -耗时 : 0
2019-04-24 10:56:15 -返回值 : charts/countDD
2019-04-24 10:56:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:56:15 -HTTP METHOD : GET
2019-04-24 10:56:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:56:15 -参数 : [userType]
2019-04-24 10:56:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:56:15 -==> Parameters: userType(String)
2019-04-24 10:56:15 -<==      Total: 4
2019-04-24 10:56:15 -耗时 : 7
2019-04-24 10:56:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:56:28 -请求地址 : http://localhost:8081/index
2019-04-24 10:56:28 -HTTP METHOD : GET
2019-04-24 10:56:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:56:28 -参数 : [{}]
2019-04-24 10:56:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:56:28 -==> Parameters: 1(Long)
2019-04-24 10:56:28 -<==      Total: 49
2019-04-24 10:56:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:56:28 -==> Parameters: 138(Long)
2019-04-24 10:56:28 -<==      Total: 1
2019-04-24 10:56:28 -耗时 : 31
2019-04-24 10:56:28 -返回值 : index_v1
2019-04-24 10:56:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:56:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:56:28.596(Timestamp)
2019-04-24 10:56:28 -<==    Updates: 1
2019-04-24 10:56:28 -请求地址 : http://localhost:8081/main
2019-04-24 10:56:28 -HTTP METHOD : GET
2019-04-24 10:56:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:56:28 -参数 : []
2019-04-24 10:56:28 -耗时 : 1
2019-04-24 10:56:28 -返回值 : main
2019-04-24 10:56:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:56:29 -HTTP METHOD : GET
2019-04-24 10:56:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:56:29 -参数 : []
2019-04-24 10:56:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:56:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:56:29 -<==      Total: 0
2019-04-24 10:56:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:56:29 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:56:29 -<==      Total: 1
2019-04-24 10:56:29 -耗时 : 7
2019-04-24 10:56:29 -返回值 : com.bootdo.common.utils.PageUtils@5e758f45
2019-04-24 10:56:29 -请求地址 : http://localhost:8081/main
2019-04-24 10:56:29 -HTTP METHOD : GET
2019-04-24 10:56:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:56:29 -参数 : []
2019-04-24 10:56:29 -耗时 : 0
2019-04-24 10:56:29 -返回值 : main
2019-04-24 10:56:32 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 10:56:32 -HTTP METHOD : GET
2019-04-24 10:56:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 10:56:32 -参数 : []
2019-04-24 10:56:32 -耗时 : 1
2019-04-24 10:56:32 -返回值 : charts/countDD
2019-04-24 10:56:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 10:56:33 -HTTP METHOD : GET
2019-04-24 10:56:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 10:56:33 -参数 : [userType]
2019-04-24 10:56:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 10:56:33 -==> Parameters: userType(String)
2019-04-24 10:56:33 -<==      Total: 4
2019-04-24 10:56:33 -耗时 : 7
2019-04-24 10:56:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 10:56:34 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:56:34 -HTTP METHOD : GET
2019-04-24 10:56:34 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:56:34 -参数 : []
2019-04-24 10:56:34 -耗时 : 1
2019-04-24 10:56:34 -返回值 : charts/tableDD
2019-04-24 10:57:34 -请求地址 : http://localhost:8081/index
2019-04-24 10:57:34 -HTTP METHOD : GET
2019-04-24 10:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:57:34 -参数 : [{}]
2019-04-24 10:57:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:57:34 -==> Parameters: 1(Long)
2019-04-24 10:57:34 -<==      Total: 49
2019-04-24 10:57:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:57:34 -==> Parameters: 138(Long)
2019-04-24 10:57:34 -<==      Total: 1
2019-04-24 10:57:34 -耗时 : 29
2019-04-24 10:57:34 -返回值 : index_v1
2019-04-24 10:57:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:57:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:57:34.146(Timestamp)
2019-04-24 10:57:34 -请求地址 : http://localhost:8081/main
2019-04-24 10:57:34 -HTTP METHOD : GET
2019-04-24 10:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:57:34 -参数 : []
2019-04-24 10:57:34 -耗时 : 0
2019-04-24 10:57:34 -返回值 : main
2019-04-24 10:57:34 -<==    Updates: 1
2019-04-24 10:57:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:57:34 -HTTP METHOD : GET
2019-04-24 10:57:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:57:34 -参数 : []
2019-04-24 10:57:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:57:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:57:34 -<==      Total: 0
2019-04-24 10:57:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:57:34 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:57:34 -<==      Total: 1
2019-04-24 10:57:34 -耗时 : 38
2019-04-24 10:57:34 -返回值 : com.bootdo.common.utils.PageUtils@5b19622f
2019-04-24 10:57:34 -请求地址 : http://localhost:8081/main
2019-04-24 10:57:34 -HTTP METHOD : GET
2019-04-24 10:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:57:34 -参数 : []
2019-04-24 10:57:34 -耗时 : 0
2019-04-24 10:57:34 -返回值 : main
2019-04-24 10:57:40 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:57:40 -HTTP METHOD : GET
2019-04-24 10:57:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:57:40 -参数 : []
2019-04-24 10:57:40 -耗时 : 0
2019-04-24 10:57:40 -返回值 : charts/tableDD
2019-04-24 10:59:10 -请求地址 : http://localhost:8081/index
2019-04-24 10:59:10 -HTTP METHOD : GET
2019-04-24 10:59:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 10:59:10 -参数 : [{}]
2019-04-24 10:59:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 10:59:10 -==> Parameters: 1(Long)
2019-04-24 10:59:10 -<==      Total: 49
2019-04-24 10:59:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 10:59:10 -==> Parameters: 138(Long)
2019-04-24 10:59:10 -<==      Total: 1
2019-04-24 10:59:10 -耗时 : 56
2019-04-24 10:59:10 -返回值 : index_v1
2019-04-24 10:59:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 10:59:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 56(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 10:59:10.706(Timestamp)
2019-04-24 10:59:10 -<==    Updates: 1
2019-04-24 10:59:10 -请求地址 : http://localhost:8081/main
2019-04-24 10:59:10 -HTTP METHOD : GET
2019-04-24 10:59:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:59:10 -参数 : []
2019-04-24 10:59:10 -耗时 : 1
2019-04-24 10:59:10 -返回值 : main
2019-04-24 10:59:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 10:59:10 -HTTP METHOD : GET
2019-04-24 10:59:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 10:59:10 -参数 : []
2019-04-24 10:59:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 10:59:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 10:59:10 -<==      Total: 0
2019-04-24 10:59:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 10:59:10 -==> Parameters: 1(Long), 0(String)
2019-04-24 10:59:10 -<==      Total: 1
2019-04-24 10:59:10 -耗时 : 9
2019-04-24 10:59:10 -返回值 : com.bootdo.common.utils.PageUtils@3ba138cb
2019-04-24 10:59:11 -请求地址 : http://localhost:8081/main
2019-04-24 10:59:11 -HTTP METHOD : GET
2019-04-24 10:59:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 10:59:11 -参数 : []
2019-04-24 10:59:11 -耗时 : 0
2019-04-24 10:59:11 -返回值 : main
2019-04-24 10:59:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 10:59:16 -==> Parameters: 1(Long)
2019-04-24 10:59:16 -<==      Total: 93
2019-04-24 10:59:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 10:59:16 -HTTP METHOD : GET
2019-04-24 10:59:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 10:59:16 -参数 : []
2019-04-24 10:59:16 -耗时 : 0
2019-04-24 10:59:16 -返回值 : charts/tableDD
2019-04-24 10:59:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 10:59:37 -HTTP METHOD : GET
2019-04-24 10:59:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 10:59:37 -参数 : []
2019-04-24 10:59:37 -耗时 : 1
2019-04-24 10:59:37 -返回值 : system/dept/deptTree
2019-04-24 10:59:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 10:59:37 -HTTP METHOD : GET
2019-04-24 10:59:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 10:59:37 -参数 : []
2019-04-24 10:59:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 10:59:37 -==> Parameters: 
2019-04-24 10:59:37 -<==      Total: 3
2019-04-24 10:59:37 -耗时 : 5
2019-04-24 10:59:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 10:59:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:59:40 -HTTP METHOD : POST
2019-04-24 10:59:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:59:40 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@29e7d5ab, com.bootdo.moneyLog.vo.WaterLogVo@4836c482, com.bootdo.moneyLog.vo.HeatLogVo@6ae1338d]
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:40 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:40 -<==      Total: 1
2019-04-24 10:59:40 -耗时 : 130
2019-04-24 10:59:40 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:59:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:59:41 -HTTP METHOD : POST
2019-04-24 10:59:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:59:41 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@977e4e1, com.bootdo.moneyLog.vo.WaterLogVo@47310515, com.bootdo.moneyLog.vo.HeatLogVo@38faf098]
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:41 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:41 -<==      Total: 1
2019-04-24 10:59:41 -耗时 : 91
2019-04-24 10:59:41 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:59:42 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:59:42 -HTTP METHOD : POST
2019-04-24 10:59:42 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:59:42 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3481b698, com.bootdo.moneyLog.vo.WaterLogVo@79d86e5, com.bootdo.moneyLog.vo.HeatLogVo@7e8cffc]
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:42 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:42 -<==      Total: 1
2019-04-24 10:59:42 -耗时 : 103
2019-04-24 10:59:42 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 10:59:46 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 10:59:46 -HTTP METHOD : POST
2019-04-24 10:59:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 10:59:46 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@148761ea, com.bootdo.moneyLog.vo.WaterLogVo@71bb543c, com.bootdo.moneyLog.vo.HeatLogVo@6bc5039d]
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 10:59:46 -==> Parameters: 2019-04-19 00:00:00(String), 2019-04-19 23:59:59(String), 2(String)
2019-04-24 10:59:46 -<==      Total: 1
2019-04-24 10:59:46 -耗时 : 107
2019-04-24 10:59:46 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 11:00:19 -请求地址 : http://localhost:8081/index
2019-04-24 11:00:19 -HTTP METHOD : GET
2019-04-24 11:00:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:00:19 -参数 : [{}]
2019-04-24 11:00:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:00:19 -==> Parameters: 1(Long)
2019-04-24 11:00:19 -<==      Total: 49
2019-04-24 11:00:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:00:19 -==> Parameters: 138(Long)
2019-04-24 11:00:19 -<==      Total: 1
2019-04-24 11:00:19 -耗时 : 102
2019-04-24 11:00:19 -返回值 : index_v1
2019-04-24 11:00:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:00:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 102(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:00:19.55(Timestamp)
2019-04-24 11:00:19 -请求地址 : http://localhost:8081/main
2019-04-24 11:00:19 -HTTP METHOD : GET
2019-04-24 11:00:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:00:19 -参数 : []
2019-04-24 11:00:19 -耗时 : 0
2019-04-24 11:00:19 -返回值 : main
2019-04-24 11:00:19 -<==    Updates: 1
2019-04-24 11:00:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:00:19 -HTTP METHOD : GET
2019-04-24 11:00:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:00:19 -参数 : []
2019-04-24 11:00:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:00:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:00:19 -<==      Total: 0
2019-04-24 11:00:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:00:19 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:00:19 -<==      Total: 1
2019-04-24 11:00:19 -耗时 : 7
2019-04-24 11:00:19 -返回值 : com.bootdo.common.utils.PageUtils@71e4af3
2019-04-24 11:00:19 -请求地址 : http://localhost:8081/main
2019-04-24 11:00:19 -HTTP METHOD : GET
2019-04-24 11:00:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:00:19 -参数 : []
2019-04-24 11:00:19 -耗时 : 0
2019-04-24 11:00:19 -返回值 : main
2019-04-24 11:03:11 -请求地址 : http://localhost:8081/index
2019-04-24 11:03:11 -HTTP METHOD : GET
2019-04-24 11:03:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:03:11 -参数 : [{}]
2019-04-24 11:03:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:03:11 -==> Parameters: 1(Long)
2019-04-24 11:03:11 -<==      Total: 49
2019-04-24 11:03:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:03:11 -==> Parameters: 138(Long)
2019-04-24 11:03:11 -<==      Total: 1
2019-04-24 11:03:11 -耗时 : 31
2019-04-24 11:03:11 -返回值 : index_v1
2019-04-24 11:03:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:03:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:03:11.159(Timestamp)
2019-04-24 11:03:11 -请求地址 : http://localhost:8081/main
2019-04-24 11:03:11 -HTTP METHOD : GET
2019-04-24 11:03:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:03:11 -参数 : []
2019-04-24 11:03:11 -耗时 : 0
2019-04-24 11:03:11 -返回值 : main
2019-04-24 11:03:11 -<==    Updates: 1
2019-04-24 11:03:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:03:11 -HTTP METHOD : GET
2019-04-24 11:03:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:03:11 -参数 : []
2019-04-24 11:03:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:03:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:03:11 -<==      Total: 0
2019-04-24 11:03:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:03:11 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:03:11 -<==      Total: 1
2019-04-24 11:03:11 -耗时 : 6
2019-04-24 11:03:11 -返回值 : com.bootdo.common.utils.PageUtils@2f65c596
2019-04-24 11:03:11 -请求地址 : http://localhost:8081/main
2019-04-24 11:03:11 -HTTP METHOD : GET
2019-04-24 11:03:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:03:11 -参数 : []
2019-04-24 11:03:11 -耗时 : 0
2019-04-24 11:03:11 -返回值 : main
2019-04-24 11:03:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 11:03:16 -HTTP METHOD : GET
2019-04-24 11:03:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 11:03:16 -参数 : []
2019-04-24 11:03:16 -耗时 : 0
2019-04-24 11:03:16 -返回值 : charts/tableDD
2019-04-24 11:03:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 11:03:26 -HTTP METHOD : GET
2019-04-24 11:03:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 11:03:26 -参数 : []
2019-04-24 11:03:26 -耗时 : 1
2019-04-24 11:03:26 -返回值 : system/dept/deptTree
2019-04-24 11:03:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 11:03:26 -HTTP METHOD : GET
2019-04-24 11:03:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 11:03:26 -参数 : []
2019-04-24 11:03:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 11:03:26 -==> Parameters: 
2019-04-24 11:03:26 -<==      Total: 3
2019-04-24 11:03:26 -耗时 : 3
2019-04-24 11:03:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 11:03:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 11:03:28 -HTTP METHOD : POST
2019-04-24 11:03:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 11:03:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1efe53e6, com.bootdo.moneyLog.vo.WaterLogVo@67849581, com.bootdo.moneyLog.vo.HeatLogVo@21303b96]
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:03:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:03:28 -<==      Total: 1
2019-04-24 11:03:28 -耗时 : 114
2019-04-24 11:03:28 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 11:03:37 -请求地址 : http://localhost:8081/index
2019-04-24 11:03:37 -HTTP METHOD : GET
2019-04-24 11:03:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:03:37 -参数 : [{}]
2019-04-24 11:03:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:03:37 -==> Parameters: 1(Long)
2019-04-24 11:03:37 -<==      Total: 49
2019-04-24 11:03:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:03:37 -==> Parameters: 138(Long)
2019-04-24 11:03:37 -<==      Total: 1
2019-04-24 11:03:37 -耗时 : 31
2019-04-24 11:03:37 -返回值 : index_v1
2019-04-24 11:03:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:03:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:03:37.159(Timestamp)
2019-04-24 11:03:37 -请求地址 : http://localhost:8081/main
2019-04-24 11:03:37 -HTTP METHOD : GET
2019-04-24 11:03:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:03:37 -参数 : []
2019-04-24 11:03:37 -耗时 : 1
2019-04-24 11:03:37 -返回值 : main
2019-04-24 11:03:37 -<==    Updates: 1
2019-04-24 11:03:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:03:37 -HTTP METHOD : GET
2019-04-24 11:03:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:03:37 -参数 : []
2019-04-24 11:03:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:03:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:03:37 -<==      Total: 0
2019-04-24 11:03:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:03:37 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:03:37 -<==      Total: 1
2019-04-24 11:03:37 -耗时 : 6
2019-04-24 11:03:37 -返回值 : com.bootdo.common.utils.PageUtils@2d9ce528
2019-04-24 11:03:37 -请求地址 : http://localhost:8081/main
2019-04-24 11:03:37 -HTTP METHOD : GET
2019-04-24 11:03:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:03:37 -参数 : []
2019-04-24 11:03:37 -耗时 : 1
2019-04-24 11:03:37 -返回值 : main
2019-04-24 11:03:42 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 11:03:42 -HTTP METHOD : GET
2019-04-24 11:03:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 11:03:42 -参数 : []
2019-04-24 11:03:42 -耗时 : 1
2019-04-24 11:03:42 -返回值 : charts/countDD
2019-04-24 11:03:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:03:43 -HTTP METHOD : GET
2019-04-24 11:03:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:03:43 -参数 : [userType]
2019-04-24 11:03:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:03:43 -==> Parameters: userType(String)
2019-04-24 11:03:43 -<==      Total: 4
2019-04-24 11:03:43 -耗时 : 9
2019-04-24 11:03:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:03:44 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 11:03:44 -HTTP METHOD : GET
2019-04-24 11:03:44 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 11:03:44 -参数 : []
2019-04-24 11:03:44 -耗时 : 0
2019-04-24 11:03:44 -返回值 : charts/tableDD
2019-04-24 11:03:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 11:03:58 -HTTP METHOD : GET
2019-04-24 11:03:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 11:03:58 -参数 : []
2019-04-24 11:03:58 -耗时 : 1
2019-04-24 11:03:58 -返回值 : system/dept/deptTree
2019-04-24 11:03:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 11:03:58 -HTTP METHOD : GET
2019-04-24 11:03:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 11:03:58 -参数 : []
2019-04-24 11:03:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 11:03:58 -==> Parameters: 
2019-04-24 11:03:58 -<==      Total: 3
2019-04-24 11:03:58 -耗时 : 6
2019-04-24 11:03:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 11:04:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 11:04:01 -HTTP METHOD : POST
2019-04-24 11:04:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 11:04:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3d7817ee, com.bootdo.moneyLog.vo.WaterLogVo@4f430c84, com.bootdo.moneyLog.vo.HeatLogVo@173c7682]
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:04:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:04:01 -<==      Total: 1
2019-04-24 11:04:01 -耗时 : 93
2019-04-24 11:04:01 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 11:18:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-04-24 11:26:44 -请求地址 : http://localhost:8081/login;JSESSIONID=908d7dd7-385e-414e-83ab-076a143aab69
2019-04-24 11:26:44 -HTTP METHOD : GET
2019-04-24 11:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 11:26:44 -参数 : [{}]
2019-04-24 11:26:44 -耗时 : 1
2019-04-24 11:26:44 -返回值 : login
2019-04-24 11:26:47 -请求地址 : http://localhost:8081/getVerify
2019-04-24 11:26:47 -HTTP METHOD : GET
2019-04-24 11:26:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 11:26:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@199a27c4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38e5937e]
2019-04-24 11:26:47 -0449
2019-04-24 11:26:47 -耗时 : 364
2019-04-24 11:26:47 -返回值 : null
2019-04-24 11:26:52 -请求地址 : http://localhost:8081/login
2019-04-24 11:26:52 -HTTP METHOD : POST
2019-04-24 11:26:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 11:26:52 -参数 : [admin, 111111, 0449, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5873bddf]
2019-04-24 11:26:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 11:26:52 -==> Parameters: admin(String)
2019-04-24 11:26:52 -<==      Total: 1
2019-04-24 11:26:52 -耗时 : 14
2019-04-24 11:26:52 -返回值 : {msg=操作成功, code=0}
2019-04-24 11:26:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:26:52 -==> Parameters: 1(Long), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 11:26:52.743(Timestamp)
2019-04-24 11:26:52 -请求地址 : http://localhost:8081/index
2019-04-24 11:26:52 -HTTP METHOD : GET
2019-04-24 11:26:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:26:52 -参数 : [{}]
2019-04-24 11:26:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:26:52 -==> Parameters: 1(Long)
2019-04-24 11:26:53 -<==    Updates: 1
2019-04-24 11:26:55 -<==      Total: 49
2019-04-24 11:26:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:26:55 -==> Parameters: 138(Long)
2019-04-24 11:26:55 -<==      Total: 1
2019-04-24 11:26:55 -耗时 : 2472
2019-04-24 11:26:55 -返回值 : index_v1
2019-04-24 11:26:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:26:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2472(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:26:55.236(Timestamp)
2019-04-24 11:26:55 -请求地址 : http://localhost:8081/main
2019-04-24 11:26:55 -HTTP METHOD : GET
2019-04-24 11:26:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:26:55 -参数 : []
2019-04-24 11:26:55 -耗时 : 0
2019-04-24 11:26:55 -返回值 : main
2019-04-24 11:26:58 -<==    Updates: 1
2019-04-24 11:26:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:26:59 -HTTP METHOD : GET
2019-04-24 11:26:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:26:59 -参数 : []
2019-04-24 11:26:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:26:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:26:59 -请求地址 : http://localhost:8081/main
2019-04-24 11:26:59 -HTTP METHOD : GET
2019-04-24 11:26:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:26:59 -参数 : []
2019-04-24 11:26:59 -耗时 : 1
2019-04-24 11:26:59 -返回值 : main
2019-04-24 11:26:59 -<==      Total: 0
2019-04-24 11:26:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:26:59 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:26:59 -<==      Total: 1
2019-04-24 11:26:59 -耗时 : 542
2019-04-24 11:26:59 -返回值 : com.bootdo.common.utils.PageUtils@14cfc114
2019-04-24 11:27:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 11:27:04 -==> Parameters: 1(Long)
2019-04-24 11:27:04 -<==      Total: 93
2019-04-24 11:27:05 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 11:27:05 -HTTP METHOD : GET
2019-04-24 11:27:05 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 11:27:05 -参数 : []
2019-04-24 11:27:05 -耗时 : 0
2019-04-24 11:27:05 -返回值 : charts/countDD
2019-04-24 11:27:05 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 11:27:05 -HTTP METHOD : GET
2019-04-24 11:27:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 11:27:05 -参数 : []
2019-04-24 11:27:05 -耗时 : 1
2019-04-24 11:27:05 -返回值 : charts/tableDD
2019-04-24 11:27:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:27:06 -HTTP METHOD : GET
2019-04-24 11:27:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:27:06 -参数 : [userType]
2019-04-24 11:27:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:27:06 -==> Parameters: userType(String)
2019-04-24 11:27:06 -<==      Total: 4
2019-04-24 11:27:06 -耗时 : 127
2019-04-24 11:27:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:27:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 11:27:58 -HTTP METHOD : GET
2019-04-24 11:27:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 11:27:58 -参数 : []
2019-04-24 11:27:58 -耗时 : 1
2019-04-24 11:27:58 -返回值 : system/dept/deptTree
2019-04-24 11:27:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 11:27:58 -HTTP METHOD : GET
2019-04-24 11:27:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 11:27:58 -参数 : []
2019-04-24 11:27:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 11:27:58 -==> Parameters: 
2019-04-24 11:27:58 -<==      Total: 3
2019-04-24 11:27:58 -耗时 : 43
2019-04-24 11:27:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 11:28:00 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 11:28:00 -HTTP METHOD : POST
2019-04-24 11:28:00 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 11:28:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@219ea8d1, com.bootdo.moneyLog.vo.WaterLogVo@35defa33, com.bootdo.moneyLog.vo.HeatLogVo@7ae19664]
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 11:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 11:28:00 -<==      Total: 1
2019-04-24 11:28:00 -耗时 : 402
2019-04-24 11:28:00 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 11:28:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:28:27 -HTTP METHOD : GET
2019-04-24 11:28:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:28:27 -参数 : []
2019-04-24 11:28:27 -耗时 : 1
2019-04-24 11:28:27 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:28:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:28 -HTTP METHOD : GET
2019-04-24 11:28:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:28 -参数 : [userType]
2019-04-24 11:28:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:28 -==> Parameters: userType(String)
2019-04-24 11:28:28 -<==      Total: 4
2019-04-24 11:28:28 -耗时 : 8
2019-04-24 11:28:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:28:28 -HTTP METHOD : GET
2019-04-24 11:28:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:28:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:28:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:28:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:28 -<==      Total: 10
2019-04-24 11:28:28 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:28:28 -==> Parameters: 
2019-04-24 11:28:28 -<==      Total: 1
2019-04-24 11:28:28 -耗时 : 231
2019-04-24 11:28:28 -返回值 : com.bootdo.common.utils.PageUtils@705e84dc
2019-04-24 11:28:31 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 11:28:31 -HTTP METHOD : GET
2019-04-24 11:28:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 11:28:31 -参数 : []
2019-04-24 11:28:31 -耗时 : 1
2019-04-24 11:28:31 -返回值 : /moneyList/moneyList
2019-04-24 11:28:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-24 11:28:42 -HTTP METHOD : GET
2019-04-24 11:28:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-24 11:28:42 -参数 : [1, {}]
2019-04-24 11:28:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-24 11:28:42 -==> Parameters: 1(Long)
2019-04-24 11:28:42 -<==      Total: 1
2019-04-24 11:28:42 -耗时 : 22
2019-04-24 11:28:42 -返回值 : moneyLog/elecLog/edit
2019-04-24 11:28:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:42 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 11:28:42 -HTTP METHOD : GET
2019-04-24 11:28:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:42 -参数 : [elecType]
2019-04-24 11:28:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:42 -==> Parameters: elecType(String)
2019-04-24 11:28:42 -<==      Total: 11
2019-04-24 11:28:42 -耗时 : 5
2019-04-24 11:28:42 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:42 -HTTP METHOD : GET
2019-04-24 11:28:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:42 -参数 : [userType]
2019-04-24 11:28:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:42 -==> Parameters: userType(String)
2019-04-24 11:28:42 -<==      Total: 4
2019-04-24 11:28:42 -耗时 : 116
2019-04-24 11:28:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 11:28:51 -HTTP METHOD : GET
2019-04-24 11:28:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 11:28:51 -参数 : []
2019-04-24 11:28:51 -耗时 : 1
2019-04-24 11:28:51 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 11:28:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:51 -HTTP METHOD : GET
2019-04-24 11:28:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:51 -参数 : [userType]
2019-04-24 11:28:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:51 -==> Parameters: userType(String)
2019-04-24 11:28:51 -<==      Total: 4
2019-04-24 11:28:51 -耗时 : 5
2019-04-24 11:28:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 11:28:51 -HTTP METHOD : GET
2019-04-24 11:28:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 11:28:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 11:28:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 11:28:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:51 -<==      Total: 6
2019-04-24 11:28:51 -==>  Preparing: select count(*) from heat_log 
2019-04-24 11:28:51 -==> Parameters: 
2019-04-24 11:28:51 -<==      Total: 1
2019-04-24 11:28:51 -耗时 : 112
2019-04-24 11:28:51 -返回值 : com.bootdo.common.utils.PageUtils@463aab2e
2019-04-24 11:28:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:28:51 -HTTP METHOD : GET
2019-04-24 11:28:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:28:51 -参数 : []
2019-04-24 11:28:51 -耗时 : 0
2019-04-24 11:28:51 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:28:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:52 -HTTP METHOD : GET
2019-04-24 11:28:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:52 -参数 : [userType]
2019-04-24 11:28:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:52 -==> Parameters: userType(String)
2019-04-24 11:28:52 -<==      Total: 4
2019-04-24 11:28:52 -耗时 : 3
2019-04-24 11:28:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:28:52 -HTTP METHOD : GET
2019-04-24 11:28:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:28:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:28:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:28:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:52 -<==      Total: 10
2019-04-24 11:28:52 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:28:52 -==> Parameters: 
2019-04-24 11:28:52 -<==      Total: 1
2019-04-24 11:28:52 -耗时 : 56
2019-04-24 11:28:52 -返回值 : com.bootdo.common.utils.PageUtils@3bfdbb43
2019-04-24 11:28:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 11:28:52 -HTTP METHOD : GET
2019-04-24 11:28:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 11:28:52 -参数 : []
2019-04-24 11:28:52 -耗时 : 19
2019-04-24 11:28:52 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 11:28:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:52 -HTTP METHOD : GET
2019-04-24 11:28:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:52 -参数 : [userType]
2019-04-24 11:28:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:52 -==> Parameters: userType(String)
2019-04-24 11:28:52 -<==      Total: 4
2019-04-24 11:28:52 -耗时 : 3
2019-04-24 11:28:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 11:28:52 -HTTP METHOD : GET
2019-04-24 11:28:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 11:28:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 11:28:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 11:28:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:52 -<==      Total: 6
2019-04-24 11:28:52 -==>  Preparing: select count(*) from heat_log 
2019-04-24 11:28:52 -==> Parameters: 
2019-04-24 11:28:52 -<==      Total: 1
2019-04-24 11:28:52 -耗时 : 33
2019-04-24 11:28:52 -返回值 : com.bootdo.common.utils.PageUtils@6b1f64fc
2019-04-24 11:28:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:28:53 -HTTP METHOD : GET
2019-04-24 11:28:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:28:53 -参数 : []
2019-04-24 11:28:53 -耗时 : 2
2019-04-24 11:28:53 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:28:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:53 -HTTP METHOD : GET
2019-04-24 11:28:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:53 -参数 : [userType]
2019-04-24 11:28:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:53 -==> Parameters: userType(String)
2019-04-24 11:28:53 -<==      Total: 4
2019-04-24 11:28:53 -耗时 : 18
2019-04-24 11:28:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:28:53 -HTTP METHOD : GET
2019-04-24 11:28:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:28:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:28:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:28:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:53 -<==      Total: 10
2019-04-24 11:28:53 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:28:53 -==> Parameters: 
2019-04-24 11:28:53 -<==      Total: 1
2019-04-24 11:28:53 -耗时 : 29
2019-04-24 11:28:53 -返回值 : com.bootdo.common.utils.PageUtils@716038cb
2019-04-24 11:28:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 11:28:54 -HTTP METHOD : GET
2019-04-24 11:28:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 11:28:54 -参数 : []
2019-04-24 11:28:54 -耗时 : 1
2019-04-24 11:28:54 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 11:28:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:54 -HTTP METHOD : GET
2019-04-24 11:28:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:54 -参数 : [userType]
2019-04-24 11:28:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:54 -==> Parameters: userType(String)
2019-04-24 11:28:54 -<==      Total: 4
2019-04-24 11:28:54 -耗时 : 12
2019-04-24 11:28:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 11:28:54 -HTTP METHOD : GET
2019-04-24 11:28:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 11:28:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 11:28:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 11:28:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:54 -<==      Total: 6
2019-04-24 11:28:54 -==>  Preparing: select count(*) from heat_log 
2019-04-24 11:28:54 -==> Parameters: 
2019-04-24 11:28:54 -<==      Total: 1
2019-04-24 11:28:54 -耗时 : 96
2019-04-24 11:28:54 -返回值 : com.bootdo.common.utils.PageUtils@73c90e52
2019-04-24 11:28:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:28:55 -HTTP METHOD : GET
2019-04-24 11:28:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:28:55 -参数 : []
2019-04-24 11:28:55 -耗时 : 0
2019-04-24 11:28:55 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:28:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:55 -HTTP METHOD : GET
2019-04-24 11:28:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:55 -参数 : [userType]
2019-04-24 11:28:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:55 -==> Parameters: userType(String)
2019-04-24 11:28:55 -<==      Total: 4
2019-04-24 11:28:55 -耗时 : 4
2019-04-24 11:28:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:28:55 -HTTP METHOD : GET
2019-04-24 11:28:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:28:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:28:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:28:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:55 -<==      Total: 10
2019-04-24 11:28:55 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:28:55 -==> Parameters: 
2019-04-24 11:28:55 -<==      Total: 1
2019-04-24 11:28:55 -耗时 : 36
2019-04-24 11:28:55 -返回值 : com.bootdo.common.utils.PageUtils@408e4f9c
2019-04-24 11:28:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:28:56 -HTTP METHOD : GET
2019-04-24 11:28:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:28:56 -参数 : []
2019-04-24 11:28:56 -耗时 : 0
2019-04-24 11:28:56 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:28:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:28:57 -HTTP METHOD : GET
2019-04-24 11:28:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:28:57 -参数 : [userType]
2019-04-24 11:28:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:28:57 -==> Parameters: userType(String)
2019-04-24 11:28:57 -<==      Total: 4
2019-04-24 11:28:57 -耗时 : 5
2019-04-24 11:28:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:28:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:28:57 -HTTP METHOD : GET
2019-04-24 11:28:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:28:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:28:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:28:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:28:57 -<==      Total: 10
2019-04-24 11:28:57 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:28:57 -==> Parameters: 
2019-04-24 11:28:57 -<==      Total: 1
2019-04-24 11:28:57 -耗时 : 9
2019-04-24 11:28:57 -返回值 : com.bootdo.common.utils.PageUtils@1bc6e964
2019-04-24 11:32:38 -请求地址 : http://localhost:8081/index
2019-04-24 11:32:38 -HTTP METHOD : GET
2019-04-24 11:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:32:38 -参数 : [{}]
2019-04-24 11:32:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:32:38 -==> Parameters: 1(Long)
2019-04-24 11:32:39 -<==      Total: 49
2019-04-24 11:32:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:32:39 -==> Parameters: 138(Long)
2019-04-24 11:32:39 -<==      Total: 1
2019-04-24 11:32:39 -耗时 : 48
2019-04-24 11:32:39 -返回值 : index_v1
2019-04-24 11:32:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:32:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:32:39.014(Timestamp)
2019-04-24 11:32:39 -请求地址 : http://localhost:8081/main
2019-04-24 11:32:39 -HTTP METHOD : GET
2019-04-24 11:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:32:39 -参数 : []
2019-04-24 11:32:39 -耗时 : 0
2019-04-24 11:32:39 -返回值 : main
2019-04-24 11:32:39 -<==    Updates: 1
2019-04-24 11:32:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:32:39 -HTTP METHOD : GET
2019-04-24 11:32:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:32:39 -参数 : []
2019-04-24 11:32:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:32:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:32:39 -<==      Total: 0
2019-04-24 11:32:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:32:39 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:32:39 -<==      Total: 1
2019-04-24 11:32:39 -耗时 : 9
2019-04-24 11:32:39 -返回值 : com.bootdo.common.utils.PageUtils@432737ca
2019-04-24 11:32:39 -请求地址 : http://localhost:8081/main
2019-04-24 11:32:39 -HTTP METHOD : GET
2019-04-24 11:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:32:39 -参数 : []
2019-04-24 11:32:39 -耗时 : 1
2019-04-24 11:32:39 -返回值 : main
2019-04-24 11:32:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 11:32:41 -HTTP METHOD : GET
2019-04-24 11:32:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 11:32:41 -参数 : []
2019-04-24 11:32:41 -耗时 : 1
2019-04-24 11:32:41 -返回值 : /moneyList/moneyList
2019-04-24 11:32:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:32:42 -HTTP METHOD : GET
2019-04-24 11:32:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:32:42 -参数 : []
2019-04-24 11:32:42 -耗时 : 1
2019-04-24 11:32:42 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:32:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:32:42 -HTTP METHOD : GET
2019-04-24 11:32:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:32:42 -参数 : [userType]
2019-04-24 11:32:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:32:42 -==> Parameters: userType(String)
2019-04-24 11:32:42 -<==      Total: 4
2019-04-24 11:32:42 -耗时 : 5
2019-04-24 11:32:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:32:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:32:42 -HTTP METHOD : GET
2019-04-24 11:32:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:32:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:32:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:32:42 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:32:42 -<==      Total: 10
2019-04-24 11:32:42 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:32:42 -==> Parameters: 
2019-04-24 11:32:42 -<==      Total: 1
2019-04-24 11:32:42 -耗时 : 8
2019-04-24 11:32:42 -返回值 : com.bootdo.common.utils.PageUtils@522bedc9
2019-04-24 11:42:42 -请求地址 : http://localhost:8081/index
2019-04-24 11:42:42 -HTTP METHOD : GET
2019-04-24 11:42:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 11:42:42 -参数 : [{}]
2019-04-24 11:42:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 11:42:42 -==> Parameters: 1(Long)
2019-04-24 11:42:42 -<==      Total: 49
2019-04-24 11:42:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 11:42:42 -==> Parameters: 138(Long)
2019-04-24 11:42:42 -<==      Total: 1
2019-04-24 11:42:42 -耗时 : 34
2019-04-24 11:42:42 -返回值 : index_v1
2019-04-24 11:42:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 11:42:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 11:42:42.899(Timestamp)
2019-04-24 11:42:43 -请求地址 : http://localhost:8081/main
2019-04-24 11:42:43 -HTTP METHOD : GET
2019-04-24 11:42:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:42:43 -参数 : []
2019-04-24 11:42:43 -耗时 : 1
2019-04-24 11:42:43 -返回值 : main
2019-04-24 11:42:43 -<==    Updates: 1
2019-04-24 11:42:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 11:42:43 -HTTP METHOD : GET
2019-04-24 11:42:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 11:42:43 -参数 : []
2019-04-24 11:42:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 11:42:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 11:42:43 -<==      Total: 0
2019-04-24 11:42:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 11:42:43 -==> Parameters: 1(Long), 0(String)
2019-04-24 11:42:43 -<==      Total: 1
2019-04-24 11:42:43 -耗时 : 9
2019-04-24 11:42:43 -返回值 : com.bootdo.common.utils.PageUtils@23ccf377
2019-04-24 11:42:43 -请求地址 : http://localhost:8081/main
2019-04-24 11:42:43 -HTTP METHOD : GET
2019-04-24 11:42:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 11:42:43 -参数 : []
2019-04-24 11:42:43 -耗时 : 1
2019-04-24 11:42:43 -返回值 : main
2019-04-24 11:42:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 11:42:46 -==> Parameters: 1(Long)
2019-04-24 11:42:46 -<==      Total: 93
2019-04-24 11:42:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 11:42:46 -HTTP METHOD : GET
2019-04-24 11:42:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 11:42:46 -参数 : []
2019-04-24 11:42:46 -耗时 : 1
2019-04-24 11:42:46 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 11:42:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 11:42:47 -HTTP METHOD : GET
2019-04-24 11:42:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 11:42:47 -参数 : [userType]
2019-04-24 11:42:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 11:42:47 -==> Parameters: userType(String)
2019-04-24 11:42:47 -<==      Total: 4
2019-04-24 11:42:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 11:42:47 -HTTP METHOD : GET
2019-04-24 11:42:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 11:42:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 11:42:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 11:42:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 11:42:47 -<==      Total: 10
2019-04-24 11:42:47 -==>  Preparing: select count(*) from elec_log 
2019-04-24 11:42:47 -==> Parameters: 
2019-04-24 11:42:47 -<==      Total: 1
2019-04-24 11:42:47 -耗时 : 9
2019-04-24 11:42:47 -返回值 : com.bootdo.common.utils.PageUtils@827c0bc
2019-04-24 11:42:47 -耗时 : 28
2019-04-24 11:42:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 11:48:01 -Validating all active sessions...
2019-04-24 11:48:01 -Finished session validation.  [1] sessions were stopped.
2019-04-24 11:48:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 857]
2019-04-24 12:23:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 2, completed tasks = 1346]
2019-04-24 12:48:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1704]
2019-04-24 12:56:09 -Validating all active sessions...
2019-04-24 12:56:10 -Finished session validation.  [1] sessions were stopped.
2019-04-24 13:45:11 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1941]
2019-04-24 13:45:39 -请求地址 : http://localhost:8081/login;JSESSIONID=f50e6378-3dc3-4ef3-8870-846de7863541
2019-04-24 13:45:39 -HTTP METHOD : GET
2019-04-24 13:45:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 13:45:39 -参数 : [{}]
2019-04-24 13:45:39 -耗时 : 1
2019-04-24 13:45:39 -返回值 : login
2019-04-24 13:45:41 -请求地址 : http://localhost:8081/getVerify
2019-04-24 13:45:41 -HTTP METHOD : GET
2019-04-24 13:45:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 13:45:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4036e0bd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a5e487]
2019-04-24 13:45:41 -6211
2019-04-24 13:45:41 -耗时 : 95
2019-04-24 13:45:41 -返回值 : null
2019-04-24 13:45:41 -请求地址 : http://localhost:8081/login
2019-04-24 13:45:41 -HTTP METHOD : GET
2019-04-24 13:45:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 13:45:41 -参数 : [{}]
2019-04-24 13:45:41 -耗时 : 1
2019-04-24 13:45:41 -返回值 : login
2019-04-24 13:45:52 -请求地址 : http://localhost:8081/login
2019-04-24 13:45:52 -HTTP METHOD : POST
2019-04-24 13:45:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 13:45:52 -参数 : [admin, 111111, 6211, org.apache.shiro.web.servlet.ShiroHttpServletRequest@14986378]
2019-04-24 13:45:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 13:45:52 -==> Parameters: admin(String)
2019-04-24 13:45:52 -<==      Total: 1
2019-04-24 13:45:52 -耗时 : 113
2019-04-24 13:45:52 -返回值 : {msg=操作成功, code=0}
2019-04-24 13:45:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 13:45:52 -==> Parameters: 1(Long), admin(String), 登录(String), 113(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 13:45:52.296(Timestamp)
2019-04-24 13:45:52 -请求地址 : http://localhost:8081/index
2019-04-24 13:45:52 -HTTP METHOD : GET
2019-04-24 13:45:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 13:45:52 -参数 : [{}]
2019-04-24 13:45:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 13:45:52 -==> Parameters: 1(Long)
2019-04-24 13:45:52 -<==      Total: 49
2019-04-24 13:45:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 13:45:52 -==> Parameters: 138(Long)
2019-04-24 13:45:52 -<==      Total: 1
2019-04-24 13:45:52 -耗时 : 25
2019-04-24 13:45:52 -返回值 : index_v1
2019-04-24 13:45:52 -<==    Updates: 1
2019-04-24 13:45:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 13:45:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 13:45:52.369(Timestamp)
2019-04-24 13:45:52 -请求地址 : http://localhost:8081/main
2019-04-24 13:45:52 -HTTP METHOD : GET
2019-04-24 13:45:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 13:45:52 -参数 : []
2019-04-24 13:45:52 -耗时 : 1
2019-04-24 13:45:52 -返回值 : main
2019-04-24 13:45:52 -<==    Updates: 1
2019-04-24 13:45:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 13:45:53 -HTTP METHOD : GET
2019-04-24 13:45:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 13:45:53 -参数 : []
2019-04-24 13:45:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 13:45:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 13:45:53 -<==      Total: 0
2019-04-24 13:45:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 13:45:53 -==> Parameters: 1(Long), 0(String)
2019-04-24 13:45:53 -<==      Total: 1
2019-04-24 13:45:53 -耗时 : 8
2019-04-24 13:45:53 -返回值 : com.bootdo.common.utils.PageUtils@218a32e3
2019-04-24 13:45:53 -请求地址 : http://localhost:8081/main
2019-04-24 13:45:53 -HTTP METHOD : GET
2019-04-24 13:45:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 13:45:53 -参数 : []
2019-04-24 13:45:53 -耗时 : 0
2019-04-24 13:45:53 -返回值 : main
2019-04-24 13:46:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 13:46:05 -==> Parameters: 1(Long)
2019-04-24 13:46:05 -<==      Total: 93
2019-04-24 13:46:05 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 13:46:05 -HTTP METHOD : GET
2019-04-24 13:46:05 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 13:46:05 -参数 : []
2019-04-24 13:46:05 -耗时 : 0
2019-04-24 13:46:05 -返回值 : charts/countDD
2019-04-24 13:46:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 13:46:07 -HTTP METHOD : GET
2019-04-24 13:46:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 13:46:07 -参数 : [userType]
2019-04-24 13:46:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 13:46:07 -==> Parameters: userType(String)
2019-04-24 13:46:08 -<==      Total: 4
2019-04-24 13:46:08 -耗时 : 225
2019-04-24 13:46:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 13:46:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 13:46:11 -HTTP METHOD : GET
2019-04-24 13:46:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 13:46:11 -参数 : []
2019-04-24 13:46:11 -耗时 : 18
2019-04-24 13:46:11 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 13:46:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 13:46:14 -HTTP METHOD : GET
2019-04-24 13:46:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 13:46:14 -参数 : [userType]
2019-04-24 13:46:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 13:46:14 -==> Parameters: userType(String)
2019-04-24 13:46:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 13:46:14 -HTTP METHOD : GET
2019-04-24 13:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 13:46:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 13:46:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 13:46:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 13:46:14 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 13:46:14 -HTTP METHOD : GET
2019-04-24 13:46:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 13:46:14 -参数 : [elecType]
2019-04-24 13:46:14 -<==      Total: 4
2019-04-24 13:46:14 -<==      Total: 10
2019-04-24 13:46:14 -耗时 : 44
2019-04-24 13:46:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 13:46:14 -==> Parameters: elecType(String)
2019-04-24 13:46:14 -==>  Preparing: select count(*) from elec_log 
2019-04-24 13:46:14 -==> Parameters: 
2019-04-24 13:46:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 13:46:14 -<==      Total: 11
2019-04-24 13:46:14 -<==      Total: 1
2019-04-24 13:46:14 -耗时 : 72
2019-04-24 13:46:14 -耗时 : 44
2019-04-24 13:46:14 -返回值 : com.bootdo.common.utils.PageUtils@60060603
2019-04-24 13:46:14 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 13:48:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2472]
2019-04-24 14:09:25 -请求地址 : http://localhost:8081/index
2019-04-24 14:09:25 -HTTP METHOD : GET
2019-04-24 14:09:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 14:09:25 -参数 : [{}]
2019-04-24 14:09:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 14:09:25 -==> Parameters: 1(Long)
2019-04-24 14:09:25 -<==      Total: 49
2019-04-24 14:09:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 14:09:25 -==> Parameters: 138(Long)
2019-04-24 14:09:25 -<==      Total: 1
2019-04-24 14:09:25 -耗时 : 172
2019-04-24 14:09:25 -返回值 : index_v1
2019-04-24 14:09:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:09:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 172(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 14:09:25.254(Timestamp)
2019-04-24 14:09:25 -请求地址 : http://localhost:8081/main
2019-04-24 14:09:25 -HTTP METHOD : GET
2019-04-24 14:09:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:09:25 -参数 : []
2019-04-24 14:09:25 -耗时 : 0
2019-04-24 14:09:25 -返回值 : main
2019-04-24 14:09:25 -<==    Updates: 1
2019-04-24 14:09:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 14:09:26 -HTTP METHOD : GET
2019-04-24 14:09:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 14:09:26 -参数 : []
2019-04-24 14:09:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 14:09:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 14:09:26 -请求地址 : http://localhost:8081/main
2019-04-24 14:09:26 -HTTP METHOD : GET
2019-04-24 14:09:26 -<==      Total: 0
2019-04-24 14:09:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:09:26 -参数 : []
2019-04-24 14:09:26 -耗时 : 1
2019-04-24 14:09:26 -返回值 : main
2019-04-24 14:09:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 14:09:26 -==> Parameters: 1(Long), 0(String)
2019-04-24 14:09:26 -<==      Total: 1
2019-04-24 14:09:26 -耗时 : 81
2019-04-24 14:09:26 -返回值 : com.bootdo.common.utils.PageUtils@fca5271
2019-04-24 14:18:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(13)-CONNECTED(13)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 156], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 26], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2905]
2019-04-24 14:28:27 -Validating all active sessions...
2019-04-24 14:28:27 -Finished session validation.  No sessions were stopped.
2019-04-24 14:45:20 -请求地址 : http://localhost:8081/login;JSESSIONID=99565ecf-b9a5-4e4e-bb68-d08ac9deb008
2019-04-24 14:45:20 -HTTP METHOD : GET
2019-04-24 14:45:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 14:45:20 -参数 : [{}]
2019-04-24 14:45:20 -耗时 : 1
2019-04-24 14:45:20 -返回值 : login
2019-04-24 14:45:21 -请求地址 : http://localhost:8081/getVerify
2019-04-24 14:45:21 -HTTP METHOD : GET
2019-04-24 14:45:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 14:45:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d494383, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40f51e3a]
2019-04-24 14:45:21 -3371
2019-04-24 14:45:21 -耗时 : 47
2019-04-24 14:45:21 -返回值 : null
2019-04-24 14:45:21 -请求地址 : http://localhost:8081/login
2019-04-24 14:45:21 -HTTP METHOD : GET
2019-04-24 14:45:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 14:45:21 -参数 : [{}]
2019-04-24 14:45:21 -耗时 : 1
2019-04-24 14:45:21 -返回值 : login
2019-04-24 14:45:25 -请求地址 : http://localhost:8081/login
2019-04-24 14:45:25 -HTTP METHOD : POST
2019-04-24 14:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 14:45:25 -参数 : [admin, 111111, 3371, org.apache.shiro.web.servlet.ShiroHttpServletRequest@27a8883a]
2019-04-24 14:45:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 14:45:25 -==> Parameters: admin(String)
2019-04-24 14:45:25 -<==      Total: 1
2019-04-24 14:45:25 -耗时 : 93
2019-04-24 14:45:25 -返回值 : {msg=操作成功, code=0}
2019-04-24 14:45:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:45:25 -请求地址 : http://localhost:8081/index
2019-04-24 14:45:25 -HTTP METHOD : GET
2019-04-24 14:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 14:45:25 -参数 : [{}]
2019-04-24 14:45:26 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 14:45:25.906(Timestamp)
2019-04-24 14:45:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 14:45:26 -==> Parameters: 1(Long)
2019-04-24 14:45:26 -<==      Total: 49
2019-04-24 14:45:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 14:45:26 -==> Parameters: 138(Long)
2019-04-24 14:45:26 -<==      Total: 1
2019-04-24 14:45:26 -耗时 : 263
2019-04-24 14:45:26 -返回值 : index_v1
2019-04-24 14:45:26 -<==    Updates: 1
2019-04-24 14:45:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:45:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 264(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 14:45:26.219(Timestamp)
2019-04-24 14:45:26 -请求地址 : http://localhost:8081/main
2019-04-24 14:45:26 -HTTP METHOD : GET
2019-04-24 14:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:45:26 -参数 : []
2019-04-24 14:45:26 -耗时 : 1
2019-04-24 14:45:26 -返回值 : main
2019-04-24 14:45:26 -<==    Updates: 1
2019-04-24 14:45:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 14:45:26 -HTTP METHOD : GET
2019-04-24 14:45:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 14:45:26 -参数 : []
2019-04-24 14:45:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 14:45:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 14:45:26 -<==      Total: 0
2019-04-24 14:45:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 14:45:26 -==> Parameters: 1(Long), 0(String)
2019-04-24 14:45:26 -<==      Total: 1
2019-04-24 14:45:26 -耗时 : 7
2019-04-24 14:45:26 -请求地址 : http://localhost:8081/main
2019-04-24 14:45:26 -HTTP METHOD : GET
2019-04-24 14:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:45:26 -参数 : []
2019-04-24 14:45:26 -耗时 : 0
2019-04-24 14:45:26 -返回值 : main
2019-04-24 14:45:26 -返回值 : com.bootdo.common.utils.PageUtils@547ecc45
2019-04-24 14:45:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 14:45:35 -==> Parameters: 1(Long)
2019-04-24 14:45:35 -<==      Total: 93
2019-04-24 14:45:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 14:45:35 -HTTP METHOD : GET
2019-04-24 14:45:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 14:45:35 -参数 : []
2019-04-24 14:45:35 -耗时 : 1
2019-04-24 14:45:35 -返回值 : /moneyList/moneyList
2019-04-24 14:45:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:45:39 -HTTP METHOD : GET
2019-04-24 14:45:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:45:39 -参数 : []
2019-04-24 14:45:39 -耗时 : 1
2019-04-24 14:45:39 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:45:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:45:39 -HTTP METHOD : GET
2019-04-24 14:45:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:45:39 -参数 : [elecType]
2019-04-24 14:45:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:45:39 -==> Parameters: elecType(String)
2019-04-24 14:45:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:45:39 -HTTP METHOD : GET
2019-04-24 14:45:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:45:39 -参数 : [userType]
2019-04-24 14:45:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:45:39 -==> Parameters: userType(String)
2019-04-24 14:45:39 -<==      Total: 4
2019-04-24 14:45:39 -耗时 : 15
2019-04-24 14:45:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:45:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:45:39 -HTTP METHOD : GET
2019-04-24 14:45:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:45:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:45:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:45:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:45:39 -<==      Total: 10
2019-04-24 14:45:39 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:45:39 -==> Parameters: 
2019-04-24 14:45:39 -<==      Total: 1
2019-04-24 14:45:39 -耗时 : 9
2019-04-24 14:45:39 -返回值 : com.bootdo.common.utils.PageUtils@636afdc0
2019-04-24 14:45:39 -<==      Total: 11
2019-04-24 14:45:39 -耗时 : 169
2019-04-24 14:45:39 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:45:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:45:43 -HTTP METHOD : GET
2019-04-24 14:45:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:45:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=6}]
2019-04-24 14:45:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:45:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:45:43 -<==      Total: 10
2019-04-24 14:45:43 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:45:43 -==> Parameters: 
2019-04-24 14:45:43 -<==      Total: 1
2019-04-24 14:45:43 -耗时 : 71
2019-04-24 14:45:43 -返回值 : com.bootdo.common.utils.PageUtils@5bf3f47c
2019-04-24 14:45:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:45:48 -HTTP METHOD : GET
2019-04-24 14:45:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:45:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=9}]
2019-04-24 14:45:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:45:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:45:48 -<==      Total: 10
2019-04-24 14:45:48 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:45:48 -==> Parameters: 
2019-04-24 14:45:48 -<==      Total: 1
2019-04-24 14:45:48 -耗时 : 5
2019-04-24 14:45:48 -返回值 : com.bootdo.common.utils.PageUtils@6e8e85bf
2019-04-24 14:45:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:45:50 -HTTP METHOD : GET
2019-04-24 14:45:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:45:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=10}]
2019-04-24 14:45:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:45:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:45:50 -<==      Total: 10
2019-04-24 14:45:50 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:45:50 -==> Parameters: 
2019-04-24 14:45:50 -<==      Total: 1
2019-04-24 14:45:50 -耗时 : 48
2019-04-24 14:45:50 -返回值 : com.bootdo.common.utils.PageUtils@4f3f070a
2019-04-24 14:46:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:00 -HTTP METHOD : GET
2019-04-24 14:46:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=7}]
2019-04-24 14:46:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:00 -<==      Total: 10
2019-04-24 14:46:00 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:00 -==> Parameters: 
2019-04-24 14:46:00 -<==      Total: 1
2019-04-24 14:46:00 -耗时 : 14
2019-04-24 14:46:00 -返回值 : com.bootdo.common.utils.PageUtils@48c262b8
2019-04-24 14:46:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:03 -HTTP METHOD : GET
2019-04-24 14:46:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=5}]
2019-04-24 14:46:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:03 -<==      Total: 10
2019-04-24 14:46:03 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:03 -==> Parameters: 
2019-04-24 14:46:03 -<==      Total: 1
2019-04-24 14:46:03 -耗时 : 7
2019-04-24 14:46:03 -返回值 : com.bootdo.common.utils.PageUtils@1f9ebce8
2019-04-24 14:46:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:05 -HTTP METHOD : GET
2019-04-24 14:46:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=9}]
2019-04-24 14:46:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:05 -<==      Total: 10
2019-04-24 14:46:05 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:05 -==> Parameters: 
2019-04-24 14:46:05 -<==      Total: 1
2019-04-24 14:46:05 -耗时 : 9
2019-04-24 14:46:05 -返回值 : com.bootdo.common.utils.PageUtils@647558f4
2019-04-24 14:46:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:16 -HTTP METHOD : GET
2019-04-24 14:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:16 -参数 : []
2019-04-24 14:46:16 -耗时 : 2
2019-04-24 14:46:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:16 -HTTP METHOD : GET
2019-04-24 14:46:16 -HTTP METHOD : GET
2019-04-24 14:46:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:16 -参数 : [userType]
2019-04-24 14:46:16 -参数 : [heatType]
2019-04-24 14:46:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:16 -==> Parameters: heatType(String)
2019-04-24 14:46:16 -==> Parameters: userType(String)
2019-04-24 14:46:16 -<==      Total: 4
2019-04-24 14:46:16 -<==      Total: 4
2019-04-24 14:46:16 -耗时 : 3
2019-04-24 14:46:16 -耗时 : 3
2019-04-24 14:46:16 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:16 -HTTP METHOD : GET
2019-04-24 14:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:16 -<==      Total: 6
2019-04-24 14:46:16 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:16 -==> Parameters: 
2019-04-24 14:46:16 -<==      Total: 1
2019-04-24 14:46:16 -耗时 : 33
2019-04-24 14:46:16 -返回值 : com.bootdo.common.utils.PageUtils@381a362b
2019-04-24 14:46:19 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:19 -HTTP METHOD : GET
2019-04-24 14:46:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:19 -参数 : []
2019-04-24 14:46:19 -耗时 : 13
2019-04-24 14:46:19 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:20 -HTTP METHOD : GET
2019-04-24 14:46:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:20 -参数 : [userType]
2019-04-24 14:46:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:20 -==> Parameters: userType(String)
2019-04-24 14:46:20 -<==      Total: 4
2019-04-24 14:46:20 -耗时 : 4
2019-04-24 14:46:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:20 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:46:20 -HTTP METHOD : GET
2019-04-24 14:46:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:20 -参数 : [waterType]
2019-04-24 14:46:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:20 -==> Parameters: waterType(String)
2019-04-24 14:46:20 -<==      Total: 2
2019-04-24 14:46:20 -耗时 : 4
2019-04-24 14:46:20 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:46:20 -HTTP METHOD : GET
2019-04-24 14:46:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:46:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:46:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:46:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:20 -<==      Total: 6
2019-04-24 14:46:20 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:46:20 -==> Parameters: 
2019-04-24 14:46:20 -<==      Total: 1
2019-04-24 14:46:20 -耗时 : 191
2019-04-24 14:46:20 -返回值 : com.bootdo.common.utils.PageUtils@28697c00
2019-04-24 14:46:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:21 -HTTP METHOD : GET
2019-04-24 14:46:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:21 -参数 : []
2019-04-24 14:46:21 -耗时 : 1
2019-04-24 14:46:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:21 -HTTP METHOD : GET
2019-04-24 14:46:21 -HTTP METHOD : GET
2019-04-24 14:46:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:21 -参数 : [heatType]
2019-04-24 14:46:21 -参数 : [userType]
2019-04-24 14:46:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:21 -==> Parameters: heatType(String)
2019-04-24 14:46:21 -==> Parameters: userType(String)
2019-04-24 14:46:21 -<==      Total: 4
2019-04-24 14:46:21 -<==      Total: 4
2019-04-24 14:46:21 -耗时 : 5
2019-04-24 14:46:21 -耗时 : 5
2019-04-24 14:46:21 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:21 -HTTP METHOD : GET
2019-04-24 14:46:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:21 -<==      Total: 6
2019-04-24 14:46:21 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:21 -==> Parameters: 
2019-04-24 14:46:21 -<==      Total: 1
2019-04-24 14:46:21 -耗时 : 35
2019-04-24 14:46:21 -返回值 : com.bootdo.common.utils.PageUtils@6b057a46
2019-04-24 14:46:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:21 -HTTP METHOD : GET
2019-04-24 14:46:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:21 -参数 : []
2019-04-24 14:46:21 -耗时 : 1
2019-04-24 14:46:21 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:22 -HTTP METHOD : GET
2019-04-24 14:46:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:22 -参数 : [userType]
2019-04-24 14:46:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:22 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:46:22 -HTTP METHOD : GET
2019-04-24 14:46:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:22 -==> Parameters: userType(String)
2019-04-24 14:46:22 -参数 : [waterType]
2019-04-24 14:46:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:22 -==> Parameters: waterType(String)
2019-04-24 14:46:22 -<==      Total: 4
2019-04-24 14:46:22 -耗时 : 4
2019-04-24 14:46:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:22 -<==      Total: 2
2019-04-24 14:46:22 -耗时 : 4
2019-04-24 14:46:22 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:46:22 -HTTP METHOD : GET
2019-04-24 14:46:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:46:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:46:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:46:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:22 -<==      Total: 6
2019-04-24 14:46:22 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:46:22 -==> Parameters: 
2019-04-24 14:46:22 -<==      Total: 1
2019-04-24 14:46:22 -耗时 : 7
2019-04-24 14:46:22 -返回值 : com.bootdo.common.utils.PageUtils@3bd0e015
2019-04-24 14:46:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:22 -HTTP METHOD : GET
2019-04-24 14:46:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:22 -参数 : []
2019-04-24 14:46:22 -耗时 : 1
2019-04-24 14:46:22 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:22 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:22 -HTTP METHOD : GET
2019-04-24 14:46:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:22 -参数 : [heatType]
2019-04-24 14:46:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:22 -==> Parameters: heatType(String)
2019-04-24 14:46:22 -<==      Total: 4
2019-04-24 14:46:22 -耗时 : 4
2019-04-24 14:46:22 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:23 -HTTP METHOD : GET
2019-04-24 14:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:23 -参数 : [userType]
2019-04-24 14:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:23 -==> Parameters: userType(String)
2019-04-24 14:46:23 -HTTP METHOD : GET
2019-04-24 14:46:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:23 -<==      Total: 4
2019-04-24 14:46:23 -耗时 : 4
2019-04-24 14:46:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:23 -<==      Total: 6
2019-04-24 14:46:23 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:23 -==> Parameters: 
2019-04-24 14:46:23 -<==      Total: 1
2019-04-24 14:46:23 -耗时 : 11
2019-04-24 14:46:23 -返回值 : com.bootdo.common.utils.PageUtils@32bd81e7
2019-04-24 14:46:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:25 -HTTP METHOD : GET
2019-04-24 14:46:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:25 -参数 : []
2019-04-24 14:46:25 -耗时 : 1
2019-04-24 14:46:25 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:26 -HTTP METHOD : GET
2019-04-24 14:46:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:26 -参数 : [userType]
2019-04-24 14:46:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:26 -==> Parameters: userType(String)
2019-04-24 14:46:26 -<==      Total: 4
2019-04-24 14:46:26 -耗时 : 3
2019-04-24 14:46:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:46:26 -HTTP METHOD : GET
2019-04-24 14:46:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:46:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:46:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:46:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:46:26 -HTTP METHOD : GET
2019-04-24 14:46:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:26 -参数 : [waterType]
2019-04-24 14:46:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:26 -==> Parameters: waterType(String)
2019-04-24 14:46:26 -<==      Total: 6
2019-04-24 14:46:26 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:46:26 -==> Parameters: 
2019-04-24 14:46:26 -<==      Total: 1
2019-04-24 14:46:26 -耗时 : 553
2019-04-24 14:46:26 -返回值 : com.bootdo.common.utils.PageUtils@5ba3366f
2019-04-24 14:46:26 -<==      Total: 2
2019-04-24 14:46:26 -耗时 : 261
2019-04-24 14:46:26 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:27 -HTTP METHOD : GET
2019-04-24 14:46:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:27 -参数 : []
2019-04-24 14:46:27 -耗时 : 1
2019-04-24 14:46:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:27 -HTTP METHOD : GET
2019-04-24 14:46:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:27 -参数 : [userType]
2019-04-24 14:46:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:27 -==> Parameters: userType(String)
2019-04-24 14:46:27 -<==      Total: 4
2019-04-24 14:46:27 -耗时 : 4
2019-04-24 14:46:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:27 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:27 -HTTP METHOD : GET
2019-04-24 14:46:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:27 -参数 : [heatType]
2019-04-24 14:46:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:27 -==> Parameters: heatType(String)
2019-04-24 14:46:27 -<==      Total: 4
2019-04-24 14:46:27 -耗时 : 4
2019-04-24 14:46:27 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:27 -HTTP METHOD : GET
2019-04-24 14:46:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:27 -<==      Total: 6
2019-04-24 14:46:27 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:27 -==> Parameters: 
2019-04-24 14:46:27 -<==      Total: 1
2019-04-24 14:46:27 -耗时 : 5
2019-04-24 14:46:27 -返回值 : com.bootdo.common.utils.PageUtils@7442395f
2019-04-24 14:46:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:28 -HTTP METHOD : GET
2019-04-24 14:46:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:28 -参数 : []
2019-04-24 14:46:28 -耗时 : 1
2019-04-24 14:46:28 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:46:29 -HTTP METHOD : GET
2019-04-24 14:46:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:46:29 -参数 : []
2019-04-24 14:46:29 -耗时 : 0
2019-04-24 14:46:29 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:46:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:29 -HTTP METHOD : GET
2019-04-24 14:46:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:29 -参数 : [userType]
2019-04-24 14:46:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:29 -==> Parameters: userType(String)
2019-04-24 14:46:29 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:46:29 -HTTP METHOD : GET
2019-04-24 14:46:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:29 -参数 : [elecType]
2019-04-24 14:46:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:29 -==> Parameters: elecType(String)
2019-04-24 14:46:29 -<==      Total: 4
2019-04-24 14:46:29 -耗时 : 4
2019-04-24 14:46:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:29 -<==      Total: 11
2019-04-24 14:46:29 -耗时 : 5
2019-04-24 14:46:29 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:29 -HTTP METHOD : GET
2019-04-24 14:46:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:46:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:29 -<==      Total: 10
2019-04-24 14:46:29 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:29 -==> Parameters: 
2019-04-24 14:46:29 -<==      Total: 1
2019-04-24 14:46:29 -耗时 : 54
2019-04-24 14:46:29 -返回值 : com.bootdo.common.utils.PageUtils@1cd8826d
2019-04-24 14:46:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:29 -HTTP METHOD : GET
2019-04-24 14:46:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:29 -参数 : []
2019-04-24 14:46:29 -耗时 : 0
2019-04-24 14:46:29 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:30 -HTTP METHOD : GET
2019-04-24 14:46:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:30 -参数 : []
2019-04-24 14:46:30 -耗时 : 21
2019-04-24 14:46:30 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:46:31 -HTTP METHOD : GET
2019-04-24 14:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:46:31 -参数 : []
2019-04-24 14:46:31 -耗时 : 0
2019-04-24 14:46:31 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:46:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:32 -HTTP METHOD : GET
2019-04-24 14:46:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:32 -参数 : []
2019-04-24 14:46:32 -耗时 : 0
2019-04-24 14:46:32 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:33 -参数 : []
2019-04-24 14:46:33 -耗时 : 0
2019-04-24 14:46:33 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:33 -参数 : [userType]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:33 -==> Parameters: userType(String)
2019-04-24 14:46:33 -<==      Total: 4
2019-04-24 14:46:33 -耗时 : 3
2019-04-24 14:46:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:46:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:46:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:33 -<==      Total: 6
2019-04-24 14:46:33 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:46:33 -==> Parameters: 
2019-04-24 14:46:33 -<==      Total: 1
2019-04-24 14:46:33 -耗时 : 5
2019-04-24 14:46:33 -返回值 : com.bootdo.common.utils.PageUtils@1bb04876
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:33 -参数 : [waterType]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:33 -==> Parameters: waterType(String)
2019-04-24 14:46:33 -<==      Total: 2
2019-04-24 14:46:33 -耗时 : 4
2019-04-24 14:46:33 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:33 -参数 : []
2019-04-24 14:46:33 -耗时 : 0
2019-04-24 14:46:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:33 -参数 : [userType]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:33 -==> Parameters: userType(String)
2019-04-24 14:46:33 -<==      Total: 4
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:33 -参数 : [heatType]
2019-04-24 14:46:33 -耗时 : 4
2019-04-24 14:46:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:33 -==> Parameters: heatType(String)
2019-04-24 14:46:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:33 -HTTP METHOD : GET
2019-04-24 14:46:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:33 -<==      Total: 4
2019-04-24 14:46:33 -耗时 : 20
2019-04-24 14:46:33 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:33 -<==      Total: 6
2019-04-24 14:46:33 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:33 -==> Parameters: 
2019-04-24 14:46:33 -<==      Total: 1
2019-04-24 14:46:33 -耗时 : 12
2019-04-24 14:46:33 -返回值 : com.bootdo.common.utils.PageUtils@63aafeb0
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:46:34 -参数 : []
2019-04-24 14:46:34 -耗时 : 1
2019-04-24 14:46:34 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:34 -参数 : [userType]
2019-04-24 14:46:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:34 -==> Parameters: userType(String)
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:34 -参数 : [elecType]
2019-04-24 14:46:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:34 -<==      Total: 4
2019-04-24 14:46:34 -==> Parameters: elecType(String)
2019-04-24 14:46:34 -耗时 : 4
2019-04-24 14:46:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:34 -<==      Total: 11
2019-04-24 14:46:34 -耗时 : 4
2019-04-24 14:46:34 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:46:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:34 -<==      Total: 10
2019-04-24 14:46:34 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:34 -==> Parameters: 
2019-04-24 14:46:34 -<==      Total: 1
2019-04-24 14:46:34 -耗时 : 5
2019-04-24 14:46:34 -返回值 : com.bootdo.common.utils.PageUtils@1118498e
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:46:34 -参数 : []
2019-04-24 14:46:34 -耗时 : 0
2019-04-24 14:46:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:34 -参数 : [heatType]
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:34 -参数 : [userType]
2019-04-24 14:46:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:34 -==> Parameters: userType(String)
2019-04-24 14:46:34 -==> Parameters: heatType(String)
2019-04-24 14:46:34 -<==      Total: 4
2019-04-24 14:46:34 -<==      Total: 4
2019-04-24 14:46:34 -耗时 : 4
2019-04-24 14:46:34 -耗时 : 4
2019-04-24 14:46:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:46:34 -HTTP METHOD : GET
2019-04-24 14:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:46:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:46:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:46:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:34 -<==      Total: 6
2019-04-24 14:46:34 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:46:34 -==> Parameters: 
2019-04-24 14:46:34 -<==      Total: 1
2019-04-24 14:46:34 -耗时 : 6
2019-04-24 14:46:34 -返回值 : com.bootdo.common.utils.PageUtils@45cf74a
2019-04-24 14:46:34 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:35 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:46:35 -HTTP METHOD : GET
2019-04-24 14:46:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:46:35 -参数 : []
2019-04-24 14:46:35 -耗时 : 0
2019-04-24 14:46:35 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:46:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:35 -HTTP METHOD : GET
2019-04-24 14:46:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:35 -参数 : [userType]
2019-04-24 14:46:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:35 -==> Parameters: userType(String)
2019-04-24 14:46:35 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:46:35 -HTTP METHOD : GET
2019-04-24 14:46:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:35 -参数 : [waterType]
2019-04-24 14:46:35 -<==      Total: 4
2019-04-24 14:46:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:35 -==> Parameters: waterType(String)
2019-04-24 14:46:35 -耗时 : 6
2019-04-24 14:46:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:35 -<==      Total: 2
2019-04-24 14:46:35 -耗时 : 10
2019-04-24 14:46:35 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:46:35 -HTTP METHOD : GET
2019-04-24 14:46:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:46:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:46:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:46:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:35 -<==      Total: 6
2019-04-24 14:46:35 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:46:35 -==> Parameters: 
2019-04-24 14:46:35 -<==      Total: 1
2019-04-24 14:46:35 -耗时 : 9
2019-04-24 14:46:35 -返回值 : com.bootdo.common.utils.PageUtils@196baf87
2019-04-24 14:46:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:46:36 -HTTP METHOD : GET
2019-04-24 14:46:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:46:36 -参数 : []
2019-04-24 14:46:36 -耗时 : 0
2019-04-24 14:46:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:46:36 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:46:36 -HTTP METHOD : GET
2019-04-24 14:46:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:36 -参数 : [elecType]
2019-04-24 14:46:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:36 -==> Parameters: elecType(String)
2019-04-24 14:46:36 -<==      Total: 11
2019-04-24 14:46:36 -耗时 : 4
2019-04-24 14:46:36 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:46:36 -HTTP METHOD : GET
2019-04-24 14:46:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:46:36 -参数 : [userType]
2019-04-24 14:46:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:46:36 -==> Parameters: userType(String)
2019-04-24 14:46:36 -<==      Total: 4
2019-04-24 14:46:36 -耗时 : 3
2019-04-24 14:46:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:46:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:46:36 -HTTP METHOD : GET
2019-04-24 14:46:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:46:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:46:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:46:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:46:36 -<==      Total: 10
2019-04-24 14:46:36 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:46:36 -==> Parameters: 
2019-04-24 14:46:36 -<==      Total: 1
2019-04-24 14:46:36 -耗时 : 8
2019-04-24 14:46:36 -返回值 : com.bootdo.common.utils.PageUtils@5ac379bd
2019-04-24 14:48:00 -Validating all active sessions...
2019-04-24 14:48:01 -Finished session validation.  No sessions were stopped.
2019-04-24 14:48:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 15 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 168], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3337]
2019-04-24 14:51:42 -请求地址 : http://localhost:8081/index
2019-04-24 14:51:42 -HTTP METHOD : GET
2019-04-24 14:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 14:51:42 -参数 : [{}]
2019-04-24 14:51:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 14:51:42 -==> Parameters: 1(Long)
2019-04-24 14:51:42 -<==      Total: 49
2019-04-24 14:51:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 14:51:42 -==> Parameters: 138(Long)
2019-04-24 14:51:42 -<==      Total: 1
2019-04-24 14:51:42 -耗时 : 88
2019-04-24 14:51:42 -返回值 : index_v1
2019-04-24 14:51:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:51:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 14:51:42.473(Timestamp)
2019-04-24 14:51:42 -请求地址 : http://localhost:8081/main
2019-04-24 14:51:42 -HTTP METHOD : GET
2019-04-24 14:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:51:42 -参数 : []
2019-04-24 14:51:42 -耗时 : 1
2019-04-24 14:51:42 -返回值 : main
2019-04-24 14:51:42 -<==    Updates: 1
2019-04-24 14:51:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 14:51:42 -HTTP METHOD : GET
2019-04-24 14:51:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 14:51:42 -参数 : []
2019-04-24 14:51:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 14:51:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 14:51:42 -<==      Total: 0
2019-04-24 14:51:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 14:51:42 -==> Parameters: 1(Long), 0(String)
2019-04-24 14:51:42 -<==      Total: 1
2019-04-24 14:51:42 -耗时 : 8
2019-04-24 14:51:42 -返回值 : com.bootdo.common.utils.PageUtils@2291d53c
2019-04-24 14:51:42 -请求地址 : http://localhost:8081/main
2019-04-24 14:51:42 -HTTP METHOD : GET
2019-04-24 14:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:51:42 -参数 : []
2019-04-24 14:51:42 -耗时 : 1
2019-04-24 14:51:42 -返回值 : main
2019-04-24 14:51:45 -请求地址 : http://localhost:8081/elec/elec
2019-04-24 14:51:45 -HTTP METHOD : GET
2019-04-24 14:51:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-24 14:51:45 -参数 : []
2019-04-24 14:51:45 -耗时 : 10
2019-04-24 14:51:45 -返回值 : elec/elec/elec
2019-04-24 14:51:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:51:45 -HTTP METHOD : GET
2019-04-24 14:51:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:45 -参数 : [userType]
2019-04-24 14:51:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:51:45 -HTTP METHOD : GET
2019-04-24 14:51:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:45 -参数 : [elecType]
2019-04-24 14:51:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:45 -==> Parameters: userType(String)
2019-04-24 14:51:45 -==> Parameters: elecType(String)
2019-04-24 14:51:45 -<==      Total: 4
2019-04-24 14:51:45 -<==      Total: 11
2019-04-24 14:51:45 -耗时 : 7
2019-04-24 14:51:45 -耗时 : 5
2019-04-24 14:51:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:45 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 14:51:46 -HTTP METHOD : GET
2019-04-24 14:51:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 14:51:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@35f2cd19]
2019-04-24 14:51:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 14:51:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:51:46 -<==      Total: 10
2019-04-24 14:51:46 -==>  Preparing: select count(*) from elec 
2019-04-24 14:51:46 -==> Parameters: 
2019-04-24 14:51:46 -<==      Total: 1
2019-04-24 14:51:46 -耗时 : 273
2019-04-24 14:51:46 -返回值 : com.bootdo.common.utils.PageUtils@26280b32
2019-04-24 14:51:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:51:51 -HTTP METHOD : GET
2019-04-24 14:51:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:51:51 -参数 : []
2019-04-24 14:51:51 -耗时 : 0
2019-04-24 14:51:51 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:51:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:51:52 -HTTP METHOD : GET
2019-04-24 14:51:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:52 -参数 : [userType]
2019-04-24 14:51:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:51:52 -HTTP METHOD : GET
2019-04-24 14:51:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:52 -参数 : [elecType]
2019-04-24 14:51:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:52 -==> Parameters: elecType(String)
2019-04-24 14:51:52 -<==      Total: 11
2019-04-24 14:51:52 -耗时 : 5
2019-04-24 14:51:52 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:52 -==> Parameters: userType(String)
2019-04-24 14:51:52 -<==      Total: 4
2019-04-24 14:51:52 -耗时 : 15
2019-04-24 14:51:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:51:52 -HTTP METHOD : GET
2019-04-24 14:51:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:51:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:51:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:51:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:51:52 -<==      Total: 10
2019-04-24 14:51:52 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:51:52 -==> Parameters: 
2019-04-24 14:51:52 -<==      Total: 1
2019-04-24 14:51:52 -耗时 : 7
2019-04-24 14:51:52 -返回值 : com.bootdo.common.utils.PageUtils@4edbe66e
2019-04-24 14:51:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:51:57 -HTTP METHOD : GET
2019-04-24 14:51:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:51:57 -参数 : []
2019-04-24 14:51:57 -耗时 : 1
2019-04-24 14:51:57 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:51:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:51:57 -HTTP METHOD : GET
2019-04-24 14:51:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:57 -参数 : [userType]
2019-04-24 14:51:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:57 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:51:57 -HTTP METHOD : GET
2019-04-24 14:51:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:51:57 -参数 : [waterType]
2019-04-24 14:51:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:51:57 -==> Parameters: waterType(String)
2019-04-24 14:51:57 -<==      Total: 2
2019-04-24 14:51:57 -耗时 : 4
2019-04-24 14:51:57 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:57 -==> Parameters: userType(String)
2019-04-24 14:51:57 -<==      Total: 4
2019-04-24 14:51:57 -耗时 : 22
2019-04-24 14:51:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:51:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:51:57 -HTTP METHOD : GET
2019-04-24 14:51:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:51:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:51:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:51:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:51:57 -<==      Total: 6
2019-04-24 14:51:57 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:51:57 -==> Parameters: 
2019-04-24 14:51:57 -<==      Total: 1
2019-04-24 14:51:57 -耗时 : 5
2019-04-24 14:51:57 -返回值 : com.bootdo.common.utils.PageUtils@79c199ba
2019-04-24 14:52:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:52:05 -HTTP METHOD : GET
2019-04-24 14:52:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:52:05 -参数 : []
2019-04-24 14:52:05 -耗时 : 0
2019-04-24 14:52:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:52:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:05 -HTTP METHOD : GET
2019-04-24 14:52:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:05 -参数 : [userType]
2019-04-24 14:52:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:05 -==> Parameters: userType(String)
2019-04-24 14:52:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:52:05 -HTTP METHOD : GET
2019-04-24 14:52:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:05 -参数 : [heatType]
2019-04-24 14:52:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:05 -==> Parameters: heatType(String)
2019-04-24 14:52:05 -<==      Total: 4
2019-04-24 14:52:05 -耗时 : 7
2019-04-24 14:52:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:05 -<==      Total: 4
2019-04-24 14:52:05 -耗时 : 5
2019-04-24 14:52:05 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:52:05 -HTTP METHOD : GET
2019-04-24 14:52:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:52:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:52:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:52:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:05 -<==      Total: 6
2019-04-24 14:52:05 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:52:05 -==> Parameters: 
2019-04-24 14:52:05 -<==      Total: 1
2019-04-24 14:52:05 -耗时 : 5
2019-04-24 14:52:05 -返回值 : com.bootdo.common.utils.PageUtils@40874a13
2019-04-24 14:52:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:52:06 -HTTP METHOD : GET
2019-04-24 14:52:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:52:06 -参数 : []
2019-04-24 14:52:06 -耗时 : 1
2019-04-24 14:52:06 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:52:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:06 -HTTP METHOD : GET
2019-04-24 14:52:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:06 -参数 : [userType]
2019-04-24 14:52:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:52:06 -HTTP METHOD : GET
2019-04-24 14:52:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:06 -==> Parameters: userType(String)
2019-04-24 14:52:06 -参数 : [elecType]
2019-04-24 14:52:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:06 -==> Parameters: elecType(String)
2019-04-24 14:52:06 -<==      Total: 4
2019-04-24 14:52:06 -<==      Total: 11
2019-04-24 14:52:06 -耗时 : 4
2019-04-24 14:52:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:06 -耗时 : 3
2019-04-24 14:52:06 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:52:06 -HTTP METHOD : GET
2019-04-24 14:52:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:52:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:52:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:52:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:06 -<==      Total: 10
2019-04-24 14:52:06 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:52:06 -==> Parameters: 
2019-04-24 14:52:06 -<==      Total: 1
2019-04-24 14:52:06 -耗时 : 6
2019-04-24 14:52:06 -返回值 : com.bootdo.common.utils.PageUtils@533130ea
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:52:07 -参数 : []
2019-04-24 14:52:07 -耗时 : 0
2019-04-24 14:52:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:07 -参数 : [heatType]
2019-04-24 14:52:07 -参数 : [userType]
2019-04-24 14:52:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:07 -==> Parameters: heatType(String)
2019-04-24 14:52:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:07 -==> Parameters: userType(String)
2019-04-24 14:52:07 -<==      Total: 4
2019-04-24 14:52:07 -<==      Total: 4
2019-04-24 14:52:07 -耗时 : 3
2019-04-24 14:52:07 -耗时 : 3
2019-04-24 14:52:07 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:52:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:52:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:52:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:07 -<==      Total: 6
2019-04-24 14:52:07 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:52:07 -==> Parameters: 
2019-04-24 14:52:07 -<==      Total: 1
2019-04-24 14:52:07 -耗时 : 87
2019-04-24 14:52:07 -返回值 : com.bootdo.common.utils.PageUtils@274853d
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:52:07 -参数 : []
2019-04-24 14:52:07 -耗时 : 1
2019-04-24 14:52:07 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:07 -参数 : [userType]
2019-04-24 14:52:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:07 -==> Parameters: userType(String)
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:07 -参数 : [waterType]
2019-04-24 14:52:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:07 -==> Parameters: waterType(String)
2019-04-24 14:52:07 -<==      Total: 4
2019-04-24 14:52:07 -耗时 : 4
2019-04-24 14:52:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:07 -<==      Total: 2
2019-04-24 14:52:07 -耗时 : 5
2019-04-24 14:52:07 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:52:07 -HTTP METHOD : GET
2019-04-24 14:52:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:52:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:52:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:52:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:07 -<==      Total: 6
2019-04-24 14:52:07 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:52:07 -==> Parameters: 
2019-04-24 14:52:07 -<==      Total: 1
2019-04-24 14:52:07 -耗时 : 8
2019-04-24 14:52:07 -返回值 : com.bootdo.common.utils.PageUtils@6331f1a6
2019-04-24 14:52:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:52:08 -HTTP METHOD : GET
2019-04-24 14:52:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:52:08 -参数 : []
2019-04-24 14:52:08 -耗时 : 1
2019-04-24 14:52:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:52:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:08 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:52:08 -HTTP METHOD : GET
2019-04-24 14:52:08 -HTTP METHOD : GET
2019-04-24 14:52:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:08 -参数 : [userType]
2019-04-24 14:52:08 -参数 : [heatType]
2019-04-24 14:52:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:08 -==> Parameters: userType(String)
2019-04-24 14:52:08 -==> Parameters: heatType(String)
2019-04-24 14:52:08 -<==      Total: 4
2019-04-24 14:52:08 -<==      Total: 4
2019-04-24 14:52:08 -耗时 : 5
2019-04-24 14:52:08 -耗时 : 5
2019-04-24 14:52:08 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:52:08 -HTTP METHOD : GET
2019-04-24 14:52:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:52:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:52:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:52:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:08 -<==      Total: 6
2019-04-24 14:52:08 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:52:08 -==> Parameters: 
2019-04-24 14:52:08 -<==      Total: 1
2019-04-24 14:52:08 -耗时 : 7
2019-04-24 14:52:08 -返回值 : com.bootdo.common.utils.PageUtils@9d12141
2019-04-24 14:52:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:52:26 -HTTP METHOD : GET
2019-04-24 14:52:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:52:26 -参数 : []
2019-04-24 14:52:26 -耗时 : 1
2019-04-24 14:52:26 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:52:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:52:26 -HTTP METHOD : GET
2019-04-24 14:52:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:26 -参数 : [userType]
2019-04-24 14:52:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:52:26 -HTTP METHOD : GET
2019-04-24 14:52:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:52:26 -参数 : [waterType]
2019-04-24 14:52:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:26 -==> Parameters: waterType(String)
2019-04-24 14:52:26 -<==      Total: 2
2019-04-24 14:52:26 -耗时 : 5
2019-04-24 14:52:26 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:52:26 -==> Parameters: userType(String)
2019-04-24 14:52:26 -<==      Total: 4
2019-04-24 14:52:26 -耗时 : 15
2019-04-24 14:52:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:52:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:52:26 -HTTP METHOD : GET
2019-04-24 14:52:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:52:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:52:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:52:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:52:26 -<==      Total: 6
2019-04-24 14:52:26 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:52:26 -==> Parameters: 
2019-04-24 14:52:26 -<==      Total: 1
2019-04-24 14:52:26 -耗时 : 5
2019-04-24 14:52:26 -返回值 : com.bootdo.common.utils.PageUtils@4e8cbd70
2019-04-24 14:53:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 14:53:36 -HTTP METHOD : GET
2019-04-24 14:53:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 14:53:36 -参数 : []
2019-04-24 14:53:36 -耗时 : 0
2019-04-24 14:53:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 14:53:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:53:36 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 14:53:36 -HTTP METHOD : GET
2019-04-24 14:53:36 -HTTP METHOD : GET
2019-04-24 14:53:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:53:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:53:36 -参数 : [userType]
2019-04-24 14:53:36 -参数 : [heatType]
2019-04-24 14:53:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:53:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:53:36 -==> Parameters: heatType(String)
2019-04-24 14:53:36 -==> Parameters: userType(String)
2019-04-24 14:53:36 -<==      Total: 4
2019-04-24 14:53:36 -<==      Total: 4
2019-04-24 14:53:36 -耗时 : 7
2019-04-24 14:53:36 -耗时 : 8
2019-04-24 14:53:36 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:53:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:53:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 14:53:36 -HTTP METHOD : GET
2019-04-24 14:53:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 14:53:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 14:53:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 14:53:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:53:36 -<==      Total: 6
2019-04-24 14:53:36 -==>  Preparing: select count(*) from heat_log 
2019-04-24 14:53:36 -==> Parameters: 
2019-04-24 14:53:36 -<==      Total: 1
2019-04-24 14:53:36 -耗时 : 23
2019-04-24 14:53:36 -返回值 : com.bootdo.common.utils.PageUtils@37b324ad
2019-04-24 14:53:56 -请求地址 : http://localhost:8081/common/dict
2019-04-24 14:53:56 -HTTP METHOD : GET
2019-04-24 14:53:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2019-04-24 14:53:56 -参数 : []
2019-04-24 14:53:56 -耗时 : 1
2019-04-24 14:53:56 -返回值 : common/dict/dict
2019-04-24 14:53:56 -请求地址 : http://localhost:8081/common/dict/type
2019-04-24 14:53:56 -HTTP METHOD : GET
2019-04-24 14:53:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2019-04-24 14:53:56 -参数 : []
2019-04-24 14:53:56 -==>  Preparing: select distinct `type` , description from sys_dict 
2019-04-24 14:53:56 -==> Parameters: 
2019-04-24 14:53:56 -请求地址 : http://localhost:8081/common/dict/list
2019-04-24 14:53:56 -HTTP METHOD : GET
2019-04-24 14:53:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-24 14:53:56 -参数 : [{limit=10, offset=0}]
2019-04-24 14:53:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-24 14:53:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:53:56 -<==      Total: 10
2019-04-24 14:53:56 -==>  Preparing: select count(*) from sys_dict 
2019-04-24 14:53:56 -==> Parameters: 
2019-04-24 14:53:56 -<==      Total: 38
2019-04-24 14:53:56 -耗时 : 82
2019-04-24 14:53:56 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='wx', description='微信支付', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yh', description='银行转账', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2019-04-24 14:53:56 -<==      Total: 1
2019-04-24 14:53:56 -耗时 : 70
2019-04-24 14:53:56 -返回值 : com.bootdo.common.utils.PageUtils@77066f92
2019-04-24 14:58:03 -请求地址 : http://localhost:8081/index
2019-04-24 14:58:03 -HTTP METHOD : GET
2019-04-24 14:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 14:58:03 -参数 : [{}]
2019-04-24 14:58:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 14:58:03 -==> Parameters: 1(Long)
2019-04-24 14:58:03 -<==      Total: 49
2019-04-24 14:58:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 14:58:03 -==> Parameters: 138(Long)
2019-04-24 14:58:03 -<==      Total: 1
2019-04-24 14:58:03 -耗时 : 143
2019-04-24 14:58:03 -返回值 : index_v1
2019-04-24 14:58:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:58:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 14:58:03.65(Timestamp)
2019-04-24 14:58:03 -<==    Updates: 1
2019-04-24 14:58:03 -请求地址 : http://localhost:8081/main
2019-04-24 14:58:03 -HTTP METHOD : GET
2019-04-24 14:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:58:03 -参数 : []
2019-04-24 14:58:03 -耗时 : 0
2019-04-24 14:58:03 -返回值 : main
2019-04-24 14:58:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 14:58:03 -HTTP METHOD : GET
2019-04-24 14:58:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 14:58:03 -参数 : []
2019-04-24 14:58:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 14:58:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 14:58:03 -<==      Total: 0
2019-04-24 14:58:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 14:58:03 -==> Parameters: 1(Long), 0(String)
2019-04-24 14:58:03 -<==      Total: 1
2019-04-24 14:58:03 -耗时 : 5
2019-04-24 14:58:03 -返回值 : com.bootdo.common.utils.PageUtils@3a283755
2019-04-24 14:58:03 -请求地址 : http://localhost:8081/main
2019-04-24 14:58:03 -HTTP METHOD : GET
2019-04-24 14:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:58:03 -参数 : []
2019-04-24 14:58:03 -耗时 : 0
2019-04-24 14:58:03 -返回值 : main
2019-04-24 14:58:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 14:58:06 -==> Parameters: 1(Long)
2019-04-24 14:58:06 -<==      Total: 93
2019-04-24 14:58:06 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 14:58:06 -HTTP METHOD : GET
2019-04-24 14:58:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 14:58:06 -参数 : []
2019-04-24 14:58:06 -耗时 : 1
2019-04-24 14:58:06 -返回值 : /moneyList/moneyList
2019-04-24 14:58:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:58:06 -HTTP METHOD : GET
2019-04-24 14:58:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:58:06 -参数 : []
2019-04-24 14:58:06 -耗时 : 1
2019-04-24 14:58:06 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:58:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:58:06 -HTTP METHOD : GET
2019-04-24 14:58:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:58:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:58:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:58:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:58:06 -<==      Total: 10
2019-04-24 14:58:06 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:58:06 -==> Parameters: 
2019-04-24 14:58:06 -<==      Total: 1
2019-04-24 14:58:06 -耗时 : 7
2019-04-24 14:58:06 -返回值 : com.bootdo.common.utils.PageUtils@75ea1759
2019-04-24 14:58:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:58:06 -HTTP METHOD : GET
2019-04-24 14:58:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:06 -参数 : [elecType]
2019-04-24 14:58:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:06 -==> Parameters: elecType(String)
2019-04-24 14:58:07 -<==      Total: 11
2019-04-24 14:58:07 -耗时 : 5
2019-04-24 14:58:07 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:58:07 -HTTP METHOD : GET
2019-04-24 14:58:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:07 -参数 : [userType]
2019-04-24 14:58:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:07 -==> Parameters: userType(String)
2019-04-24 14:58:07 -<==      Total: 4
2019-04-24 14:58:07 -耗时 : 4
2019-04-24 14:58:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:58:07 -HTTP METHOD : GET
2019-04-24 14:58:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:58:07 -参数 : []
2019-04-24 14:58:07 -耗时 : 1
2019-04-24 14:58:07 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:58:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:58:07 -HTTP METHOD : GET
2019-04-24 14:58:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:07 -参数 : [userType]
2019-04-24 14:58:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:07 -==> Parameters: userType(String)
2019-04-24 14:58:07 -<==      Total: 4
2019-04-24 14:58:07 -耗时 : 3
2019-04-24 14:58:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:07 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:58:07 -HTTP METHOD : GET
2019-04-24 14:58:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:07 -参数 : [waterType]
2019-04-24 14:58:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:07 -==> Parameters: waterType(String)
2019-04-24 14:58:07 -<==      Total: 2
2019-04-24 14:58:07 -耗时 : 3
2019-04-24 14:58:07 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:58:07 -HTTP METHOD : GET
2019-04-24 14:58:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:58:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:58:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:58:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:58:07 -<==      Total: 6
2019-04-24 14:58:07 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:58:07 -==> Parameters: 
2019-04-24 14:58:07 -<==      Total: 1
2019-04-24 14:58:07 -耗时 : 8
2019-04-24 14:58:07 -返回值 : com.bootdo.common.utils.PageUtils@302d44a5
2019-04-24 14:58:37 -请求地址 : http://localhost:8081/login;JSESSIONID=06ea459b-e9e0-4f42-b70b-cd45dd2d94bd
2019-04-24 14:58:37 -HTTP METHOD : GET
2019-04-24 14:58:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 14:58:37 -参数 : [{}]
2019-04-24 14:58:37 -耗时 : 3
2019-04-24 14:58:37 -返回值 : login
2019-04-24 14:58:38 -请求地址 : http://localhost:8081/getVerify
2019-04-24 14:58:38 -HTTP METHOD : GET
2019-04-24 14:58:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 14:58:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b7110d8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c852e06]
2019-04-24 14:58:38 -2168
2019-04-24 14:58:38 -耗时 : 98
2019-04-24 14:58:38 -返回值 : null
2019-04-24 14:58:38 -请求地址 : http://localhost:8081/login
2019-04-24 14:58:38 -HTTP METHOD : GET
2019-04-24 14:58:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 14:58:38 -参数 : [{}]
2019-04-24 14:58:38 -耗时 : 21
2019-04-24 14:58:38 -返回值 : login
2019-04-24 14:58:44 -请求地址 : http://localhost:8081/login
2019-04-24 14:58:44 -HTTP METHOD : POST
2019-04-24 14:58:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 14:58:44 -参数 : [admin, 111111, 2168, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1902a3ee]
2019-04-24 14:58:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 14:58:44 -==> Parameters: admin(String)
2019-04-24 14:58:44 -<==      Total: 1
2019-04-24 14:58:44 -耗时 : 60
2019-04-24 14:58:44 -返回值 : {msg=操作成功, code=0}
2019-04-24 14:58:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:58:45 -==> Parameters: 1(Long), admin(String), 登录(String), 61(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 14:58:44.988(Timestamp)
2019-04-24 14:58:45 -请求地址 : http://localhost:8081/index
2019-04-24 14:58:45 -HTTP METHOD : GET
2019-04-24 14:58:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 14:58:45 -参数 : [{}]
2019-04-24 14:58:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 14:58:45 -==> Parameters: 1(Long)
2019-04-24 14:58:45 -<==    Updates: 1
2019-04-24 14:58:45 -<==      Total: 49
2019-04-24 14:58:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 14:58:45 -==> Parameters: 138(Long)
2019-04-24 14:58:45 -<==      Total: 1
2019-04-24 14:58:45 -耗时 : 62
2019-04-24 14:58:45 -返回值 : index_v1
2019-04-24 14:58:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 14:58:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 62(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 14:58:45.242(Timestamp)
2019-04-24 14:58:45 -<==    Updates: 1
2019-04-24 14:58:45 -请求地址 : http://localhost:8081/main
2019-04-24 14:58:45 -HTTP METHOD : GET
2019-04-24 14:58:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:58:45 -参数 : []
2019-04-24 14:58:45 -耗时 : 1
2019-04-24 14:58:45 -返回值 : main
2019-04-24 14:58:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 14:58:47 -HTTP METHOD : GET
2019-04-24 14:58:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 14:58:47 -参数 : []
2019-04-24 14:58:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 14:58:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 14:58:47 -<==      Total: 0
2019-04-24 14:58:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 14:58:47 -==> Parameters: 1(Long), 0(String)
2019-04-24 14:58:47 -<==      Total: 1
2019-04-24 14:58:47 -耗时 : 7
2019-04-24 14:58:47 -返回值 : com.bootdo.common.utils.PageUtils@24bfe2a0
2019-04-24 14:58:47 -请求地址 : http://localhost:8081/main
2019-04-24 14:58:47 -HTTP METHOD : GET
2019-04-24 14:58:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 14:58:47 -参数 : []
2019-04-24 14:58:47 -耗时 : 1
2019-04-24 14:58:47 -返回值 : main
2019-04-24 14:58:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 14:58:54 -==> Parameters: 1(Long)
2019-04-24 14:58:54 -<==      Total: 93
2019-04-24 14:58:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 14:58:54 -HTTP METHOD : GET
2019-04-24 14:58:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 14:58:54 -参数 : []
2019-04-24 14:58:54 -耗时 : 0
2019-04-24 14:58:54 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 14:58:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:58:56 -HTTP METHOD : GET
2019-04-24 14:58:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:56 -参数 : [userType]
2019-04-24 14:58:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:56 -==> Parameters: userType(String)
2019-04-24 14:58:56 -<==      Total: 4
2019-04-24 14:58:56 -耗时 : 4
2019-04-24 14:58:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 14:58:56 -HTTP METHOD : GET
2019-04-24 14:58:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:56 -参数 : [elecType]
2019-04-24 14:58:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:56 -==> Parameters: elecType(String)
2019-04-24 14:58:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 14:58:56 -HTTP METHOD : GET
2019-04-24 14:58:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 14:58:56 -<==      Total: 11
2019-04-24 14:58:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 14:58:56 -耗时 : 3
2019-04-24 14:58:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 14:58:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:58:56 -<==      Total: 10
2019-04-24 14:58:56 -==>  Preparing: select count(*) from elec_log 
2019-04-24 14:58:56 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:56 -==> Parameters: 
2019-04-24 14:58:56 -<==      Total: 1
2019-04-24 14:58:56 -耗时 : 6
2019-04-24 14:58:56 -返回值 : com.bootdo.common.utils.PageUtils@243fb1b9
2019-04-24 14:58:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 14:58:56 -HTTP METHOD : GET
2019-04-24 14:58:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 14:58:56 -参数 : []
2019-04-24 14:58:56 -耗时 : 1
2019-04-24 14:58:56 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 14:58:57 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 14:58:57 -HTTP METHOD : GET
2019-04-24 14:58:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:57 -参数 : [waterType]
2019-04-24 14:58:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:57 -==> Parameters: waterType(String)
2019-04-24 14:58:57 -<==      Total: 2
2019-04-24 14:58:57 -耗时 : 3
2019-04-24 14:58:57 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 14:58:57 -HTTP METHOD : GET
2019-04-24 14:58:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 14:58:57 -参数 : [userType]
2019-04-24 14:58:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 14:58:57 -==> Parameters: userType(String)
2019-04-24 14:58:57 -<==      Total: 4
2019-04-24 14:58:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 14:58:57 -HTTP METHOD : GET
2019-04-24 14:58:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 14:58:57 -耗时 : 3
2019-04-24 14:58:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 14:58:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 14:58:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 14:58:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 14:58:57 -<==      Total: 6
2019-04-24 14:58:57 -==>  Preparing: select count(*) from water_log 
2019-04-24 14:58:57 -==> Parameters: 
2019-04-24 14:58:57 -<==      Total: 1
2019-04-24 14:58:57 -耗时 : 9
2019-04-24 14:58:57 -返回值 : com.bootdo.common.utils.PageUtils@3caa3143
2019-04-24 15:00:10 -Starting BootdoApplication on ZJZL-20180906VX with PID 7012 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 15:00:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 15:00:10 -The following profiles are active: dev
2019-04-24 15:00:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:00:10 CST 2019]; root of context hierarchy
2019-04-24 15:00:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 15:00:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 15:00:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 15:00:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:00:28 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 15:00:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 15:00:28 -Starting service [Tomcat]
2019-04-24 15:00:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 15:00:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 15:00:29 -Initializing Spring embedded WebApplicationContext
2019-04-24 15:00:29 -Root WebApplicationContext: initialization completed in 18647 ms
2019-04-24 15:00:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 15:00:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 15:00:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 15:00:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 15:00:30 -Filter xssFilter was not registered (disabled)
2019-04-24 15:00:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 15:00:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 15:00:30 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 15:00:30 -Servlet dispatcherServlet mapped to [/]
2019-04-24 15:00:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:00:10 CST 2019]; root of context hierarchy
2019-04-24 15:00:37 -Using default implementation for ThreadExecutor
2019-04-24 15:00:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 15:00:37 -Quartz Scheduler v.2.2.1 created.
2019-04-24 15:00:37 -RAMJobStore initialized.
2019-04-24 15:00:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 15:00:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 15:00:37 -Quartz scheduler version: 2.2.1
2019-04-24 15:00:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-24 15:00:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 15:00:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 15:00:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 15:00:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 15:00:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 15:00:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 15:00:41 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 15:00:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 15:00:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 15:00:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 15:00:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 15:00:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 15:00:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 15:00:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 15:00:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 15:00:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 15:00:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 15:00:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 15:00:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 15:00:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 15:00:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 15:00:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 15:00:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 15:00:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 15:00:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 15:00:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 15:00:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 15:00:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 15:00:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 15:00:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 15:00:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 15:00:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 15:00:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 15:00:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 15:00:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 15:00:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 15:00:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 15:00:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 15:00:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 15:00:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 15:00:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 15:00:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:00:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:00:41 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:00:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 15:00:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 15:00:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 15:00:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 15:00:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 15:00:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 15:00:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 15:00:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 15:00:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 15:00:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 15:00:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 15:00:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 15:00:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 15:00:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 15:00:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 15:00:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 15:00:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 15:00:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 15:00:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 15:00:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 15:00:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 15:00:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 15:00:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 15:00:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 15:00:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 15:00:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 15:00:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 15:00:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 15:00:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 15:00:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 15:00:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 15:00:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 15:00:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 15:00:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 15:00:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 15:00:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 15:00:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 15:00:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:00:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 15:00:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 15:00:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 15:00:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:00:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 15:00:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:00:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 15:00:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 15:00:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 15:00:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 15:00:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 15:00:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 15:00:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:00:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:00:10 CST 2019]; root of context hierarchy
2019-04-24 15:00:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:00:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:00:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:00:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 15:00:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 15:00:49 -Registering beans for JMX exposure on startup
2019-04-24 15:00:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 15:00:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 15:00:49 -Starting beans in phase 2147483647
2019-04-24 15:00:49 -Context refreshed
2019-04-24 15:00:49 -Found 1 custom documentation plugin(s)
2019-04-24 15:00:49 -Scanning for api listing references
2019-04-24 15:00:50 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_1
2019-04-24 15:00:50 -Generating unique operation named: addUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: editUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: listUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_2
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_3
2019-04-24 15:00:50 -Generating unique operation named: saveUsingPOST_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPOST_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPUT_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 15:00:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 15:00:50 -Generating unique operation named: addUsingGET_2
2019-04-24 15:00:50 -Generating unique operation named: editUsingGET_2
2019-04-24 15:00:50 -Generating unique operation named: listUsingGET_2
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_4
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_5
2019-04-24 15:00:50 -Generating unique operation named: saveUsingPOST_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPOST_2
2019-04-24 15:00:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: addUsingGET_3
2019-04-24 15:00:50 -Generating unique operation named: editUsingGET_3
2019-04-24 15:00:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 15:00:50 -Generating unique operation named: listUsingGET_3
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_6
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_7
2019-04-24 15:00:50 -Generating unique operation named: saveUsingPOST_3
2019-04-24 15:00:50 -Generating unique operation named: updateUsingGET_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPOST_3
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPUT_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 15:00:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 15:00:50 -Generating unique operation named: addUsingGET_4
2019-04-24 15:00:50 -Generating unique operation named: editUsingGET_4
2019-04-24 15:00:50 -Generating unique operation named: listUsingGET_4
2019-04-24 15:00:50 -Generating unique operation named: removeUsingPOST_8
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_9
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingGET_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPUT_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 15:00:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 15:00:51 -Generating unique operation named: ElecUsingGET_1
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_5
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_5
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_5
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_10
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_11
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingGET_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPUT_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 15:00:51 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_6
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_6
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_6
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_7
2019-04-24 15:00:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_7
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_12
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_13
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingGET_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPUT_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 15:00:51 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 15:00:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_7
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_8
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_8
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_14
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_15
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingGET_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_8
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPUT_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 15:00:51 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_8
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_9
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_9
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_16
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_17
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_8
2019-04-24 15:00:51 -Generating unique operation named: updateUsingGET_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_9
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPUT_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 15:00:51 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_9
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_10
2019-04-24 15:00:51 -Generating unique operation named: infoUsingGET_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingPOST_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingPUT_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 15:00:51 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_10
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_18
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_19
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_9
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_10
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_11
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_20
2019-04-24 15:00:51 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 15:00:51 -Generating unique operation named: addUsingGET_10
2019-04-24 15:00:51 -Generating unique operation named: editUsingGET_11
2019-04-24 15:00:51 -Generating unique operation named: listUsingGET_12
2019-04-24 15:00:51 -Generating unique operation named: removeUsingPOST_21
2019-04-24 15:00:51 -Generating unique operation named: saveUsingPOST_10
2019-04-24 15:00:51 -Generating unique operation named: treeUsingGET_1
2019-04-24 15:00:51 -Generating unique operation named: treeUsingGET_2
2019-04-24 15:00:51 -Generating unique operation named: updateUsingPOST_11
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_11
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_12
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_13
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_22
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_23
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingGET_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPUT_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 15:00:52 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_12
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_13
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_14
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_24
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_25
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingGET_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_13
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPUT_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 15:00:52 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_13
2019-04-24 15:00:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_14
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_15
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_13
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_14
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_14
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_16
2019-04-24 15:00:52 -Generating unique operation named: listUsingHEAD_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingPOST_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingPUT_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingPATCH_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingDELETE_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingTRACE_1
2019-04-24 15:00:52 -Generating unique operation named: countDDUsingGET_1
2019-04-24 15:00:52 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 15:00:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 15:00:52 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 15:00:52 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_14
2019-04-24 15:00:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_15
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_17
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_26
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_15
2019-04-24 15:00:52 -Generating unique operation named: treeUsingGET_3
2019-04-24 15:00:52 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_15
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_15
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_16
2019-04-24 15:00:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_18
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_27
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_28
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_16
2019-04-24 15:00:52 -Generating unique operation named: updateUsingGET_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_16
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPUT_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 15:00:52 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 15:00:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_16
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_17
2019-04-24 15:00:52 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_19
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_29
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_30
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_17
2019-04-24 15:00:52 -Generating unique operation named: updateUsingGET_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_17
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPUT_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 15:00:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 15:00:52 -Generating unique operation named: addUsingGET_17
2019-04-24 15:00:52 -Generating unique operation named: editUsingGET_18
2019-04-24 15:00:52 -Generating unique operation named: listUsingGET_20
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_31
2019-04-24 15:00:52 -Generating unique operation named: removeUsingPOST_32
2019-04-24 15:00:52 -Generating unique operation named: saveUsingPOST_18
2019-04-24 15:00:52 -Generating unique operation named: updateUsingGET_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPOST_18
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPUT_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 15:00:52 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 15:00:52 -Starting Quartz Scheduler now
2019-04-24 15:00:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 15:00:52 -Starting...
2019-04-24 15:00:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 15:00:52 -Started.
2019-04-24 15:00:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 15:00:52 -Using a shared selector for servlet write/read
2019-04-24 15:00:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 15:00:52 -Started BootdoApplication in 43.365 seconds (JVM running for 44.403)
2019-04-24 15:00:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 15:00:53 -==> Parameters: 
2019-04-24 15:00:53 -<==      Total: 1
2019-04-24 15:01:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 15:01:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 15:01:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 164 ms
2019-04-24 15:01:05 -Enabling session validation scheduler...
2019-04-24 15:01:05 -请求地址 : http://localhost:8081/login;JSESSIONID=d6539f48-e403-48d5-ba7f-c046a143a191
2019-04-24 15:01:05 -HTTP METHOD : GET
2019-04-24 15:01:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 15:01:05 -参数 : [{}]
2019-04-24 15:01:05 -耗时 : 7
2019-04-24 15:01:05 -返回值 : login
2019-04-24 15:01:07 -请求地址 : http://localhost:8081/getVerify
2019-04-24 15:01:07 -HTTP METHOD : GET
2019-04-24 15:01:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 15:01:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@138ec402, org.apache.shiro.web.servlet.ShiroHttpServletResponse@17b152ab]
2019-04-24 15:01:13 -2924
2019-04-24 15:01:13 -耗时 : 5586
2019-04-24 15:01:13 -返回值 : null
2019-04-24 15:01:21 -请求地址 : http://localhost:8081/login
2019-04-24 15:01:21 -HTTP METHOD : POST
2019-04-24 15:01:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 15:01:21 -参数 : [admin, 111111, 2924, org.apache.shiro.web.servlet.ShiroHttpServletRequest@fdc3c6c]
2019-04-24 15:01:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 15:01:22 -==> Parameters: admin(String)
2019-04-24 15:01:22 -<==      Total: 1
2019-04-24 15:01:22 -耗时 : 237
2019-04-24 15:01:22 -返回值 : {msg=操作成功, code=0}
2019-04-24 15:01:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 15:01:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:01:22 -==> Parameters: 1(Long), admin(String), 登录(String), 237(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 15:01:22.364(Timestamp)
2019-04-24 15:01:22 -<==    Updates: 1
2019-04-24 15:01:22 -请求地址 : http://localhost:8081/index
2019-04-24 15:01:22 -HTTP METHOD : GET
2019-04-24 15:01:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:01:22 -参数 : [{}]
2019-04-24 15:01:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:01:22 -==> Parameters: 1(Long)
2019-04-24 15:01:22 -<==      Total: 49
2019-04-24 15:01:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:01:22 -==> Parameters: 138(Long)
2019-04-24 15:01:22 -<==      Total: 1
2019-04-24 15:01:23 -耗时 : 335
2019-04-24 15:01:23 -返回值 : index_v1
2019-04-24 15:01:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:01:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 335(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:01:23.1(Timestamp)
2019-04-24 15:01:23 -<==    Updates: 1
2019-04-24 15:01:23 -请求地址 : http://localhost:8081/main
2019-04-24 15:01:23 -HTTP METHOD : GET
2019-04-24 15:01:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:01:23 -参数 : []
2019-04-24 15:01:23 -耗时 : 1
2019-04-24 15:01:23 -返回值 : main
2019-04-24 15:01:25 -请求地址 : http://localhost:8081/main
2019-04-24 15:01:25 -HTTP METHOD : GET
2019-04-24 15:01:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:01:25 -参数 : []
2019-04-24 15:01:25 -耗时 : 0
2019-04-24 15:01:25 -返回值 : main
2019-04-24 15:01:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:01:25 -HTTP METHOD : GET
2019-04-24 15:01:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:01:25 -参数 : []
2019-04-24 15:01:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:01:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:01:26 -<==      Total: 0
2019-04-24 15:01:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:01:26 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:01:26 -<==      Total: 1
2019-04-24 15:01:26 -耗时 : 547
2019-04-24 15:01:26 -返回值 : com.bootdo.common.utils.PageUtils@3612d49
2019-04-24 15:01:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 15:01:34 -==> Parameters: 1(Long)
2019-04-24 15:01:34 -<==      Total: 93
2019-04-24 15:01:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:01:34 -HTTP METHOD : GET
2019-04-24 15:01:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:01:34 -参数 : []
2019-04-24 15:01:34 -耗时 : 0
2019-04-24 15:01:34 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:01:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:01:38 -HTTP METHOD : GET
2019-04-24 15:01:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:01:38 -参数 : []
2019-04-24 15:01:38 -耗时 : 0
2019-04-24 15:01:38 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:01:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:01:38 -HTTP METHOD : GET
2019-04-24 15:01:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:38 -参数 : [userType]
2019-04-24 15:01:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:01:38 -HTTP METHOD : GET
2019-04-24 15:01:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:38 -参数 : [waterType]
2019-04-24 15:01:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:38 -==> Parameters: waterType(String)
2019-04-24 15:01:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:01:38 -HTTP METHOD : GET
2019-04-24 15:01:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:01:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:01:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:39 -==> Parameters: userType(String)
2019-04-24 15:01:39 -<==      Total: 2
2019-04-24 15:01:39 -耗时 : 314
2019-04-24 15:01:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:01:39 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:01:39 -<==      Total: 4
2019-04-24 15:01:39 -耗时 : 519
2019-04-24 15:01:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:39 -<==      Total: 6
2019-04-24 15:01:39 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:01:39 -==> Parameters: 
2019-04-24 15:01:39 -<==      Total: 1
2019-04-24 15:01:39 -耗时 : 518
2019-04-24 15:01:39 -返回值 : com.bootdo.common.utils.PageUtils@58e17d2
2019-04-24 15:01:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:01:42 -HTTP METHOD : GET
2019-04-24 15:01:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:01:42 -参数 : []
2019-04-24 15:01:42 -耗时 : 1
2019-04-24 15:01:42 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:01:42 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:43 -参数 : [userType]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:43 -==> Parameters: userType(String)
2019-04-24 15:01:43 -<==      Total: 4
2019-04-24 15:01:43 -耗时 : 8
2019-04-24 15:01:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:43 -参数 : [heatType]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:43 -==> Parameters: heatType(String)
2019-04-24 15:01:43 -<==      Total: 4
2019-04-24 15:01:43 -耗时 : 8
2019-04-24 15:01:43 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:01:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:01:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:01:43 -<==      Total: 6
2019-04-24 15:01:43 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:01:43 -==> Parameters: 
2019-04-24 15:01:43 -<==      Total: 1
2019-04-24 15:01:43 -耗时 : 81
2019-04-24 15:01:43 -返回值 : com.bootdo.common.utils.PageUtils@4b247db2
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:01:43 -参数 : []
2019-04-24 15:01:43 -耗时 : 1
2019-04-24 15:01:43 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:43 -参数 : [userType]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:43 -参数 : [elecType]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:43 -==> Parameters: userType(String)
2019-04-24 15:01:43 -==> Parameters: elecType(String)
2019-04-24 15:01:43 -<==      Total: 4
2019-04-24 15:01:43 -耗时 : 13
2019-04-24 15:01:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:43 -<==      Total: 11
2019-04-24 15:01:43 -耗时 : 15
2019-04-24 15:01:43 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:01:43 -HTTP METHOD : GET
2019-04-24 15:01:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:01:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:01:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:01:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:01:43 -<==      Total: 10
2019-04-24 15:01:43 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:01:43 -==> Parameters: 
2019-04-24 15:01:43 -<==      Total: 1
2019-04-24 15:01:43 -耗时 : 160
2019-04-24 15:01:43 -返回值 : com.bootdo.common.utils.PageUtils@3b2ec2a1
2019-04-24 15:01:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:01:44 -HTTP METHOD : GET
2019-04-24 15:01:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:01:44 -参数 : []
2019-04-24 15:01:44 -耗时 : 0
2019-04-24 15:01:44 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:01:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:01:44 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:01:44 -HTTP METHOD : GET
2019-04-24 15:01:44 -HTTP METHOD : GET
2019-04-24 15:01:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:01:44 -参数 : [userType]
2019-04-24 15:01:44 -参数 : [waterType]
2019-04-24 15:01:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:01:44 -==> Parameters: waterType(String)
2019-04-24 15:01:44 -==> Parameters: userType(String)
2019-04-24 15:01:44 -<==      Total: 2
2019-04-24 15:01:44 -耗时 : 6
2019-04-24 15:01:44 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:44 -<==      Total: 4
2019-04-24 15:01:44 -耗时 : 10
2019-04-24 15:01:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:01:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:01:44 -HTTP METHOD : GET
2019-04-24 15:01:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:01:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:01:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:01:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:01:44 -<==      Total: 6
2019-04-24 15:01:44 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:01:44 -==> Parameters: 
2019-04-24 15:01:44 -<==      Total: 1
2019-04-24 15:01:44 -耗时 : 10
2019-04-24 15:01:44 -返回值 : com.bootdo.common.utils.PageUtils@5d3c274a
2019-04-24 15:02:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:02:18 -HTTP METHOD : GET
2019-04-24 15:02:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:02:18 -参数 : []
2019-04-24 15:02:18 -耗时 : 1
2019-04-24 15:02:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:02:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:02:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:02:18 -HTTP METHOD : GET
2019-04-24 15:02:18 -HTTP METHOD : GET
2019-04-24 15:02:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:18 -参数 : [userType]
2019-04-24 15:02:18 -参数 : [heatType]
2019-04-24 15:02:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:18 -==> Parameters: userType(String)
2019-04-24 15:02:18 -==> Parameters: heatType(String)
2019-04-24 15:02:18 -<==      Total: 4
2019-04-24 15:02:18 -<==      Total: 4
2019-04-24 15:02:18 -耗时 : 5
2019-04-24 15:02:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:18 -耗时 : 6
2019-04-24 15:02:18 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:02:18 -HTTP METHOD : GET
2019-04-24 15:02:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:02:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:02:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:02:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:02:18 -<==      Total: 6
2019-04-24 15:02:18 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:02:18 -==> Parameters: 
2019-04-24 15:02:18 -<==      Total: 1
2019-04-24 15:02:18 -耗时 : 158
2019-04-24 15:02:18 -返回值 : com.bootdo.common.utils.PageUtils@728b10af
2019-04-24 15:02:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:02:21 -HTTP METHOD : GET
2019-04-24 15:02:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:02:21 -参数 : []
2019-04-24 15:02:21 -耗时 : 1
2019-04-24 15:02:21 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:02:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:02:21 -HTTP METHOD : GET
2019-04-24 15:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:21 -参数 : [userType]
2019-04-24 15:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:21 -==> Parameters: userType(String)
2019-04-24 15:02:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:02:21 -HTTP METHOD : GET
2019-04-24 15:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:21 -参数 : [elecType]
2019-04-24 15:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:21 -==> Parameters: elecType(String)
2019-04-24 15:02:21 -<==      Total: 4
2019-04-24 15:02:21 -耗时 : 6
2019-04-24 15:02:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:21 -<==      Total: 11
2019-04-24 15:02:21 -耗时 : 6
2019-04-24 15:02:21 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:02:21 -HTTP METHOD : GET
2019-04-24 15:02:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:02:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:02:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:02:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:02:22 -<==      Total: 10
2019-04-24 15:02:22 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:02:22 -==> Parameters: 
2019-04-24 15:02:22 -<==      Total: 1
2019-04-24 15:02:22 -耗时 : 430
2019-04-24 15:02:22 -返回值 : com.bootdo.common.utils.PageUtils@754bd9d0
2019-04-24 15:02:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:02:26 -HTTP METHOD : GET
2019-04-24 15:02:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:02:26 -参数 : []
2019-04-24 15:02:26 -耗时 : 0
2019-04-24 15:02:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:02:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:02:26 -HTTP METHOD : GET
2019-04-24 15:02:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:02:26 -参数 : [heatType]
2019-04-24 15:02:26 -HTTP METHOD : GET
2019-04-24 15:02:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:02:26 -参数 : [userType]
2019-04-24 15:02:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:02:26 -==> Parameters: heatType(String)
2019-04-24 15:02:26 -==> Parameters: userType(String)
2019-04-24 15:02:26 -<==      Total: 4
2019-04-24 15:02:26 -耗时 : 4
2019-04-24 15:02:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:26 -<==      Total: 4
2019-04-24 15:02:26 -耗时 : 11
2019-04-24 15:02:26 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:02:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:02:26 -HTTP METHOD : GET
2019-04-24 15:02:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:02:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:02:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:02:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:02:26 -<==      Total: 6
2019-04-24 15:02:26 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:02:26 -==> Parameters: 
2019-04-24 15:02:26 -<==      Total: 1
2019-04-24 15:02:26 -耗时 : 14
2019-04-24 15:02:26 -返回值 : com.bootdo.common.utils.PageUtils@fbfa2a8
2019-04-24 15:04:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:04:01 -HTTP METHOD : GET
2019-04-24 15:04:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:04:01 -参数 : []
2019-04-24 15:04:01 -耗时 : 1
2019-04-24 15:04:01 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:04:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:04:01 -HTTP METHOD : GET
2019-04-24 15:04:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:04:01 -参数 : [userType]
2019-04-24 15:04:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:04:01 -==> Parameters: userType(String)
2019-04-24 15:04:01 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:04:01 -HTTP METHOD : GET
2019-04-24 15:04:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:04:01 -参数 : [elecType]
2019-04-24 15:04:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:04:01 -==> Parameters: elecType(String)
2019-04-24 15:04:01 -<==      Total: 4
2019-04-24 15:04:01 -耗时 : 6
2019-04-24 15:04:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:04:01 -<==      Total: 11
2019-04-24 15:04:01 -耗时 : 12
2019-04-24 15:04:01 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:04:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:04:01 -HTTP METHOD : GET
2019-04-24 15:04:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:04:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:04:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:04:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:04:01 -<==      Total: 10
2019-04-24 15:04:01 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:04:01 -==> Parameters: 
2019-04-24 15:04:01 -<==      Total: 1
2019-04-24 15:04:01 -耗时 : 10
2019-04-24 15:04:01 -返回值 : com.bootdo.common.utils.PageUtils@6443f779
2019-04-24 15:04:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:04:03 -HTTP METHOD : GET
2019-04-24 15:04:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:04:03 -参数 : []
2019-04-24 15:04:03 -耗时 : 0
2019-04-24 15:04:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:04:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:04:03 -HTTP METHOD : GET
2019-04-24 15:04:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:04:03 -参数 : [userType]
2019-04-24 15:04:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:04:03 -==> Parameters: userType(String)
2019-04-24 15:04:03 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:04:03 -HTTP METHOD : GET
2019-04-24 15:04:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:04:03 -参数 : [heatType]
2019-04-24 15:04:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:04:03 -==> Parameters: heatType(String)
2019-04-24 15:04:03 -<==      Total: 4
2019-04-24 15:04:03 -耗时 : 7
2019-04-24 15:04:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:04:03 -<==      Total: 4
2019-04-24 15:04:03 -耗时 : 9
2019-04-24 15:04:03 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:04:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:04:03 -HTTP METHOD : GET
2019-04-24 15:04:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:04:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:04:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:04:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:04:03 -<==      Total: 6
2019-04-24 15:04:03 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:04:03 -==> Parameters: 
2019-04-24 15:04:03 -<==      Total: 1
2019-04-24 15:04:03 -耗时 : 8
2019-04-24 15:04:03 -返回值 : com.bootdo.common.utils.PageUtils@5392b123
2019-04-24 15:04:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 15:04:05 -HTTP METHOD : GET
2019-04-24 15:04:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 15:04:05 -参数 : []
2019-04-24 15:04:05 -耗时 : 0
2019-04-24 15:04:05 -返回值 : system/dept/deptTree
2019-04-24 15:04:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 15:04:05 -HTTP METHOD : GET
2019-04-24 15:04:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 15:04:05 -参数 : []
2019-04-24 15:04:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 15:04:05 -==> Parameters: 
2019-04-24 15:04:05 -<==      Total: 3
2019-04-24 15:04:05 -耗时 : 29
2019-04-24 15:04:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 15:04:32 -请求地址 : http://localhost:8081/common/dict
2019-04-24 15:04:32 -HTTP METHOD : GET
2019-04-24 15:04:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2019-04-24 15:04:32 -参数 : []
2019-04-24 15:04:32 -耗时 : 0
2019-04-24 15:04:32 -返回值 : common/dict/dict
2019-04-24 15:04:32 -请求地址 : http://localhost:8081/common/dict/type
2019-04-24 15:04:32 -HTTP METHOD : GET
2019-04-24 15:04:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2019-04-24 15:04:32 -参数 : []
2019-04-24 15:04:32 -==>  Preparing: select distinct `type` , description from sys_dict 
2019-04-24 15:04:32 -==> Parameters: 
2019-04-24 15:04:32 -<==      Total: 38
2019-04-24 15:04:32 -耗时 : 7
2019-04-24 15:04:32 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='wx', description='微信支付', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yh', description='银行转账', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2019-04-24 15:04:32 -请求地址 : http://localhost:8081/common/dict/list
2019-04-24 15:04:32 -HTTP METHOD : GET
2019-04-24 15:04:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-24 15:04:32 -参数 : [{limit=10, offset=0}]
2019-04-24 15:04:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-24 15:04:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:04:32 -<==      Total: 10
2019-04-24 15:04:32 -==>  Preparing: select count(*) from sys_dict 
2019-04-24 15:04:32 -==> Parameters: 
2019-04-24 15:04:32 -<==      Total: 1
2019-04-24 15:04:32 -耗时 : 31
2019-04-24 15:04:32 -返回值 : com.bootdo.common.utils.PageUtils@58d6b966
2019-04-24 15:04:43 -请求地址 : http://localhost:8081/common/dict/list
2019-04-24 15:04:43 -HTTP METHOD : GET
2019-04-24 15:04:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-24 15:04:43 -参数 : [{limit=10, offset=10}]
2019-04-24 15:04:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-24 15:04:43 -==> Parameters: 10(Integer), 10(Integer)
2019-04-24 15:04:43 -<==      Total: 10
2019-04-24 15:04:43 -==>  Preparing: select count(*) from sys_dict 
2019-04-24 15:04:43 -==> Parameters: 
2019-04-24 15:04:43 -<==      Total: 1
2019-04-24 15:04:43 -耗时 : 7
2019-04-24 15:04:43 -返回值 : com.bootdo.common.utils.PageUtils@1625c088
2019-04-24 15:04:51 -请求地址 : http://localhost:8081/common/dict/list
2019-04-24 15:04:51 -HTTP METHOD : GET
2019-04-24 15:04:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-24 15:04:51 -参数 : [{limit=10, offset=20}]
2019-04-24 15:04:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-24 15:04:51 -==> Parameters: 20(Integer), 10(Integer)
2019-04-24 15:04:51 -<==      Total: 10
2019-04-24 15:04:51 -==>  Preparing: select count(*) from sys_dict 
2019-04-24 15:04:51 -==> Parameters: 
2019-04-24 15:04:51 -<==      Total: 1
2019-04-24 15:04:51 -耗时 : 6
2019-04-24 15:04:51 -返回值 : com.bootdo.common.utils.PageUtils@8b130b5
2019-04-24 15:09:24 -请求地址 : http://localhost:8081/index
2019-04-24 15:09:24 -HTTP METHOD : GET
2019-04-24 15:09:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:09:24 -参数 : [{}]
2019-04-24 15:09:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:09:24 -==> Parameters: 1(Long)
2019-04-24 15:09:24 -<==      Total: 49
2019-04-24 15:09:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:09:24 -==> Parameters: 138(Long)
2019-04-24 15:09:24 -<==      Total: 1
2019-04-24 15:09:24 -耗时 : 21
2019-04-24 15:09:24 -返回值 : index_v1
2019-04-24 15:09:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:09:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:09:24.946(Timestamp)
2019-04-24 15:09:25 -请求地址 : http://localhost:8081/main
2019-04-24 15:09:25 -HTTP METHOD : GET
2019-04-24 15:09:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:09:25 -参数 : []
2019-04-24 15:09:25 -耗时 : 1
2019-04-24 15:09:25 -返回值 : main
2019-04-24 15:09:25 -<==    Updates: 1
2019-04-24 15:09:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:09:25 -HTTP METHOD : GET
2019-04-24 15:09:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:09:25 -参数 : []
2019-04-24 15:09:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:09:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:09:25 -<==      Total: 0
2019-04-24 15:09:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:09:25 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:09:25 -<==      Total: 1
2019-04-24 15:09:25 -耗时 : 10
2019-04-24 15:09:25 -返回值 : com.bootdo.common.utils.PageUtils@4b5b216a
2019-04-24 15:09:25 -请求地址 : http://localhost:8081/main
2019-04-24 15:09:25 -HTTP METHOD : GET
2019-04-24 15:09:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:09:25 -参数 : []
2019-04-24 15:09:25 -耗时 : 1
2019-04-24 15:09:25 -返回值 : main
2019-04-24 15:09:27 -请求地址 : http://localhost:8081/index
2019-04-24 15:09:27 -HTTP METHOD : GET
2019-04-24 15:09:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:09:27 -参数 : [{}]
2019-04-24 15:09:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:09:27 -==> Parameters: 1(Long)
2019-04-24 15:09:27 -<==      Total: 49
2019-04-24 15:09:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:09:27 -==> Parameters: 138(Long)
2019-04-24 15:09:27 -<==      Total: 1
2019-04-24 15:09:27 -耗时 : 28
2019-04-24 15:09:27 -返回值 : index_v1
2019-04-24 15:09:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:09:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:09:27.689(Timestamp)
2019-04-24 15:09:27 -<==    Updates: 1
2019-04-24 15:09:27 -请求地址 : http://localhost:8081/main
2019-04-24 15:09:27 -HTTP METHOD : GET
2019-04-24 15:09:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:09:27 -参数 : []
2019-04-24 15:09:27 -耗时 : 0
2019-04-24 15:09:27 -返回值 : main
2019-04-24 15:09:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:09:27 -HTTP METHOD : GET
2019-04-24 15:09:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:09:27 -参数 : []
2019-04-24 15:09:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:09:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:09:27 -<==      Total: 0
2019-04-24 15:09:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:09:27 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:09:27 -<==      Total: 1
2019-04-24 15:09:27 -耗时 : 9
2019-04-24 15:09:27 -返回值 : com.bootdo.common.utils.PageUtils@3dc507d9
2019-04-24 15:09:27 -请求地址 : http://localhost:8081/main
2019-04-24 15:09:27 -HTTP METHOD : GET
2019-04-24 15:09:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:09:27 -参数 : []
2019-04-24 15:09:27 -耗时 : 0
2019-04-24 15:09:27 -返回值 : main
2019-04-24 15:09:30 -请求地址 : http://localhost:8081/elec/elec
2019-04-24 15:09:30 -HTTP METHOD : GET
2019-04-24 15:09:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-24 15:09:30 -参数 : []
2019-04-24 15:09:30 -耗时 : 1
2019-04-24 15:09:30 -返回值 : elec/elec/elec
2019-04-24 15:09:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:09:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:09:30 -HTTP METHOD : GET
2019-04-24 15:09:30 -HTTP METHOD : GET
2019-04-24 15:09:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:09:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:09:30 -参数 : [userType]
2019-04-24 15:09:30 -参数 : [elecType]
2019-04-24 15:09:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:09:30 -==> Parameters: userType(String)
2019-04-24 15:09:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:09:30 -==> Parameters: elecType(String)
2019-04-24 15:09:30 -<==      Total: 4
2019-04-24 15:09:30 -耗时 : 6
2019-04-24 15:09:30 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:09:30 -<==      Total: 11
2019-04-24 15:09:30 -耗时 : 8
2019-04-24 15:09:30 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:09:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:09:30 -HTTP METHOD : GET
2019-04-24 15:09:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:09:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@21b28d3b]
2019-04-24 15:09:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:09:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:09:31 -<==      Total: 10
2019-04-24 15:09:31 -==>  Preparing: select count(*) from elec 
2019-04-24 15:09:31 -==> Parameters: 
2019-04-24 15:09:31 -<==      Total: 1
2019-04-24 15:09:31 -耗时 : 138
2019-04-24 15:09:31 -返回值 : com.bootdo.common.utils.PageUtils@7ba24c7f
2019-04-24 15:09:38 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 15:09:38 -HTTP METHOD : GET
2019-04-24 15:09:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 15:09:38 -参数 : []
2019-04-24 15:09:38 -耗时 : 1
2019-04-24 15:09:38 -返回值 : /moneyList/moneyList
2019-04-24 15:09:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:09:39 -HTTP METHOD : GET
2019-04-24 15:09:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:09:39 -参数 : []
2019-04-24 15:09:39 -耗时 : 0
2019-04-24 15:09:39 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:09:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:09:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:09:39 -HTTP METHOD : GET
2019-04-24 15:09:39 -HTTP METHOD : GET
2019-04-24 15:09:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:09:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:09:39 -参数 : [userType]
2019-04-24 15:09:39 -参数 : [elecType]
2019-04-24 15:09:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:09:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:09:39 -==> Parameters: elecType(String)
2019-04-24 15:09:39 -==> Parameters: userType(String)
2019-04-24 15:09:39 -<==      Total: 4
2019-04-24 15:09:39 -<==      Total: 11
2019-04-24 15:09:39 -耗时 : 5
2019-04-24 15:09:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:09:39 -耗时 : 5
2019-04-24 15:09:39 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:09:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:09:39 -HTTP METHOD : GET
2019-04-24 15:09:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:09:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:09:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:09:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:09:39 -<==      Total: 10
2019-04-24 15:09:39 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:09:39 -==> Parameters: 
2019-04-24 15:09:39 -<==      Total: 1
2019-04-24 15:09:39 -耗时 : 11
2019-04-24 15:09:39 -返回值 : com.bootdo.common.utils.PageUtils@4bb5a6f3
2019-04-24 15:10:04 -请求地址 : http://localhost:8081/login;JSESSIONID=1deae55c-cdc3-4407-8070-496a3c85234f
2019-04-24 15:10:04 -HTTP METHOD : GET
2019-04-24 15:10:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 15:10:04 -参数 : [{}]
2019-04-24 15:10:04 -耗时 : 1
2019-04-24 15:10:04 -返回值 : login
2019-04-24 15:10:05 -请求地址 : http://localhost:8081/getVerify
2019-04-24 15:10:05 -HTTP METHOD : GET
2019-04-24 15:10:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 15:10:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35800cef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5f6d47fd]
2019-04-24 15:10:05 -4211
2019-04-24 15:10:05 -耗时 : 18
2019-04-24 15:10:05 -返回值 : null
2019-04-24 15:10:05 -请求地址 : http://localhost:8081/login
2019-04-24 15:10:05 -HTTP METHOD : GET
2019-04-24 15:10:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 15:10:05 -参数 : [{}]
2019-04-24 15:10:05 -耗时 : 1
2019-04-24 15:10:05 -返回值 : login
2019-04-24 15:10:10 -请求地址 : http://localhost:8081/login
2019-04-24 15:10:10 -HTTP METHOD : POST
2019-04-24 15:10:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 15:10:10 -参数 : [admin, 111111, 4211, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b080a5c]
2019-04-24 15:10:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 15:10:10 -==> Parameters: admin(String)
2019-04-24 15:10:10 -<==      Total: 1
2019-04-24 15:10:10 -耗时 : 120
2019-04-24 15:10:10 -返回值 : {msg=操作成功, code=0}
2019-04-24 15:10:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:10:10 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 15:10:10.362(Timestamp)
2019-04-24 15:10:10 -请求地址 : http://localhost:8081/index
2019-04-24 15:10:10 -HTTP METHOD : GET
2019-04-24 15:10:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:10:10 -参数 : [{}]
2019-04-24 15:10:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:10:10 -==> Parameters: 1(Long)
2019-04-24 15:10:10 -<==      Total: 49
2019-04-24 15:10:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:10:10 -==> Parameters: 138(Long)
2019-04-24 15:10:10 -<==      Total: 1
2019-04-24 15:10:10 -耗时 : 23
2019-04-24 15:10:10 -返回值 : index_v1
2019-04-24 15:10:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:10:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:10:10.414(Timestamp)
2019-04-24 15:10:10 -请求地址 : http://localhost:8081/main
2019-04-24 15:10:10 -HTTP METHOD : GET
2019-04-24 15:10:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:10:10 -参数 : []
2019-04-24 15:10:10 -耗时 : 24
2019-04-24 15:10:10 -返回值 : main
2019-04-24 15:10:10 -<==    Updates: 1
2019-04-24 15:10:11 -<==    Updates: 1
2019-04-24 15:10:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:10:11 -HTTP METHOD : GET
2019-04-24 15:10:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:10:11 -参数 : []
2019-04-24 15:10:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:10:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:10:11 -请求地址 : http://localhost:8081/main
2019-04-24 15:10:11 -HTTP METHOD : GET
2019-04-24 15:10:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:10:11 -参数 : []
2019-04-24 15:10:11 -耗时 : 1
2019-04-24 15:10:11 -返回值 : main
2019-04-24 15:10:12 -<==      Total: 0
2019-04-24 15:10:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:10:12 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:10:12 -<==      Total: 1
2019-04-24 15:10:12 -耗时 : 768
2019-04-24 15:10:12 -返回值 : com.bootdo.common.utils.PageUtils@154303e5
2019-04-24 15:10:13 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 15:10:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 15:10:27 -==> Parameters: 1(Long)
2019-04-24 15:10:27 -<==      Total: 93
2019-04-24 15:10:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:10:27 -HTTP METHOD : GET
2019-04-24 15:10:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:10:27 -参数 : []
2019-04-24 15:10:27 -耗时 : 0
2019-04-24 15:10:27 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:10:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:10:28 -HTTP METHOD : GET
2019-04-24 15:10:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:28 -参数 : [userType]
2019-04-24 15:10:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:28 -==> Parameters: userType(String)
2019-04-24 15:10:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:10:28 -HTTP METHOD : GET
2019-04-24 15:10:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:28 -参数 : [elecType]
2019-04-24 15:10:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:28 -==> Parameters: elecType(String)
2019-04-24 15:10:28 -<==      Total: 4
2019-04-24 15:10:28 -耗时 : 4
2019-04-24 15:10:28 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:28 -<==      Total: 11
2019-04-24 15:10:28 -耗时 : 6
2019-04-24 15:10:28 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:10:28 -HTTP METHOD : GET
2019-04-24 15:10:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:10:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:10:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:10:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:10:28 -<==      Total: 10
2019-04-24 15:10:28 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:10:28 -==> Parameters: 
2019-04-24 15:10:28 -<==      Total: 1
2019-04-24 15:10:28 -耗时 : 9
2019-04-24 15:10:28 -返回值 : com.bootdo.common.utils.PageUtils@1f1edbd9
2019-04-24 15:10:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:10:29 -HTTP METHOD : GET
2019-04-24 15:10:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:10:29 -参数 : []
2019-04-24 15:10:29 -耗时 : 0
2019-04-24 15:10:29 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:10:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:10:29 -HTTP METHOD : GET
2019-04-24 15:10:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:29 -参数 : [userType]
2019-04-24 15:10:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:29 -==> Parameters: userType(String)
2019-04-24 15:10:29 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:10:29 -HTTP METHOD : GET
2019-04-24 15:10:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:29 -参数 : [waterType]
2019-04-24 15:10:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:29 -==> Parameters: waterType(String)
2019-04-24 15:10:29 -<==      Total: 4
2019-04-24 15:10:29 -耗时 : 3
2019-04-24 15:10:29 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:29 -<==      Total: 2
2019-04-24 15:10:29 -耗时 : 4
2019-04-24 15:10:29 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:29 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:10:29 -HTTP METHOD : GET
2019-04-24 15:10:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:10:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:10:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:10:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:10:29 -<==      Total: 6
2019-04-24 15:10:29 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:10:29 -==> Parameters: 
2019-04-24 15:10:29 -<==      Total: 1
2019-04-24 15:10:29 -耗时 : 141
2019-04-24 15:10:29 -返回值 : com.bootdo.common.utils.PageUtils@5f826d1
2019-04-24 15:10:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:10:52 -HTTP METHOD : GET
2019-04-24 15:10:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:10:52 -参数 : []
2019-04-24 15:10:52 -耗时 : 0
2019-04-24 15:10:52 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:10:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:10:52 -HTTP METHOD : GET
2019-04-24 15:10:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:52 -参数 : [userType]
2019-04-24 15:10:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:10:52 -HTTP METHOD : GET
2019-04-24 15:10:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:52 -参数 : [heatType]
2019-04-24 15:10:52 -==> Parameters: userType(String)
2019-04-24 15:10:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:52 -==> Parameters: heatType(String)
2019-04-24 15:10:52 -<==      Total: 4
2019-04-24 15:10:52 -耗时 : 4
2019-04-24 15:10:52 -<==      Total: 4
2019-04-24 15:10:52 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:52 -耗时 : 6
2019-04-24 15:10:52 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:10:52 -HTTP METHOD : GET
2019-04-24 15:10:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:10:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:10:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:10:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:10:52 -<==      Total: 6
2019-04-24 15:10:52 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:10:52 -==> Parameters: 
2019-04-24 15:10:52 -<==      Total: 1
2019-04-24 15:10:52 -耗时 : 10
2019-04-24 15:10:52 -返回值 : com.bootdo.common.utils.PageUtils@1badfac4
2019-04-24 15:10:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:10:56 -HTTP METHOD : GET
2019-04-24 15:10:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:10:56 -参数 : []
2019-04-24 15:10:56 -耗时 : 1
2019-04-24 15:10:56 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:10:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:10:56 -HTTP METHOD : GET
2019-04-24 15:10:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:10:56 -参数 : [userType]
2019-04-24 15:10:56 -HTTP METHOD : GET
2019-04-24 15:10:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:10:56 -参数 : [elecType]
2019-04-24 15:10:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:10:56 -==> Parameters: userType(String)
2019-04-24 15:10:56 -==> Parameters: elecType(String)
2019-04-24 15:10:56 -<==      Total: 4
2019-04-24 15:10:56 -<==      Total: 11
2019-04-24 15:10:56 -耗时 : 4
2019-04-24 15:10:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:56 -耗时 : 4
2019-04-24 15:10:56 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:10:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:10:56 -HTTP METHOD : GET
2019-04-24 15:10:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:10:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:10:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:10:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:10:56 -<==      Total: 10
2019-04-24 15:10:56 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:10:56 -==> Parameters: 
2019-04-24 15:10:56 -<==      Total: 1
2019-04-24 15:10:56 -耗时 : 6
2019-04-24 15:10:56 -返回值 : com.bootdo.common.utils.PageUtils@1de6c9
2019-04-24 15:11:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:11:00 -HTTP METHOD : GET
2019-04-24 15:11:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:11:00 -参数 : []
2019-04-24 15:11:00 -耗时 : 0
2019-04-24 15:11:00 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:11:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:11:00 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:11:00 -HTTP METHOD : GET
2019-04-24 15:11:00 -HTTP METHOD : GET
2019-04-24 15:11:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:00 -参数 : [userType]
2019-04-24 15:11:00 -参数 : [heatType]
2019-04-24 15:11:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:00 -==> Parameters: userType(String)
2019-04-24 15:11:00 -==> Parameters: heatType(String)
2019-04-24 15:11:00 -<==      Total: 4
2019-04-24 15:11:00 -<==      Total: 4
2019-04-24 15:11:00 -耗时 : 5
2019-04-24 15:11:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:00 -耗时 : 6
2019-04-24 15:11:00 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:11:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:11:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:11:01 -<==      Total: 6
2019-04-24 15:11:01 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:11:01 -==> Parameters: 
2019-04-24 15:11:01 -<==      Total: 1
2019-04-24 15:11:01 -耗时 : 7
2019-04-24 15:11:01 -返回值 : com.bootdo.common.utils.PageUtils@db3970d
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:11:01 -参数 : []
2019-04-24 15:11:01 -耗时 : 1
2019-04-24 15:11:01 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:01 -参数 : [userType]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -==> Parameters: userType(String)
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:01 -参数 : [elecType]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:01 -==> Parameters: elecType(String)
2019-04-24 15:11:01 -<==      Total: 4
2019-04-24 15:11:01 -<==      Total: 11
2019-04-24 15:11:01 -耗时 : 4
2019-04-24 15:11:01 -耗时 : 7
2019-04-24 15:11:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:01 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:11:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:11:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:11:01 -<==      Total: 10
2019-04-24 15:11:01 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:11:01 -==> Parameters: 
2019-04-24 15:11:01 -<==      Total: 1
2019-04-24 15:11:01 -耗时 : 7
2019-04-24 15:11:01 -返回值 : com.bootdo.common.utils.PageUtils@5ba6fb49
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:11:01 -参数 : []
2019-04-24 15:11:01 -耗时 : 0
2019-04-24 15:11:01 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:11:01 -参数 : [userType]
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:01 -参数 : [heatType]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:01 -==> Parameters: heatType(String)
2019-04-24 15:11:01 -==> Parameters: userType(String)
2019-04-24 15:11:01 -<==      Total: 4
2019-04-24 15:11:01 -<==      Total: 4
2019-04-24 15:11:01 -耗时 : 4
2019-04-24 15:11:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:01 -耗时 : 6
2019-04-24 15:11:01 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:11:01 -HTTP METHOD : GET
2019-04-24 15:11:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:11:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:11:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:11:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:11:01 -<==      Total: 6
2019-04-24 15:11:01 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:11:01 -==> Parameters: 
2019-04-24 15:11:01 -<==      Total: 1
2019-04-24 15:11:01 -耗时 : 7
2019-04-24 15:11:01 -返回值 : com.bootdo.common.utils.PageUtils@3714508
2019-04-24 15:11:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:11:02 -HTTP METHOD : GET
2019-04-24 15:11:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:11:02 -参数 : []
2019-04-24 15:11:02 -耗时 : 1
2019-04-24 15:11:02 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:11:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:11:02 -HTTP METHOD : GET
2019-04-24 15:11:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:02 -参数 : [userType]
2019-04-24 15:11:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:02 -==> Parameters: userType(String)
2019-04-24 15:11:02 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:11:02 -HTTP METHOD : GET
2019-04-24 15:11:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:11:02 -参数 : [waterType]
2019-04-24 15:11:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:11:02 -==> Parameters: waterType(String)
2019-04-24 15:11:02 -<==      Total: 4
2019-04-24 15:11:02 -耗时 : 6
2019-04-24 15:11:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:02 -<==      Total: 2
2019-04-24 15:11:02 -耗时 : 7
2019-04-24 15:11:02 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:11:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:11:02 -HTTP METHOD : GET
2019-04-24 15:11:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:11:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:11:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:11:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:11:02 -<==      Total: 6
2019-04-24 15:11:02 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:11:02 -==> Parameters: 
2019-04-24 15:11:02 -<==      Total: 1
2019-04-24 15:11:02 -耗时 : 7
2019-04-24 15:11:02 -返回值 : com.bootdo.common.utils.PageUtils@1a4a1bc6
2019-04-24 15:12:57 -请求地址 : http://localhost:8081/common/dict
2019-04-24 15:12:57 -HTTP METHOD : GET
2019-04-24 15:12:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2019-04-24 15:12:57 -参数 : []
2019-04-24 15:12:57 -耗时 : 0
2019-04-24 15:12:57 -返回值 : common/dict/dict
2019-04-24 15:12:58 -请求地址 : http://localhost:8081/common/dict/type
2019-04-24 15:12:58 -HTTP METHOD : GET
2019-04-24 15:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2019-04-24 15:12:58 -参数 : []
2019-04-24 15:12:58 -==>  Preparing: select distinct `type` , description from sys_dict 
2019-04-24 15:12:58 -==> Parameters: 
2019-04-24 15:12:58 -<==      Total: 38
2019-04-24 15:12:58 -耗时 : 5
2019-04-24 15:12:58 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='wx', description='微信支付', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yh', description='银行转账', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2019-04-24 15:12:58 -请求地址 : http://localhost:8081/common/dict/list
2019-04-24 15:12:58 -HTTP METHOD : GET
2019-04-24 15:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-24 15:12:58 -参数 : [{limit=10, offset=0}]
2019-04-24 15:12:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-24 15:12:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:12:58 -<==      Total: 10
2019-04-24 15:12:58 -==>  Preparing: select count(*) from sys_dict 
2019-04-24 15:12:58 -==> Parameters: 
2019-04-24 15:12:58 -<==      Total: 1
2019-04-24 15:12:58 -耗时 : 6
2019-04-24 15:12:58 -返回值 : com.bootdo.common.utils.PageUtils@69d58b17
2019-04-24 15:12:58 -请求地址 : http://localhost:8081/common/sysFile
2019-04-24 15:12:58 -HTTP METHOD : GET
2019-04-24 15:12:58 -CLASS_METHOD : com.bootdo.common.controller.FileController.sysFile
2019-04-24 15:12:58 -参数 : [{}]
2019-04-24 15:12:58 -耗时 : 1
2019-04-24 15:12:58 -返回值 : common/file/file
2019-04-24 15:12:58 -请求地址 : http://localhost:8081/common/sysFile/list
2019-04-24 15:12:58 -HTTP METHOD : GET
2019-04-24 15:12:58 -CLASS_METHOD : com.bootdo.common.controller.FileController.list
2019-04-24 15:12:58 -参数 : [{limit=12, offset=0, type=}]
2019-04-24 15:12:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2019-04-24 15:12:58 -==> Parameters: 0(Integer), 12(Integer)
2019-04-24 15:12:58 -<==      Total: 10
2019-04-24 15:12:58 -==>  Preparing: select count(*) from sys_file 
2019-04-24 15:12:58 -==> Parameters: 
2019-04-24 15:12:58 -<==      Total: 1
2019-04-24 15:12:58 -耗时 : 84
2019-04-24 15:12:58 -返回值 : com.bootdo.common.utils.PageUtils@4c71211a
2019-04-24 15:15:47 -请求地址 : http://localhost:8081/index
2019-04-24 15:15:47 -HTTP METHOD : GET
2019-04-24 15:15:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:15:47 -参数 : [{}]
2019-04-24 15:15:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:15:47 -==> Parameters: 1(Long)
2019-04-24 15:15:47 -<==      Total: 49
2019-04-24 15:15:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:15:47 -==> Parameters: 138(Long)
2019-04-24 15:15:47 -<==      Total: 1
2019-04-24 15:15:47 -耗时 : 23
2019-04-24 15:15:47 -返回值 : index_v1
2019-04-24 15:15:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:15:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:15:47.662(Timestamp)
2019-04-24 15:15:47 -请求地址 : http://localhost:8081/main
2019-04-24 15:15:47 -HTTP METHOD : GET
2019-04-24 15:15:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:15:47 -参数 : []
2019-04-24 15:15:47 -耗时 : 0
2019-04-24 15:15:47 -返回值 : main
2019-04-24 15:15:47 -<==    Updates: 1
2019-04-24 15:15:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:15:47 -HTTP METHOD : GET
2019-04-24 15:15:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:15:47 -参数 : []
2019-04-24 15:15:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:15:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:15:47 -<==      Total: 0
2019-04-24 15:15:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:15:47 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:15:47 -<==      Total: 1
2019-04-24 15:15:47 -耗时 : 6
2019-04-24 15:15:47 -返回值 : com.bootdo.common.utils.PageUtils@4a260f13
2019-04-24 15:15:48 -请求地址 : http://localhost:8081/main
2019-04-24 15:15:48 -HTTP METHOD : GET
2019-04-24 15:15:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:15:48 -参数 : []
2019-04-24 15:15:48 -耗时 : 0
2019-04-24 15:15:48 -返回值 : main
2019-04-24 15:15:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:15:50 -HTTP METHOD : GET
2019-04-24 15:15:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:15:50 -参数 : []
2019-04-24 15:15:50 -耗时 : 1
2019-04-24 15:15:50 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:15:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:15:50 -HTTP METHOD : GET
2019-04-24 15:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:15:50 -参数 : [userType]
2019-04-24 15:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:15:50 -==> Parameters: userType(String)
2019-04-24 15:15:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:15:50 -HTTP METHOD : GET
2019-04-24 15:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:15:50 -参数 : [elecType]
2019-04-24 15:15:50 -<==      Total: 4
2019-04-24 15:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:15:50 -耗时 : 4
2019-04-24 15:15:50 -==> Parameters: elecType(String)
2019-04-24 15:15:50 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:15:50 -<==      Total: 11
2019-04-24 15:15:50 -耗时 : 5
2019-04-24 15:15:50 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:15:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:15:50 -HTTP METHOD : GET
2019-04-24 15:15:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:15:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:15:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:15:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:15:50 -<==      Total: 10
2019-04-24 15:15:50 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:15:50 -==> Parameters: 
2019-04-24 15:15:50 -<==      Total: 1
2019-04-24 15:15:50 -耗时 : 7
2019-04-24 15:15:50 -返回值 : com.bootdo.common.utils.PageUtils@4602475a
2019-04-24 15:16:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:22 -HTTP METHOD : GET
2019-04-24 15:16:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=10}]
2019-04-24 15:16:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:22 -<==      Total: 10
2019-04-24 15:16:22 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:22 -==> Parameters: 
2019-04-24 15:16:22 -<==      Total: 1
2019-04-24 15:16:22 -耗时 : 18
2019-04-24 15:16:22 -返回值 : com.bootdo.common.utils.PageUtils@1f39453b
2019-04-24 15:16:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:25 -HTTP METHOD : GET
2019-04-24 15:16:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=8}]
2019-04-24 15:16:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:25 -<==      Total: 10
2019-04-24 15:16:25 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:25 -==> Parameters: 
2019-04-24 15:16:25 -<==      Total: 1
2019-04-24 15:16:25 -耗时 : 23
2019-04-24 15:16:25 -返回值 : com.bootdo.common.utils.PageUtils@58e13e39
2019-04-24 15:16:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:27 -HTTP METHOD : GET
2019-04-24 15:16:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=9}]
2019-04-24 15:16:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:27 -<==      Total: 10
2019-04-24 15:16:27 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:27 -==> Parameters: 
2019-04-24 15:16:27 -<==      Total: 1
2019-04-24 15:16:27 -耗时 : 18
2019-04-24 15:16:27 -返回值 : com.bootdo.common.utils.PageUtils@745ff6ab
2019-04-24 15:16:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:29 -HTTP METHOD : GET
2019-04-24 15:16:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=10}]
2019-04-24 15:16:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:29 -<==      Total: 10
2019-04-24 15:16:29 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:29 -==> Parameters: 
2019-04-24 15:16:29 -<==      Total: 1
2019-04-24 15:16:29 -耗时 : 16
2019-04-24 15:16:29 -返回值 : com.bootdo.common.utils.PageUtils@3c32a665
2019-04-24 15:16:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:31 -HTTP METHOD : GET
2019-04-24 15:16:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=7}]
2019-04-24 15:16:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:31 -<==      Total: 10
2019-04-24 15:16:31 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:31 -==> Parameters: 
2019-04-24 15:16:31 -<==      Total: 1
2019-04-24 15:16:31 -耗时 : 16
2019-04-24 15:16:31 -返回值 : com.bootdo.common.utils.PageUtils@6edd4581
2019-04-24 15:16:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:34 -HTTP METHOD : GET
2019-04-24 15:16:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=8}]
2019-04-24 15:16:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:34 -<==      Total: 10
2019-04-24 15:16:34 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:34 -==> Parameters: 
2019-04-24 15:16:34 -<==      Total: 1
2019-04-24 15:16:34 -耗时 : 14
2019-04-24 15:16:34 -返回值 : com.bootdo.common.utils.PageUtils@520c521d
2019-04-24 15:16:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:36 -HTTP METHOD : GET
2019-04-24 15:16:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=10}]
2019-04-24 15:16:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:36 -<==      Total: 10
2019-04-24 15:16:36 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:36 -==> Parameters: 
2019-04-24 15:16:36 -<==      Total: 1
2019-04-24 15:16:36 -耗时 : 8
2019-04-24 15:16:36 -返回值 : com.bootdo.common.utils.PageUtils@1e5e40ad
2019-04-24 15:16:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:38 -HTTP METHOD : GET
2019-04-24 15:16:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=7}]
2019-04-24 15:16:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:38 -<==      Total: 10
2019-04-24 15:16:38 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:38 -==> Parameters: 
2019-04-24 15:16:38 -<==      Total: 1
2019-04-24 15:16:38 -耗时 : 17
2019-04-24 15:16:38 -返回值 : com.bootdo.common.utils.PageUtils@382beda1
2019-04-24 15:16:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:40 -HTTP METHOD : GET
2019-04-24 15:16:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=8}]
2019-04-24 15:16:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:40 -<==      Total: 10
2019-04-24 15:16:40 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:40 -==> Parameters: 
2019-04-24 15:16:40 -<==      Total: 1
2019-04-24 15:16:40 -耗时 : 14
2019-04-24 15:16:40 -返回值 : com.bootdo.common.utils.PageUtils@3b0d64e4
2019-04-24 15:16:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:44 -HTTP METHOD : GET
2019-04-24 15:16:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=6}]
2019-04-24 15:16:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:44 -<==      Total: 10
2019-04-24 15:16:44 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:44 -==> Parameters: 
2019-04-24 15:16:44 -<==      Total: 1
2019-04-24 15:16:44 -耗时 : 20
2019-04-24 15:16:44 -返回值 : com.bootdo.common.utils.PageUtils@36f06f8
2019-04-24 15:16:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:46 -HTTP METHOD : GET
2019-04-24 15:16:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=8}]
2019-04-24 15:16:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:46 -<==      Total: 10
2019-04-24 15:16:46 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:46 -==> Parameters: 
2019-04-24 15:16:46 -<==      Total: 1
2019-04-24 15:16:46 -耗时 : 9
2019-04-24 15:16:46 -返回值 : com.bootdo.common.utils.PageUtils@7014ecfe
2019-04-24 15:16:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:16:49 -HTTP METHOD : GET
2019-04-24 15:16:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:16:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=, type=9}]
2019-04-24 15:16:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:16:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:16:49 -<==      Total: 10
2019-04-24 15:16:49 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:16:49 -==> Parameters: 
2019-04-24 15:16:49 -<==      Total: 1
2019-04-24 15:16:49 -耗时 : 8
2019-04-24 15:16:49 -返回值 : com.bootdo.common.utils.PageUtils@18121bef
2019-04-24 15:17:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:00 -HTTP METHOD : GET
2019-04-24 15:17:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:00 -参数 : [{limit=10, offset=0, userType=C, userOrg=, userId=, elecDate=, type=C}]
2019-04-24 15:17:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:00 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-04-24 15:17:00 -<==      Total: 0
2019-04-24 15:17:00 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:00 -==> Parameters: C(String)
2019-04-24 15:17:00 -<==      Total: 1
2019-04-24 15:17:00 -耗时 : 18
2019-04-24 15:17:00 -返回值 : com.bootdo.common.utils.PageUtils@48982f5f
2019-04-24 15:17:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:02 -HTTP METHOD : GET
2019-04-24 15:17:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:02 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, elecDate=, type=B}]
2019-04-24 15:17:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:02 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-04-24 15:17:02 -<==      Total: 5
2019-04-24 15:17:02 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:02 -==> Parameters: B(String)
2019-04-24 15:17:02 -<==      Total: 1
2019-04-24 15:17:02 -耗时 : 21
2019-04-24 15:17:02 -返回值 : com.bootdo.common.utils.PageUtils@e9ca76
2019-04-24 15:17:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:04 -HTTP METHOD : GET
2019-04-24 15:17:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:04 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-04-24 15:17:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:04 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-24 15:17:04 -<==      Total: 6
2019-04-24 15:17:04 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:04 -==> Parameters: A(String)
2019-04-24 15:17:04 -<==      Total: 1
2019-04-24 15:17:04 -耗时 : 14
2019-04-24 15:17:04 -返回值 : com.bootdo.common.utils.PageUtils@357789f
2019-04-24 15:17:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:06 -HTTP METHOD : GET
2019-04-24 15:17:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:06 -参数 : [{limit=10, offset=0, userType=D, userOrg=, userId=, elecDate=, type=D}]
2019-04-24 15:17:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:06 -==> Parameters: D(String), 0(Integer), 10(Integer)
2019-04-24 15:17:06 -<==      Total: 0
2019-04-24 15:17:06 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:06 -==> Parameters: D(String)
2019-04-24 15:17:06 -<==      Total: 1
2019-04-24 15:17:06 -耗时 : 21
2019-04-24 15:17:06 -返回值 : com.bootdo.common.utils.PageUtils@4a106bbb
2019-04-24 15:17:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:08 -HTTP METHOD : GET
2019-04-24 15:17:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:08 -参数 : [{limit=10, offset=0, userType=C, userOrg=, userId=, elecDate=, type=C}]
2019-04-24 15:17:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:08 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-04-24 15:17:08 -<==      Total: 0
2019-04-24 15:17:08 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:08 -==> Parameters: C(String)
2019-04-24 15:17:08 -<==      Total: 1
2019-04-24 15:17:08 -耗时 : 14
2019-04-24 15:17:08 -返回值 : com.bootdo.common.utils.PageUtils@53c95b6b
2019-04-24 15:17:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 15:17:11 -HTTP METHOD : GET
2019-04-24 15:17:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 15:17:11 -参数 : []
2019-04-24 15:17:11 -耗时 : 0
2019-04-24 15:17:11 -返回值 : system/dept/deptTree
2019-04-24 15:17:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 15:17:11 -HTTP METHOD : GET
2019-04-24 15:17:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 15:17:11 -参数 : []
2019-04-24 15:17:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 15:17:11 -==> Parameters: 
2019-04-24 15:17:11 -<==      Total: 3
2019-04-24 15:17:11 -耗时 : 3
2019-04-24 15:17:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 15:17:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:14 -HTTP METHOD : GET
2019-04-24 15:17:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:14 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, elecDate=, type=B}]
2019-04-24 15:17:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:17:14 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-04-24 15:17:14 -<==      Total: 5
2019-04-24 15:17:14 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-04-24 15:17:14 -==> Parameters: B(String)
2019-04-24 15:17:14 -<==      Total: 1
2019-04-24 15:17:14 -耗时 : 18
2019-04-24 15:17:14 -返回值 : com.bootdo.common.utils.PageUtils@687c4923
2019-04-24 15:17:21 -请求地址 : http://localhost:8081/index
2019-04-24 15:17:21 -HTTP METHOD : GET
2019-04-24 15:17:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:17:21 -参数 : [{}]
2019-04-24 15:17:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:17:21 -==> Parameters: 1(Long)
2019-04-24 15:17:21 -<==      Total: 49
2019-04-24 15:17:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:17:21 -==> Parameters: 138(Long)
2019-04-24 15:17:21 -<==      Total: 1
2019-04-24 15:17:21 -耗时 : 16
2019-04-24 15:17:21 -返回值 : index_v1
2019-04-24 15:17:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:17:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:17:21.997(Timestamp)
2019-04-24 15:17:22 -请求地址 : http://localhost:8081/main
2019-04-24 15:17:22 -HTTP METHOD : GET
2019-04-24 15:17:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:17:22 -参数 : []
2019-04-24 15:17:22 -耗时 : 0
2019-04-24 15:17:22 -返回值 : main
2019-04-24 15:17:22 -<==    Updates: 1
2019-04-24 15:17:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:17:22 -HTTP METHOD : GET
2019-04-24 15:17:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:17:22 -参数 : []
2019-04-24 15:17:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:17:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:17:22 -<==      Total: 0
2019-04-24 15:17:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:17:22 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:17:22 -<==      Total: 1
2019-04-24 15:17:22 -耗时 : 4
2019-04-24 15:17:22 -返回值 : com.bootdo.common.utils.PageUtils@77876f3e
2019-04-24 15:17:22 -请求地址 : http://localhost:8081/main
2019-04-24 15:17:22 -HTTP METHOD : GET
2019-04-24 15:17:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:17:22 -参数 : []
2019-04-24 15:17:22 -耗时 : 1
2019-04-24 15:17:22 -返回值 : main
2019-04-24 15:17:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:17:30 -HTTP METHOD : GET
2019-04-24 15:17:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:17:30 -参数 : []
2019-04-24 15:17:30 -耗时 : 0
2019-04-24 15:17:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:17:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:17:30 -HTTP METHOD : GET
2019-04-24 15:17:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:17:30 -参数 : [userType]
2019-04-24 15:17:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:17:30 -==> Parameters: userType(String)
2019-04-24 15:17:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:17:30 -<==      Total: 4
2019-04-24 15:17:30 -HTTP METHOD : GET
2019-04-24 15:17:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:17:30 -参数 : [elecType]
2019-04-24 15:17:30 -耗时 : 6
2019-04-24 15:17:30 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:17:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:17:30 -==> Parameters: elecType(String)
2019-04-24 15:17:30 -<==      Total: 11
2019-04-24 15:17:30 -耗时 : 4
2019-04-24 15:17:30 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:17:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:17:30 -HTTP METHOD : GET
2019-04-24 15:17:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:17:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:17:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:17:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:17:30 -<==      Total: 10
2019-04-24 15:17:30 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:17:30 -==> Parameters: 
2019-04-24 15:17:30 -<==      Total: 1
2019-04-24 15:17:30 -耗时 : 8
2019-04-24 15:17:30 -返回值 : com.bootdo.common.utils.PageUtils@2961ba58
2019-04-24 15:17:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:17:31 -HTTP METHOD : GET
2019-04-24 15:17:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:17:31 -参数 : []
2019-04-24 15:17:31 -耗时 : 1
2019-04-24 15:17:31 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:17:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:17:31 -HTTP METHOD : GET
2019-04-24 15:17:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:17:31 -参数 : [userType]
2019-04-24 15:17:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:17:31 -==> Parameters: userType(String)
2019-04-24 15:17:31 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:17:31 -HTTP METHOD : GET
2019-04-24 15:17:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:17:31 -参数 : [waterType]
2019-04-24 15:17:31 -<==      Total: 4
2019-04-24 15:17:31 -耗时 : 4
2019-04-24 15:17:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:17:31 -==> Parameters: waterType(String)
2019-04-24 15:17:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:17:31 -<==      Total: 2
2019-04-24 15:17:31 -耗时 : 6
2019-04-24 15:17:31 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:17:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:17:31 -HTTP METHOD : GET
2019-04-24 15:17:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:17:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:17:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:17:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:17:31 -<==      Total: 6
2019-04-24 15:17:31 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:17:31 -==> Parameters: 
2019-04-24 15:17:31 -<==      Total: 1
2019-04-24 15:17:31 -耗时 : 5
2019-04-24 15:17:31 -返回值 : com.bootdo.common.utils.PageUtils@36f3b066
2019-04-24 15:18:43 -Starting BootdoApplication on ZJZL-20180906VX with PID 8520 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 15:18:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 15:18:43 -The following profiles are active: dev
2019-04-24 15:18:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:18:43 CST 2019]; root of context hierarchy
2019-04-24 15:18:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 15:18:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 15:18:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 15:18:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 15:18:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 15:18:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 15:18:53 -Starting service [Tomcat]
2019-04-24 15:18:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 15:18:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 15:18:54 -Initializing Spring embedded WebApplicationContext
2019-04-24 15:18:54 -Root WebApplicationContext: initialization completed in 10120 ms
2019-04-24 15:18:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 15:18:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 15:18:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 15:18:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 15:18:54 -Filter xssFilter was not registered (disabled)
2019-04-24 15:18:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 15:18:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 15:18:54 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 15:18:54 -Servlet dispatcherServlet mapped to [/]
2019-04-24 15:18:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:18:43 CST 2019]; root of context hierarchy
2019-04-24 15:18:58 -Using default implementation for ThreadExecutor
2019-04-24 15:18:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 15:18:58 -Quartz Scheduler v.2.2.1 created.
2019-04-24 15:18:58 -RAMJobStore initialized.
2019-04-24 15:18:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 15:18:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 15:18:58 -Quartz scheduler version: 2.2.1
2019-04-24 15:18:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e0d16a4
2019-04-24 15:18:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 15:18:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 15:19:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 15:19:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 15:19:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 15:19:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 15:19:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 15:19:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 15:19:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 15:19:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 15:19:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 15:19:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 15:19:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 15:19:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 15:19:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 15:19:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 15:19:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 15:19:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 15:19:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 15:19:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 15:19:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 15:19:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 15:19:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 15:19:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 15:19:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 15:19:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 15:19:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 15:19:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 15:19:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 15:19:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 15:19:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 15:19:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 15:19:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 15:19:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 15:19:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 15:19:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 15:19:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 15:19:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 15:19:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 15:19:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 15:19:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 15:19:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 15:19:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:19:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:19:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 15:19:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 15:19:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 15:19:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 15:19:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 15:19:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 15:19:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 15:19:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 15:19:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 15:19:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 15:19:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 15:19:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 15:19:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 15:19:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 15:19:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 15:19:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 15:19:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 15:19:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 15:19:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 15:19:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 15:19:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 15:19:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 15:19:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 15:19:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 15:19:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 15:19:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 15:19:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 15:19:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 15:19:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 15:19:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 15:19:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 15:19:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 15:19:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 15:19:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 15:19:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 15:19:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 15:19:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 15:19:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 15:19:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 15:19:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 15:19:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 15:19:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 15:19:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 15:19:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 15:19:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 15:19:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 15:19:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 15:19:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 15:19:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 15:19:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:19:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 15:18:43 CST 2019]; root of context hierarchy
2019-04-24 15:19:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:19:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:19:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 15:19:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 15:19:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 15:19:05 -Registering beans for JMX exposure on startup
2019-04-24 15:19:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 15:19:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 15:19:05 -Starting beans in phase 2147483647
2019-04-24 15:19:05 -Context refreshed
2019-04-24 15:19:05 -Found 1 custom documentation plugin(s)
2019-04-24 15:19:06 -Scanning for api listing references
2019-04-24 15:19:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 15:19:06 -Generating unique operation named: removeUsingPOST_1
2019-04-24 15:19:06 -Generating unique operation named: addUsingGET_1
2019-04-24 15:19:06 -Generating unique operation named: editUsingGET_1
2019-04-24 15:19:06 -Generating unique operation named: listUsingGET_1
2019-04-24 15:19:06 -Generating unique operation named: removeUsingPOST_2
2019-04-24 15:19:06 -Generating unique operation named: removeUsingPOST_3
2019-04-24 15:19:06 -Generating unique operation named: saveUsingPOST_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingGET_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingPOST_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingPUT_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 15:19:06 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 15:19:06 -Generating unique operation named: addUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_4
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_5
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_2
2019-04-24 15:19:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_3
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_3
2019-04-24 15:19:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_3
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_6
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_7
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_4
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_4
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_4
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_8
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_9
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 15:19:07 -Generating unique operation named: ElecUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_5
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_5
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_5
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_10
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_11
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_6
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_6
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_6
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_7
2019-04-24 15:19:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_7
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_12
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_13
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 15:19:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_7
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_8
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_8
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_14
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_15
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_8
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_9
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_9
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_16
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_17
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_9
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_9
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_10
2019-04-24 15:19:07 -Generating unique operation named: infoUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingPOST_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingPUT_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 15:19:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_10
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_18
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_19
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_9
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_10
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_11
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_20
2019-04-24 15:19:07 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_10
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_11
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_12
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_21
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_10
2019-04-24 15:19:07 -Generating unique operation named: treeUsingGET_1
2019-04-24 15:19:07 -Generating unique operation named: treeUsingGET_2
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_11
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_11
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_12
2019-04-24 15:19:07 -Generating unique operation named: listUsingGET_13
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_22
2019-04-24 15:19:07 -Generating unique operation named: removeUsingPOST_23
2019-04-24 15:19:07 -Generating unique operation named: saveUsingPOST_11
2019-04-24 15:19:07 -Generating unique operation named: updateUsingGET_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPOST_12
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPUT_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 15:19:07 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 15:19:07 -Generating unique operation named: addUsingGET_12
2019-04-24 15:19:07 -Generating unique operation named: editUsingGET_13
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_14
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_24
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_25
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingGET_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_13
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPUT_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 15:19:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 15:19:08 -Generating unique operation named: addUsingGET_13
2019-04-24 15:19:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 15:19:08 -Generating unique operation named: editUsingGET_14
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_15
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_13
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_14
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_14
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_16
2019-04-24 15:19:08 -Generating unique operation named: listUsingHEAD_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingPOST_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingPUT_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingPATCH_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingDELETE_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingTRACE_1
2019-04-24 15:19:08 -Generating unique operation named: countDDUsingGET_1
2019-04-24 15:19:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 15:19:08 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 15:19:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 15:19:08 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 15:19:08 -Generating unique operation named: addUsingGET_14
2019-04-24 15:19:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 15:19:08 -Generating unique operation named: editUsingGET_15
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_17
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_26
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_15
2019-04-24 15:19:08 -Generating unique operation named: treeUsingGET_3
2019-04-24 15:19:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_15
2019-04-24 15:19:08 -Generating unique operation named: addUsingGET_15
2019-04-24 15:19:08 -Generating unique operation named: editUsingGET_16
2019-04-24 15:19:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_18
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_27
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_28
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_16
2019-04-24 15:19:08 -Generating unique operation named: updateUsingGET_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_16
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPUT_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 15:19:08 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 15:19:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 15:19:08 -Generating unique operation named: addUsingGET_16
2019-04-24 15:19:08 -Generating unique operation named: editUsingGET_17
2019-04-24 15:19:08 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_19
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_29
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_30
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_17
2019-04-24 15:19:08 -Generating unique operation named: updateUsingGET_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_17
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPUT_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 15:19:08 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 15:19:08 -Generating unique operation named: addUsingGET_17
2019-04-24 15:19:08 -Generating unique operation named: editUsingGET_18
2019-04-24 15:19:08 -Generating unique operation named: listUsingGET_20
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_31
2019-04-24 15:19:08 -Generating unique operation named: removeUsingPOST_32
2019-04-24 15:19:08 -Generating unique operation named: saveUsingPOST_18
2019-04-24 15:19:08 -Generating unique operation named: updateUsingGET_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPOST_18
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPUT_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 15:19:08 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 15:19:08 -Starting Quartz Scheduler now
2019-04-24 15:19:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 15:19:08 -Starting...
2019-04-24 15:19:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 15:19:08 -Started.
2019-04-24 15:19:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 15:19:08 -Using a shared selector for servlet write/read
2019-04-24 15:19:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 15:19:08 -Started BootdoApplication in 26.028 seconds (JVM running for 26.847)
2019-04-24 15:19:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 15:19:09 -==> Parameters: 
2019-04-24 15:19:09 -<==      Total: 1
2019-04-24 15:20:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-24 15:20:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 15:20:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 15:20:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-24 15:20:39 -Enabling session validation scheduler...
2019-04-24 15:20:41 -请求地址 : http://localhost:8081/login;JSESSIONID=bc083cc8-7b58-4899-ac02-9f180baad52f
2019-04-24 15:20:41 -HTTP METHOD : GET
2019-04-24 15:20:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 15:20:41 -参数 : [{}]
2019-04-24 15:20:41 -耗时 : 3
2019-04-24 15:20:41 -返回值 : login
2019-04-24 15:20:50 -请求地址 : http://localhost:8081/getVerify
2019-04-24 15:20:50 -HTTP METHOD : GET
2019-04-24 15:20:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 15:20:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@25efa984, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b285349]
2019-04-24 15:21:01 -3065
2019-04-24 15:21:02 -耗时 : 11766
2019-04-24 15:21:02 -返回值 : null
2019-04-24 15:21:07 -请求地址 : http://localhost:8081/login
2019-04-24 15:21:07 -HTTP METHOD : POST
2019-04-24 15:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 15:21:07 -参数 : [admin, 111111, 3065, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3fa0878c]
2019-04-24 15:21:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 15:21:07 -==> Parameters: admin(String)
2019-04-24 15:21:07 -<==      Total: 1
2019-04-24 15:21:07 -耗时 : 259
2019-04-24 15:21:07 -返回值 : {msg=操作成功, code=0}
2019-04-24 15:21:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 15:21:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:21:08 -==> Parameters: 1(Long), admin(String), 登录(String), 260(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 15:21:08.189(Timestamp)
2019-04-24 15:21:08 -<==    Updates: 1
2019-04-24 15:21:08 -请求地址 : http://localhost:8081/index
2019-04-24 15:21:08 -HTTP METHOD : GET
2019-04-24 15:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:21:08 -参数 : [{}]
2019-04-24 15:21:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:21:09 -==> Parameters: 1(Long)
2019-04-24 15:21:09 -<==      Total: 49
2019-04-24 15:21:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:21:09 -==> Parameters: 138(Long)
2019-04-24 15:21:09 -<==      Total: 1
2019-04-24 15:21:09 -耗时 : 554
2019-04-24 15:21:09 -返回值 : index_v1
2019-04-24 15:21:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:21:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 554(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:21:09.297(Timestamp)
2019-04-24 15:21:09 -<==    Updates: 1
2019-04-24 15:21:09 -请求地址 : http://localhost:8081/main
2019-04-24 15:21:09 -HTTP METHOD : GET
2019-04-24 15:21:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:21:09 -参数 : []
2019-04-24 15:21:09 -耗时 : 0
2019-04-24 15:21:09 -返回值 : main
2019-04-24 15:21:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:21:13 -HTTP METHOD : GET
2019-04-24 15:21:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:21:13 -参数 : []
2019-04-24 15:21:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:21:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:21:13 -<==      Total: 0
2019-04-24 15:21:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:21:13 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:21:13 -<==      Total: 1
2019-04-24 15:21:13 -耗时 : 206
2019-04-24 15:21:13 -返回值 : com.bootdo.common.utils.PageUtils@175e20c9
2019-04-24 15:21:13 -请求地址 : http://localhost:8081/main
2019-04-24 15:21:13 -HTTP METHOD : GET
2019-04-24 15:21:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:21:13 -参数 : []
2019-04-24 15:21:13 -耗时 : 0
2019-04-24 15:21:13 -返回值 : main
2019-04-24 15:21:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 15:21:20 -==> Parameters: 1(Long)
2019-04-24 15:21:20 -<==      Total: 93
2019-04-24 15:21:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:21:20 -HTTP METHOD : GET
2019-04-24 15:21:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:21:20 -参数 : []
2019-04-24 15:21:20 -耗时 : 1
2019-04-24 15:21:20 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:21:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:21:22 -HTTP METHOD : GET
2019-04-24 15:21:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:21:22 -参数 : [userType]
2019-04-24 15:21:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:21:22 -HTTP METHOD : GET
2019-04-24 15:21:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:21:22 -参数 : [elecType]
2019-04-24 15:21:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:21:22 -==> Parameters: userType(String)
2019-04-24 15:21:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:21:23 -HTTP METHOD : GET
2019-04-24 15:21:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:21:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:21:23 -<==      Total: 4
2019-04-24 15:21:23 -耗时 : 555
2019-04-24 15:21:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:21:23 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:21:23 -==> Parameters: elecType(String)
2019-04-24 15:21:23 -<==      Total: 11
2019-04-24 15:21:23 -耗时 : 558
2019-04-24 15:21:23 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:21:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:21:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:21:24 -<==      Total: 10
2019-04-24 15:21:24 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:21:24 -==> Parameters: 
2019-04-24 15:21:24 -<==      Total: 1
2019-04-24 15:21:24 -耗时 : 1133
2019-04-24 15:21:24 -返回值 : com.bootdo.common.utils.PageUtils@5ea53a70
2019-04-24 15:21:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:21:25 -HTTP METHOD : GET
2019-04-24 15:21:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:21:25 -参数 : []
2019-04-24 15:21:25 -耗时 : 0
2019-04-24 15:21:25 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:21:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:21:26 -HTTP METHOD : GET
2019-04-24 15:21:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:21:26 -参数 : [userType]
2019-04-24 15:21:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:21:26 -==> Parameters: userType(String)
2019-04-24 15:21:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:21:26 -HTTP METHOD : GET
2019-04-24 15:21:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:21:26 -参数 : [heatType]
2019-04-24 15:21:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:21:26 -==> Parameters: heatType(String)
2019-04-24 15:21:26 -<==      Total: 4
2019-04-24 15:21:26 -耗时 : 10
2019-04-24 15:21:26 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:21:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:26 -HTTP METHOD : GET
2019-04-24 15:21:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:21:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:21:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:21:26 -<==      Total: 6
2019-04-24 15:21:26 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:21:26 -==> Parameters: 
2019-04-24 15:21:26 -<==      Total: 1
2019-04-24 15:21:26 -耗时 : 237
2019-04-24 15:21:26 -返回值 : com.bootdo.common.utils.PageUtils@3ca69b2e
2019-04-24 15:21:26 -<==      Total: 4
2019-04-24 15:21:26 -耗时 : 396
2019-04-24 15:21:26 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:21:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:32 -HTTP METHOD : GET
2019-04-24 15:21:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:32 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, heatDate=, type=B}]
2019-04-24 15:21:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:21:32 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-04-24 15:21:32 -<==      Total: 1
2019-04-24 15:21:32 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-04-24 15:21:32 -==> Parameters: B(String)
2019-04-24 15:21:32 -<==      Total: 1
2019-04-24 15:21:32 -耗时 : 296
2019-04-24 15:21:32 -返回值 : com.bootdo.common.utils.PageUtils@497a7a44
2019-04-24 15:21:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:34 -HTTP METHOD : GET
2019-04-24 15:21:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:34 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=, type=A}]
2019-04-24 15:21:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:21:34 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-24 15:21:34 -<==      Total: 5
2019-04-24 15:21:34 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-04-24 15:21:34 -==> Parameters: A(String)
2019-04-24 15:21:34 -<==      Total: 1
2019-04-24 15:21:34 -耗时 : 29
2019-04-24 15:21:34 -返回值 : com.bootdo.common.utils.PageUtils@768a567e
2019-04-24 15:21:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:37 -HTTP METHOD : GET
2019-04-24 15:21:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:37 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=, type=2}]
2019-04-24 15:21:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:21:37 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-24 15:21:37 -<==      Total: 5
2019-04-24 15:21:37 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-04-24 15:21:37 -==> Parameters: A(String)
2019-04-24 15:21:37 -<==      Total: 1
2019-04-24 15:21:37 -耗时 : 22
2019-04-24 15:21:37 -返回值 : com.bootdo.common.utils.PageUtils@3fcb320c
2019-04-24 15:21:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:39 -HTTP METHOD : GET
2019-04-24 15:21:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:39 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=, type=1}]
2019-04-24 15:21:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:21:39 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-24 15:21:39 -<==      Total: 5
2019-04-24 15:21:39 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-04-24 15:21:39 -==> Parameters: A(String)
2019-04-24 15:21:39 -<==      Total: 1
2019-04-24 15:21:39 -耗时 : 33
2019-04-24 15:21:39 -返回值 : com.bootdo.common.utils.PageUtils@1ec46d19
2019-04-24 15:21:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:21:40 -HTTP METHOD : GET
2019-04-24 15:21:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:21:40 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=, type=3}]
2019-04-24 15:21:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:21:40 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-24 15:21:40 -<==      Total: 5
2019-04-24 15:21:40 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-04-24 15:21:40 -==> Parameters: A(String)
2019-04-24 15:21:40 -<==      Total: 1
2019-04-24 15:21:40 -耗时 : 29
2019-04-24 15:21:40 -返回值 : com.bootdo.common.utils.PageUtils@70cea07e
2019-04-24 15:26:41 -请求地址 : http://localhost:8081/index
2019-04-24 15:26:41 -HTTP METHOD : GET
2019-04-24 15:26:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:26:41 -参数 : [{}]
2019-04-24 15:26:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:26:41 -==> Parameters: 1(Long)
2019-04-24 15:26:41 -<==      Total: 49
2019-04-24 15:26:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:26:41 -==> Parameters: 138(Long)
2019-04-24 15:26:41 -<==      Total: 1
2019-04-24 15:26:41 -耗时 : 273
2019-04-24 15:26:41 -返回值 : index_v1
2019-04-24 15:26:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:26:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 273(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:26:41.286(Timestamp)
2019-04-24 15:26:41 -请求地址 : http://localhost:8081/main
2019-04-24 15:26:41 -HTTP METHOD : GET
2019-04-24 15:26:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:26:41 -参数 : []
2019-04-24 15:26:41 -耗时 : 0
2019-04-24 15:26:41 -返回值 : main
2019-04-24 15:26:41 -<==    Updates: 1
2019-04-24 15:26:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:26:41 -HTTP METHOD : GET
2019-04-24 15:26:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:26:41 -参数 : []
2019-04-24 15:26:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:26:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:26:41 -<==      Total: 0
2019-04-24 15:26:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:26:41 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:26:41 -<==      Total: 1
2019-04-24 15:26:41 -耗时 : 54
2019-04-24 15:26:41 -返回值 : com.bootdo.common.utils.PageUtils@1df22301
2019-04-24 15:26:41 -请求地址 : http://localhost:8081/main
2019-04-24 15:26:41 -HTTP METHOD : GET
2019-04-24 15:26:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:26:41 -参数 : []
2019-04-24 15:26:41 -耗时 : 0
2019-04-24 15:26:41 -返回值 : main
2019-04-24 15:26:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:26:44 -HTTP METHOD : GET
2019-04-24 15:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:26:44 -参数 : []
2019-04-24 15:26:44 -耗时 : 1
2019-04-24 15:26:44 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:26:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:26:44 -HTTP METHOD : GET
2019-04-24 15:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:26:44 -参数 : [userType]
2019-04-24 15:26:44 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:26:44 -HTTP METHOD : GET
2019-04-24 15:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:26:44 -参数 : [elecType]
2019-04-24 15:26:44 -==> Parameters: userType(String)
2019-04-24 15:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:26:44 -==> Parameters: elecType(String)
2019-04-24 15:26:44 -<==      Total: 4
2019-04-24 15:26:44 -耗时 : 5
2019-04-24 15:26:44 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:26:44 -<==      Total: 11
2019-04-24 15:26:44 -耗时 : 7
2019-04-24 15:26:44 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:26:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:26:44 -HTTP METHOD : GET
2019-04-24 15:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:26:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:26:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:26:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:26:44 -<==      Total: 10
2019-04-24 15:26:44 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:26:44 -==> Parameters: 
2019-04-24 15:26:44 -<==      Total: 1
2019-04-24 15:26:44 -耗时 : 38
2019-04-24 15:26:44 -返回值 : com.bootdo.common.utils.PageUtils@32502a94
2019-04-24 15:26:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:26:47 -HTTP METHOD : GET
2019-04-24 15:26:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:26:47 -参数 : []
2019-04-24 15:26:47 -耗时 : 0
2019-04-24 15:26:47 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:26:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:26:47 -HTTP METHOD : GET
2019-04-24 15:26:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:26:47 -参数 : [userType]
2019-04-24 15:26:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:26:47 -==> Parameters: userType(String)
2019-04-24 15:26:47 -<==      Total: 4
2019-04-24 15:26:47 -耗时 : 5
2019-04-24 15:26:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:26:47 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:26:47 -HTTP METHOD : GET
2019-04-24 15:26:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:26:47 -参数 : [waterType]
2019-04-24 15:26:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:26:47 -==> Parameters: waterType(String)
2019-04-24 15:26:47 -<==      Total: 2
2019-04-24 15:26:47 -耗时 : 9
2019-04-24 15:26:47 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:26:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:26:47 -HTTP METHOD : GET
2019-04-24 15:26:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:26:47 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:26:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:26:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:26:47 -<==      Total: 6
2019-04-24 15:26:47 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:26:47 -==> Parameters: 
2019-04-24 15:26:47 -<==      Total: 1
2019-04-24 15:26:47 -耗时 : 122
2019-04-24 15:26:47 -返回值 : com.bootdo.common.utils.PageUtils@21be2804
2019-04-24 15:27:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:02 -HTTP METHOD : GET
2019-04-24 15:27:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:02 -参数 : [{limit=10, offset=0, userType=B, waterType=, userOrg=, userId=, waterDate=, type=B}]
2019-04-24 15:27:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? order by id asc limit ?, ? 
2019-04-24 15:27:02 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-04-24 15:27:03 -<==      Total: 1
2019-04-24 15:27:03 -==>  Preparing: select count(*) from water_log WHERE user_type = ? 
2019-04-24 15:27:03 -==> Parameters: B(String)
2019-04-24 15:27:03 -<==      Total: 1
2019-04-24 15:27:03 -耗时 : 91
2019-04-24 15:27:03 -返回值 : com.bootdo.common.utils.PageUtils@22bb3676
2019-04-24 15:27:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:06 -HTTP METHOD : GET
2019-04-24 15:27:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:06 -参数 : [{limit=10, offset=0, userType=B, waterType=1, userOrg=, userId=, waterDate=, type=1}]
2019-04-24 15:27:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-04-24 15:27:06 -==> Parameters: B(String), 1(String), 0(Integer), 10(Integer)
2019-04-24 15:27:06 -<==      Total: 0
2019-04-24 15:27:06 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-04-24 15:27:06 -==> Parameters: B(String), 1(String)
2019-04-24 15:27:07 -<==      Total: 1
2019-04-24 15:27:07 -耗时 : 71
2019-04-24 15:27:07 -返回值 : com.bootdo.common.utils.PageUtils@60635122
2019-04-24 15:27:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:08 -HTTP METHOD : GET
2019-04-24 15:27:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:08 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=, userId=, waterDate=, type=2}]
2019-04-24 15:27:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-04-24 15:27:08 -==> Parameters: B(String), 2(String), 0(Integer), 10(Integer)
2019-04-24 15:27:08 -<==      Total: 1
2019-04-24 15:27:08 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-04-24 15:27:08 -==> Parameters: B(String), 2(String)
2019-04-24 15:27:08 -<==      Total: 1
2019-04-24 15:27:08 -耗时 : 17
2019-04-24 15:27:08 -返回值 : com.bootdo.common.utils.PageUtils@12bdcc9c
2019-04-24 15:27:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:10 -HTTP METHOD : GET
2019-04-24 15:27:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:10 -参数 : [{limit=10, offset=0, userType=B, waterType=1, userOrg=, userId=, waterDate=, type=1}]
2019-04-24 15:27:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-04-24 15:27:10 -==> Parameters: B(String), 1(String), 0(Integer), 10(Integer)
2019-04-24 15:27:10 -<==      Total: 0
2019-04-24 15:27:10 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-04-24 15:27:10 -==> Parameters: B(String), 1(String)
2019-04-24 15:27:10 -<==      Total: 1
2019-04-24 15:27:10 -耗时 : 15
2019-04-24 15:27:10 -返回值 : com.bootdo.common.utils.PageUtils@5cb07ba4
2019-04-24 15:27:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:12 -HTTP METHOD : GET
2019-04-24 15:27:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:12 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=, userId=, waterDate=, type=2}]
2019-04-24 15:27:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-04-24 15:27:12 -==> Parameters: B(String), 2(String), 0(Integer), 10(Integer)
2019-04-24 15:27:12 -<==      Total: 1
2019-04-24 15:27:12 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-04-24 15:27:12 -==> Parameters: B(String), 2(String)
2019-04-24 15:27:12 -<==      Total: 1
2019-04-24 15:27:12 -耗时 : 17
2019-04-24 15:27:12 -返回值 : com.bootdo.common.utils.PageUtils@24118329
2019-04-24 15:27:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:27:19 -HTTP METHOD : GET
2019-04-24 15:27:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:27:19 -参数 : []
2019-04-24 15:27:19 -耗时 : 1
2019-04-24 15:27:19 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:27:19 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:27:19 -HTTP METHOD : GET
2019-04-24 15:27:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:19 -参数 : [heatType]
2019-04-24 15:27:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:19 -HTTP METHOD : GET
2019-04-24 15:27:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:19 -参数 : [userType]
2019-04-24 15:27:19 -==> Parameters: heatType(String)
2019-04-24 15:27:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:19 -<==      Total: 4
2019-04-24 15:27:19 -==> Parameters: userType(String)
2019-04-24 15:27:19 -耗时 : 8
2019-04-24 15:27:19 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:19 -<==      Total: 4
2019-04-24 15:27:19 -耗时 : 14
2019-04-24 15:27:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:27:19 -HTTP METHOD : GET
2019-04-24 15:27:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:27:19 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:27:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:27:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:19 -<==      Total: 6
2019-04-24 15:27:19 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:27:19 -==> Parameters: 
2019-04-24 15:27:19 -<==      Total: 1
2019-04-24 15:27:19 -耗时 : 10
2019-04-24 15:27:19 -返回值 : com.bootdo.common.utils.PageUtils@1a01b1f3
2019-04-24 15:27:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:27:20 -HTTP METHOD : GET
2019-04-24 15:27:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:27:20 -参数 : []
2019-04-24 15:27:20 -耗时 : 0
2019-04-24 15:27:20 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:27:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:20 -HTTP METHOD : GET
2019-04-24 15:27:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:20 -参数 : [userType]
2019-04-24 15:27:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:20 -==> Parameters: userType(String)
2019-04-24 15:27:20 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:27:20 -HTTP METHOD : GET
2019-04-24 15:27:20 -<==      Total: 4
2019-04-24 15:27:20 -耗时 : 5
2019-04-24 15:27:20 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:20 -参数 : [elecType]
2019-04-24 15:27:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:20 -==> Parameters: elecType(String)
2019-04-24 15:27:20 -<==      Total: 11
2019-04-24 15:27:20 -耗时 : 16
2019-04-24 15:27:20 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:27:20 -HTTP METHOD : GET
2019-04-24 15:27:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:27:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:27:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:27:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:20 -<==      Total: 10
2019-04-24 15:27:20 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:27:20 -==> Parameters: 
2019-04-24 15:27:20 -<==      Total: 1
2019-04-24 15:27:20 -耗时 : 62
2019-04-24 15:27:20 -返回值 : com.bootdo.common.utils.PageUtils@680e7b83
2019-04-24 15:27:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:27:41 -HTTP METHOD : GET
2019-04-24 15:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:27:41 -参数 : []
2019-04-24 15:27:41 -耗时 : 1
2019-04-24 15:27:41 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:27:41 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:27:41 -HTTP METHOD : GET
2019-04-24 15:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:41 -参数 : [heatType]
2019-04-24 15:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:41 -==> Parameters: heatType(String)
2019-04-24 15:27:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:27:41 -HTTP METHOD : GET
2019-04-24 15:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:27:41 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:27:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:41 -HTTP METHOD : GET
2019-04-24 15:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:41 -参数 : [userType]
2019-04-24 15:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:41 -<==      Total: 4
2019-04-24 15:27:41 -==> Parameters: userType(String)
2019-04-24 15:27:41 -耗时 : 6
2019-04-24 15:27:41 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:27:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:41 -<==      Total: 6
2019-04-24 15:27:41 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:27:41 -==> Parameters: 
2019-04-24 15:27:41 -<==      Total: 4
2019-04-24 15:27:41 -<==      Total: 1
2019-04-24 15:27:41 -耗时 : 17
2019-04-24 15:27:41 -耗时 : 17
2019-04-24 15:27:41 -返回值 : com.bootdo.common.utils.PageUtils@6885d8cf
2019-04-24 15:27:41 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:41 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:27:41 -HTTP METHOD : GET
2019-04-24 15:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:27:41 -参数 : []
2019-04-24 15:27:41 -耗时 : 0
2019-04-24 15:27:41 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:27:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:42 -HTTP METHOD : GET
2019-04-24 15:27:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:42 -参数 : [userType]
2019-04-24 15:27:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:42 -==> Parameters: userType(String)
2019-04-24 15:27:42 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:27:42 -HTTP METHOD : GET
2019-04-24 15:27:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:42 -参数 : [waterType]
2019-04-24 15:27:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:42 -==> Parameters: waterType(String)
2019-04-24 15:27:42 -<==      Total: 2
2019-04-24 15:27:42 -耗时 : 4
2019-04-24 15:27:42 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:27:42 -HTTP METHOD : GET
2019-04-24 15:27:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:27:42 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:27:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:27:42 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:42 -<==      Total: 6
2019-04-24 15:27:42 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:27:42 -==> Parameters: 
2019-04-24 15:27:42 -<==      Total: 1
2019-04-24 15:27:42 -耗时 : 215
2019-04-24 15:27:42 -返回值 : com.bootdo.common.utils.PageUtils@3feb6856
2019-04-24 15:27:42 -<==      Total: 4
2019-04-24 15:27:42 -耗时 : 308
2019-04-24 15:27:42 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:27:42 -HTTP METHOD : GET
2019-04-24 15:27:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:27:42 -参数 : []
2019-04-24 15:27:42 -耗时 : 1
2019-04-24 15:27:42 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:43 -参数 : [userType]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:43 -==> Parameters: userType(String)
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:43 -参数 : [elecType]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:43 -==> Parameters: elecType(String)
2019-04-24 15:27:43 -<==      Total: 4
2019-04-24 15:27:43 -耗时 : 5
2019-04-24 15:27:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:43 -<==      Total: 11
2019-04-24 15:27:43 -耗时 : 7
2019-04-24 15:27:43 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:27:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:27:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:43 -<==      Total: 10
2019-04-24 15:27:43 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:27:43 -==> Parameters: 
2019-04-24 15:27:43 -<==      Total: 1
2019-04-24 15:27:43 -耗时 : 9
2019-04-24 15:27:43 -返回值 : com.bootdo.common.utils.PageUtils@6a3caeb0
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:27:43 -参数 : []
2019-04-24 15:27:43 -耗时 : 0
2019-04-24 15:27:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:43 -参数 : [userType]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:43 -==> Parameters: userType(String)
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:43 -参数 : [heatType]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:43 -<==      Total: 4
2019-04-24 15:27:43 -耗时 : 5
2019-04-24 15:27:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:43 -==> Parameters: heatType(String)
2019-04-24 15:27:43 -<==      Total: 4
2019-04-24 15:27:43 -耗时 : 12
2019-04-24 15:27:43 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:27:43 -HTTP METHOD : GET
2019-04-24 15:27:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:27:43 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:27:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:27:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:44 -<==      Total: 6
2019-04-24 15:27:44 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:27:44 -==> Parameters: 
2019-04-24 15:27:44 -<==      Total: 1
2019-04-24 15:27:44 -耗时 : 207
2019-04-24 15:27:44 -返回值 : com.bootdo.common.utils.PageUtils@7216bff9
2019-04-24 15:27:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:27:44 -HTTP METHOD : GET
2019-04-24 15:27:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:27:44 -参数 : []
2019-04-24 15:27:44 -耗时 : 1
2019-04-24 15:27:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:27:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:44 -HTTP METHOD : GET
2019-04-24 15:27:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:44 -参数 : [userType]
2019-04-24 15:27:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:44 -==> Parameters: userType(String)
2019-04-24 15:27:44 -<==      Total: 4
2019-04-24 15:27:44 -耗时 : 5
2019-04-24 15:27:44 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:44 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:27:44 -HTTP METHOD : GET
2019-04-24 15:27:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:44 -参数 : [heatType]
2019-04-24 15:27:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:44 -==> Parameters: heatType(String)
2019-04-24 15:27:44 -<==      Total: 4
2019-04-24 15:27:44 -耗时 : 5
2019-04-24 15:27:44 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:27:44 -HTTP METHOD : GET
2019-04-24 15:27:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:27:44 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:27:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:27:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:44 -<==      Total: 6
2019-04-24 15:27:44 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:27:44 -==> Parameters: 
2019-04-24 15:27:44 -<==      Total: 1
2019-04-24 15:27:44 -耗时 : 7
2019-04-24 15:27:44 -返回值 : com.bootdo.common.utils.PageUtils@3f0d23d2
2019-04-24 15:27:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:27:45 -HTTP METHOD : GET
2019-04-24 15:27:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:27:45 -参数 : []
2019-04-24 15:27:45 -耗时 : 1
2019-04-24 15:27:45 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:27:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:27:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:27:45 -HTTP METHOD : GET
2019-04-24 15:27:45 -HTTP METHOD : GET
2019-04-24 15:27:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:27:45 -参数 : [userType]
2019-04-24 15:27:45 -参数 : [elecType]
2019-04-24 15:27:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:27:45 -==> Parameters: elecType(String)
2019-04-24 15:27:45 -==> Parameters: userType(String)
2019-04-24 15:27:45 -<==      Total: 4
2019-04-24 15:27:45 -耗时 : 4
2019-04-24 15:27:45 -<==      Total: 11
2019-04-24 15:27:45 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:45 -耗时 : 5
2019-04-24 15:27:45 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:27:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:27:45 -HTTP METHOD : GET
2019-04-24 15:27:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:27:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:27:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:27:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:27:45 -<==      Total: 10
2019-04-24 15:27:45 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:27:45 -==> Parameters: 
2019-04-24 15:27:45 -<==      Total: 1
2019-04-24 15:27:45 -耗时 : 10
2019-04-24 15:27:45 -返回值 : com.bootdo.common.utils.PageUtils@715767b7
2019-04-24 15:27:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 15:27:53 -HTTP METHOD : GET
2019-04-24 15:27:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 15:27:53 -参数 : []
2019-04-24 15:27:53 -耗时 : 0
2019-04-24 15:27:53 -返回值 : system/dept/deptTree
2019-04-24 15:27:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 15:27:53 -HTTP METHOD : GET
2019-04-24 15:27:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 15:27:53 -参数 : []
2019-04-24 15:27:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 15:27:53 -==> Parameters: 
2019-04-24 15:27:53 -<==      Total: 3
2019-04-24 15:27:53 -耗时 : 22
2019-04-24 15:27:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 15:27:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:27:57 -HTTP METHOD : GET
2019-04-24 15:27:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:27:57 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-04-24 15:27:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-04-24 15:27:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-04-24 15:27:57 -<==      Total: 4
2019-04-24 15:27:57 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 15:27:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 15:27:57 -<==      Total: 1
2019-04-24 15:27:57 -耗时 : 12
2019-04-24 15:27:57 -返回值 : com.bootdo.common.utils.PageUtils@372cd347
2019-04-24 15:27:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-04-24 15:27:59 -HTTP METHOD : GET
2019-04-24 15:27:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-04-24 15:27:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@75108aa9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@924c476, org.apache.shiro.web.servlet.ShiroHttpServletRequest@959166e]
2019-04-24 15:27:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 15:27:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 15:27:59 -<==      Total: 4
2019-04-24 15:28:00 -耗时 : 1158
2019-04-24 15:28:00 -返回值 : null
2019-04-24 15:29:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:24 -HTTP METHOD : GET
2019-04-24 15:29:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:24 -参数 : []
2019-04-24 15:29:24 -耗时 : 0
2019-04-24 15:29:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:24 -HTTP METHOD : GET
2019-04-24 15:29:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:24 -参数 : [userType]
2019-04-24 15:29:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:24 -==> Parameters: userType(String)
2019-04-24 15:29:24 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:24 -HTTP METHOD : GET
2019-04-24 15:29:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:24 -参数 : [heatType]
2019-04-24 15:29:24 -<==      Total: 4
2019-04-24 15:29:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:24 -==> Parameters: heatType(String)
2019-04-24 15:29:24 -耗时 : 6
2019-04-24 15:29:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:24 -<==      Total: 4
2019-04-24 15:29:24 -耗时 : 8
2019-04-24 15:29:24 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:24 -HTTP METHOD : GET
2019-04-24 15:29:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:24 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:24 -<==      Total: 6
2019-04-24 15:29:24 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:24 -==> Parameters: 
2019-04-24 15:29:24 -<==      Total: 1
2019-04-24 15:29:24 -耗时 : 8
2019-04-24 15:29:24 -返回值 : com.bootdo.common.utils.PageUtils@24bf4222
2019-04-24 15:29:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:33 -HTTP METHOD : GET
2019-04-24 15:29:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:33 -参数 : [{limit=10, offset=0, userType=, heatType=2, userOrg=, userId=, heatDate=, type=2}]
2019-04-24 15:29:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE heat_type = ? order by id asc limit ?, ? 
2019-04-24 15:29:33 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-04-24 15:29:33 -<==      Total: 0
2019-04-24 15:29:33 -==>  Preparing: select count(*) from heat_log WHERE heat_type = ? 
2019-04-24 15:29:33 -==> Parameters: 2(String)
2019-04-24 15:29:33 -<==      Total: 1
2019-04-24 15:29:33 -耗时 : 24
2019-04-24 15:29:33 -返回值 : com.bootdo.common.utils.PageUtils@10b778f
2019-04-24 15:29:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:35 -HTTP METHOD : GET
2019-04-24 15:29:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:35 -参数 : [{limit=10, offset=0, userType=, heatType=1, userOrg=, userId=, heatDate=, type=1}]
2019-04-24 15:29:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE heat_type = ? order by id asc limit ?, ? 
2019-04-24 15:29:35 -==> Parameters: 1(String), 0(Integer), 10(Integer)
2019-04-24 15:29:35 -<==      Total: 3
2019-04-24 15:29:35 -==>  Preparing: select count(*) from heat_log WHERE heat_type = ? 
2019-04-24 15:29:35 -==> Parameters: 1(String)
2019-04-24 15:29:35 -<==      Total: 1
2019-04-24 15:29:35 -耗时 : 14
2019-04-24 15:29:35 -返回值 : com.bootdo.common.utils.PageUtils@2b22b225
2019-04-24 15:29:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:29:47 -HTTP METHOD : GET
2019-04-24 15:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:29:47 -参数 : []
2019-04-24 15:29:47 -耗时 : 0
2019-04-24 15:29:47 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:29:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:47 -HTTP METHOD : GET
2019-04-24 15:29:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:47 -参数 : [userType]
2019-04-24 15:29:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:47 -==> Parameters: userType(String)
2019-04-24 15:29:47 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:29:47 -HTTP METHOD : GET
2019-04-24 15:29:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:47 -参数 : [waterType]
2019-04-24 15:29:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:47 -==> Parameters: waterType(String)
2019-04-24 15:29:47 -<==      Total: 4
2019-04-24 15:29:47 -耗时 : 4
2019-04-24 15:29:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:47 -<==      Total: 2
2019-04-24 15:29:47 -耗时 : 9
2019-04-24 15:29:47 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:29:47 -HTTP METHOD : GET
2019-04-24 15:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:29:47 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:29:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:29:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:47 -<==      Total: 6
2019-04-24 15:29:47 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:29:47 -==> Parameters: 
2019-04-24 15:29:47 -<==      Total: 1
2019-04-24 15:29:47 -耗时 : 17
2019-04-24 15:29:47 -返回值 : com.bootdo.common.utils.PageUtils@30cd3710
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:52 -参数 : []
2019-04-24 15:29:52 -耗时 : 1
2019-04-24 15:29:52 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:52 -参数 : [userType]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:52 -==> Parameters: userType(String)
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:52 -参数 : [heatType]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:52 -==> Parameters: heatType(String)
2019-04-24 15:29:52 -<==      Total: 4
2019-04-24 15:29:52 -耗时 : 5
2019-04-24 15:29:52 -<==      Total: 4
2019-04-24 15:29:52 -耗时 : 4
2019-04-24 15:29:52 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:52 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:52 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:52 -<==      Total: 6
2019-04-24 15:29:52 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:52 -==> Parameters: 
2019-04-24 15:29:52 -<==      Total: 1
2019-04-24 15:29:52 -耗时 : 36
2019-04-24 15:29:52 -返回值 : com.bootdo.common.utils.PageUtils@1df109e
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:29:52 -参数 : []
2019-04-24 15:29:52 -耗时 : 0
2019-04-24 15:29:52 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:52 -参数 : [userType]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:52 -==> Parameters: userType(String)
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:52 -参数 : [elecType]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:52 -==> Parameters: elecType(String)
2019-04-24 15:29:52 -<==      Total: 4
2019-04-24 15:29:52 -耗时 : 3
2019-04-24 15:29:52 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:52 -<==      Total: 11
2019-04-24 15:29:52 -耗时 : 6
2019-04-24 15:29:52 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:29:52 -HTTP METHOD : GET
2019-04-24 15:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:29:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:29:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:29:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:52 -<==      Total: 10
2019-04-24 15:29:52 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:29:52 -==> Parameters: 
2019-04-24 15:29:53 -<==      Total: 1
2019-04-24 15:29:53 -耗时 : 9
2019-04-24 15:29:53 -返回值 : com.bootdo.common.utils.PageUtils@1a437dbc
2019-04-24 15:29:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:53 -HTTP METHOD : GET
2019-04-24 15:29:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:53 -参数 : []
2019-04-24 15:29:53 -耗时 : 1
2019-04-24 15:29:53 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:53 -HTTP METHOD : GET
2019-04-24 15:29:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:53 -参数 : [userType]
2019-04-24 15:29:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:53 -==> Parameters: userType(String)
2019-04-24 15:29:53 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:53 -HTTP METHOD : GET
2019-04-24 15:29:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:53 -参数 : [heatType]
2019-04-24 15:29:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:53 -==> Parameters: heatType(String)
2019-04-24 15:29:53 -<==      Total: 4
2019-04-24 15:29:53 -耗时 : 3
2019-04-24 15:29:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:53 -<==      Total: 4
2019-04-24 15:29:53 -耗时 : 8
2019-04-24 15:29:53 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:53 -HTTP METHOD : GET
2019-04-24 15:29:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:53 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:53 -<==      Total: 6
2019-04-24 15:29:53 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:53 -==> Parameters: 
2019-04-24 15:29:53 -<==      Total: 1
2019-04-24 15:29:53 -耗时 : 6
2019-04-24 15:29:53 -返回值 : com.bootdo.common.utils.PageUtils@5e22ae9e
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:29:54 -参数 : []
2019-04-24 15:29:54 -耗时 : 0
2019-04-24 15:29:54 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:54 -参数 : [userType]
2019-04-24 15:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:54 -==> Parameters: userType(String)
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:29:54 -<==      Total: 4
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:54 -参数 : [waterType]
2019-04-24 15:29:54 -耗时 : 4
2019-04-24 15:29:54 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:54 -==> Parameters: waterType(String)
2019-04-24 15:29:54 -<==      Total: 2
2019-04-24 15:29:54 -耗时 : 4
2019-04-24 15:29:54 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:29:54 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:29:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:29:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:54 -<==      Total: 6
2019-04-24 15:29:54 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:29:54 -==> Parameters: 
2019-04-24 15:29:54 -<==      Total: 1
2019-04-24 15:29:54 -耗时 : 85
2019-04-24 15:29:54 -返回值 : com.bootdo.common.utils.PageUtils@7d673e90
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:54 -参数 : []
2019-04-24 15:29:54 -耗时 : 0
2019-04-24 15:29:54 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:54 -参数 : [userType]
2019-04-24 15:29:54 -参数 : [heatType]
2019-04-24 15:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:54 -==> Parameters: userType(String)
2019-04-24 15:29:54 -==> Parameters: heatType(String)
2019-04-24 15:29:54 -<==      Total: 4
2019-04-24 15:29:54 -<==      Total: 4
2019-04-24 15:29:54 -耗时 : 4
2019-04-24 15:29:54 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:54 -耗时 : 5
2019-04-24 15:29:54 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:54 -HTTP METHOD : GET
2019-04-24 15:29:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:54 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:54 -<==      Total: 6
2019-04-24 15:29:54 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:54 -==> Parameters: 
2019-04-24 15:29:54 -<==      Total: 1
2019-04-24 15:29:54 -耗时 : 6
2019-04-24 15:29:54 -返回值 : com.bootdo.common.utils.PageUtils@e5ea56b
2019-04-24 15:29:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:29:55 -HTTP METHOD : GET
2019-04-24 15:29:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:29:55 -参数 : []
2019-04-24 15:29:55 -耗时 : 1
2019-04-24 15:29:55 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:29:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:55 -HTTP METHOD : GET
2019-04-24 15:29:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:55 -参数 : [userType]
2019-04-24 15:29:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:29:55 -HTTP METHOD : GET
2019-04-24 15:29:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:55 -参数 : [elecType]
2019-04-24 15:29:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:55 -==> Parameters: elecType(String)
2019-04-24 15:29:55 -==> Parameters: userType(String)
2019-04-24 15:29:55 -<==      Total: 4
2019-04-24 15:29:55 -<==      Total: 11
2019-04-24 15:29:55 -耗时 : 6
2019-04-24 15:29:55 -耗时 : 6
2019-04-24 15:29:55 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:55 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:29:55 -HTTP METHOD : GET
2019-04-24 15:29:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:29:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:29:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:29:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:55 -<==      Total: 10
2019-04-24 15:29:55 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:29:55 -==> Parameters: 
2019-04-24 15:29:55 -<==      Total: 1
2019-04-24 15:29:55 -耗时 : 85
2019-04-24 15:29:55 -返回值 : com.bootdo.common.utils.PageUtils@69e64b96
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:56 -参数 : []
2019-04-24 15:29:56 -耗时 : 1
2019-04-24 15:29:56 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:56 -参数 : [userType]
2019-04-24 15:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:56 -==> Parameters: userType(String)
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:56 -参数 : [heatType]
2019-04-24 15:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:56 -==> Parameters: heatType(String)
2019-04-24 15:29:56 -<==      Total: 4
2019-04-24 15:29:56 -耗时 : 5
2019-04-24 15:29:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:56 -<==      Total: 4
2019-04-24 15:29:56 -耗时 : 4
2019-04-24 15:29:56 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:56 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:56 -<==      Total: 6
2019-04-24 15:29:56 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:56 -==> Parameters: 
2019-04-24 15:29:56 -<==      Total: 1
2019-04-24 15:29:56 -耗时 : 6
2019-04-24 15:29:56 -返回值 : com.bootdo.common.utils.PageUtils@23ee7e76
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:29:56 -参数 : []
2019-04-24 15:29:56 -耗时 : 1
2019-04-24 15:29:56 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:56 -参数 : [userType]
2019-04-24 15:29:56 -参数 : [waterType]
2019-04-24 15:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:56 -==> Parameters: userType(String)
2019-04-24 15:29:56 -==> Parameters: waterType(String)
2019-04-24 15:29:56 -<==      Total: 2
2019-04-24 15:29:56 -耗时 : 4
2019-04-24 15:29:56 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:56 -<==      Total: 4
2019-04-24 15:29:56 -耗时 : 10
2019-04-24 15:29:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:29:56 -HTTP METHOD : GET
2019-04-24 15:29:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:29:56 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:29:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:29:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:56 -<==      Total: 6
2019-04-24 15:29:56 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:29:56 -==> Parameters: 
2019-04-24 15:29:56 -<==      Total: 1
2019-04-24 15:29:56 -耗时 : 6
2019-04-24 15:29:56 -返回值 : com.bootdo.common.utils.PageUtils@40d3dfaf
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:29:58 -参数 : []
2019-04-24 15:29:58 -耗时 : 0
2019-04-24 15:29:58 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:58 -参数 : [elecType]
2019-04-24 15:29:58 -参数 : [userType]
2019-04-24 15:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:58 -==> Parameters: userType(String)
2019-04-24 15:29:58 -==> Parameters: elecType(String)
2019-04-24 15:29:58 -<==      Total: 4
2019-04-24 15:29:58 -<==      Total: 11
2019-04-24 15:29:58 -耗时 : 4
2019-04-24 15:29:58 -耗时 : 4
2019-04-24 15:29:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:58 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:29:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:29:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:29:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:58 -<==      Total: 10
2019-04-24 15:29:58 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:29:58 -==> Parameters: 
2019-04-24 15:29:58 -<==      Total: 1
2019-04-24 15:29:58 -耗时 : 6
2019-04-24 15:29:58 -返回值 : com.bootdo.common.utils.PageUtils@24295e57
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:29:58 -参数 : []
2019-04-24 15:29:58 -耗时 : 0
2019-04-24 15:29:58 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:58 -参数 : [userType]
2019-04-24 15:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:58 -==> Parameters: userType(String)
2019-04-24 15:29:58 -<==      Total: 4
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:29:58 -参数 : [heatType]
2019-04-24 15:29:58 -耗时 : 4
2019-04-24 15:29:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:29:58 -==> Parameters: heatType(String)
2019-04-24 15:29:58 -<==      Total: 4
2019-04-24 15:29:58 -耗时 : 5
2019-04-24 15:29:58 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:29:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:29:58 -HTTP METHOD : GET
2019-04-24 15:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:29:58 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:29:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:29:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:29:58 -<==      Total: 6
2019-04-24 15:29:58 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:29:58 -==> Parameters: 
2019-04-24 15:29:58 -<==      Total: 1
2019-04-24 15:29:58 -耗时 : 7
2019-04-24 15:29:58 -返回值 : com.bootdo.common.utils.PageUtils@1d9f40a9
2019-04-24 15:29:59 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:29:59 -HTTP METHOD : GET
2019-04-24 15:29:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:29:59 -参数 : []
2019-04-24 15:29:59 -耗时 : 1
2019-04-24 15:29:59 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:30:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:30:00 -HTTP METHOD : GET
2019-04-24 15:30:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:00 -参数 : [userType]
2019-04-24 15:30:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:00 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:30:00 -HTTP METHOD : GET
2019-04-24 15:30:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:00 -==> Parameters: userType(String)
2019-04-24 15:30:00 -参数 : [waterType]
2019-04-24 15:30:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:00 -==> Parameters: waterType(String)
2019-04-24 15:30:00 -<==      Total: 4
2019-04-24 15:30:00 -耗时 : 4
2019-04-24 15:30:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:00 -<==      Total: 2
2019-04-24 15:30:00 -耗时 : 3
2019-04-24 15:30:00 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:00 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:30:00 -HTTP METHOD : GET
2019-04-24 15:30:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:30:00 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:30:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:30:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:00 -<==      Total: 6
2019-04-24 15:30:00 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:30:00 -==> Parameters: 
2019-04-24 15:30:00 -<==      Total: 1
2019-04-24 15:30:00 -耗时 : 7
2019-04-24 15:30:00 -返回值 : com.bootdo.common.utils.PageUtils@56d3b61d
2019-04-24 15:30:03 -请求地址 : http://localhost:8081/elec/elec
2019-04-24 15:30:03 -HTTP METHOD : GET
2019-04-24 15:30:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-24 15:30:03 -参数 : []
2019-04-24 15:30:03 -耗时 : 1
2019-04-24 15:30:03 -返回值 : elec/elec/elec
2019-04-24 15:30:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:30:03 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:30:03 -HTTP METHOD : GET
2019-04-24 15:30:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:03 -HTTP METHOD : GET
2019-04-24 15:30:03 -参数 : [elecType]
2019-04-24 15:30:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:03 -参数 : [userType]
2019-04-24 15:30:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:03 -==> Parameters: userType(String)
2019-04-24 15:30:03 -==> Parameters: elecType(String)
2019-04-24 15:30:03 -<==      Total: 4
2019-04-24 15:30:03 -<==      Total: 11
2019-04-24 15:30:03 -耗时 : 4
2019-04-24 15:30:03 -耗时 : 4
2019-04-24 15:30:03 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:03 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:30:03 -HTTP METHOD : GET
2019-04-24 15:30:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:30:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@237c8511]
2019-04-24 15:30:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:30:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:03 -<==      Total: 10
2019-04-24 15:30:03 -==>  Preparing: select count(*) from elec 
2019-04-24 15:30:03 -==> Parameters: 
2019-04-24 15:30:03 -<==      Total: 1
2019-04-24 15:30:03 -耗时 : 159
2019-04-24 15:30:03 -返回值 : com.bootdo.common.utils.PageUtils@455227a5
2019-04-24 15:30:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:30:07 -HTTP METHOD : GET
2019-04-24 15:30:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:30:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1, type=1}, com.bootdo.elec.domain.ElecDO@6527b6b]
2019-04-24 15:30:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:30:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:07 -<==      Total: 10
2019-04-24 15:30:07 -==>  Preparing: select count(*) from elec 
2019-04-24 15:30:07 -==> Parameters: 
2019-04-24 15:30:07 -<==      Total: 1
2019-04-24 15:30:07 -耗时 : 30
2019-04-24 15:30:07 -返回值 : com.bootdo.common.utils.PageUtils@bee9de4
2019-04-24 15:30:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:30:09 -HTTP METHOD : GET
2019-04-24 15:30:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:30:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1, type=7}, com.bootdo.elec.domain.ElecDO@34ef873b]
2019-04-24 15:30:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:30:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:09 -<==      Total: 10
2019-04-24 15:30:09 -==>  Preparing: select count(*) from elec 
2019-04-24 15:30:09 -==> Parameters: 
2019-04-24 15:30:09 -<==      Total: 1
2019-04-24 15:30:09 -耗时 : 19
2019-04-24 15:30:09 -返回值 : com.bootdo.common.utils.PageUtils@265dbbd3
2019-04-24 15:30:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:30:11 -HTTP METHOD : GET
2019-04-24 15:30:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:30:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1, type=9}, com.bootdo.elec.domain.ElecDO@201eaf7c]
2019-04-24 15:30:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:30:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:11 -<==      Total: 10
2019-04-24 15:30:11 -==>  Preparing: select count(*) from elec 
2019-04-24 15:30:11 -==> Parameters: 
2019-04-24 15:30:11 -<==      Total: 1
2019-04-24 15:30:11 -耗时 : 19
2019-04-24 15:30:11 -返回值 : com.bootdo.common.utils.PageUtils@2833bf26
2019-04-24 15:30:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:30:13 -HTTP METHOD : GET
2019-04-24 15:30:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:30:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1, type=8}, com.bootdo.elec.domain.ElecDO@3df93371]
2019-04-24 15:30:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:30:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:13 -<==      Total: 10
2019-04-24 15:30:13 -==>  Preparing: select count(*) from elec 
2019-04-24 15:30:13 -==> Parameters: 
2019-04-24 15:30:13 -<==      Total: 1
2019-04-24 15:30:13 -耗时 : 19
2019-04-24 15:30:13 -返回值 : com.bootdo.common.utils.PageUtils@578a33b7
2019-04-24 15:30:23 -请求地址 : http://localhost:8081/heat/heat
2019-04-24 15:30:23 -HTTP METHOD : GET
2019-04-24 15:30:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-04-24 15:30:23 -参数 : []
2019-04-24 15:30:23 -耗时 : 0
2019-04-24 15:30:23 -返回值 : heat/heat/heat
2019-04-24 15:30:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:30:23 -HTTP METHOD : GET
2019-04-24 15:30:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:23 -参数 : [userType]
2019-04-24 15:30:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:23 -==> Parameters: userType(String)
2019-04-24 15:30:23 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:30:23 -HTTP METHOD : GET
2019-04-24 15:30:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:23 -参数 : [heatType]
2019-04-24 15:30:23 -<==      Total: 4
2019-04-24 15:30:23 -耗时 : 5
2019-04-24 15:30:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:23 -==> Parameters: heatType(String)
2019-04-24 15:30:23 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:23 -<==      Total: 4
2019-04-24 15:30:23 -耗时 : 4
2019-04-24 15:30:23 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:24 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-24 15:30:24 -HTTP METHOD : GET
2019-04-24 15:30:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-24 15:30:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-04-24 15:30:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:30:24 -<==      Total: 10
2019-04-24 15:30:24 -==>  Preparing: select count(*) from heat 
2019-04-24 15:30:24 -==> Parameters: 
2019-04-24 15:30:24 -<==      Total: 1
2019-04-24 15:30:24 -耗时 : 83
2019-04-24 15:30:24 -返回值 : com.bootdo.common.utils.PageUtils@5d3f4f47
2019-04-24 15:30:31 -请求地址 : http://localhost:8081/water/water
2019-04-24 15:30:31 -HTTP METHOD : GET
2019-04-24 15:30:31 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-04-24 15:30:31 -参数 : []
2019-04-24 15:30:31 -耗时 : 1
2019-04-24 15:30:31 -返回值 : water/water/water
2019-04-24 15:30:31 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:30:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:30:31 -HTTP METHOD : GET
2019-04-24 15:30:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:31 -HTTP METHOD : GET
2019-04-24 15:30:31 -参数 : [waterType]
2019-04-24 15:30:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:30:31 -参数 : [userType]
2019-04-24 15:30:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:30:31 -==> Parameters: userType(String)
2019-04-24 15:30:31 -==> Parameters: waterType(String)
2019-04-24 15:30:31 -<==      Total: 2
2019-04-24 15:30:31 -<==      Total: 4
2019-04-24 15:30:31 -耗时 : 3
2019-04-24 15:30:31 -耗时 : 3
2019-04-24 15:30:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:31 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:30:31 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:30:31 -HTTP METHOD : GET
2019-04-24 15:30:31 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:30:31 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:30:31 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:30:31 -<==      Total: 3
2019-04-24 15:30:31 -==>  Preparing: select count(*) from water 
2019-04-24 15:30:31 -==> Parameters: 
2019-04-24 15:30:31 -<==      Total: 1
2019-04-24 15:30:31 -耗时 : 107
2019-04-24 15:30:31 -返回值 : com.bootdo.common.utils.PageUtils@2ddc085
2019-04-24 15:30:33 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:30:33 -HTTP METHOD : GET
2019-04-24 15:30:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:30:33 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:30:33 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:30:33 -<==      Total: 3
2019-04-24 15:30:33 -==>  Preparing: select count(*) from water 
2019-04-24 15:30:33 -==> Parameters: 
2019-04-24 15:30:33 -<==      Total: 1
2019-04-24 15:30:33 -耗时 : 8
2019-04-24 15:30:33 -返回值 : com.bootdo.common.utils.PageUtils@7f8ccecb
2019-04-24 15:30:35 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:30:35 -HTTP METHOD : GET
2019-04-24 15:30:35 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:30:35 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:30:35 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:30:35 -<==      Total: 3
2019-04-24 15:30:35 -==>  Preparing: select count(*) from water 
2019-04-24 15:30:35 -==> Parameters: 
2019-04-24 15:30:35 -<==      Total: 1
2019-04-24 15:30:35 -耗时 : 6
2019-04-24 15:30:35 -返回值 : com.bootdo.common.utils.PageUtils@1528ae93
2019-04-24 15:30:36 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:30:36 -HTTP METHOD : GET
2019-04-24 15:30:36 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:30:36 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:30:36 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:30:36 -<==      Total: 3
2019-04-24 15:30:36 -==>  Preparing: select count(*) from water 
2019-04-24 15:30:36 -==> Parameters: 
2019-04-24 15:30:36 -<==      Total: 1
2019-04-24 15:30:36 -耗时 : 8
2019-04-24 15:30:36 -返回值 : com.bootdo.common.utils.PageUtils@68458e88
2019-04-24 15:30:40 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:30:40 -HTTP METHOD : GET
2019-04-24 15:30:40 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:30:40 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:30:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:30:40 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:30:40 -<==      Total: 3
2019-04-24 15:30:40 -==>  Preparing: select count(*) from water 
2019-04-24 15:30:40 -==> Parameters: 
2019-04-24 15:30:40 -<==      Total: 1
2019-04-24 15:30:40 -耗时 : 9
2019-04-24 15:30:40 -返回值 : com.bootdo.common.utils.PageUtils@3ba9eda7
2019-04-24 15:33:26 -请求地址 : http://localhost:8081/index
2019-04-24 15:33:26 -HTTP METHOD : GET
2019-04-24 15:33:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:33:26 -参数 : [{}]
2019-04-24 15:33:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:33:26 -==> Parameters: 1(Long)
2019-04-24 15:33:27 -<==      Total: 49
2019-04-24 15:33:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:33:27 -==> Parameters: 138(Long)
2019-04-24 15:33:27 -<==      Total: 1
2019-04-24 15:33:27 -耗时 : 183
2019-04-24 15:33:27 -返回值 : index_v1
2019-04-24 15:33:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:33:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 183(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:33:27.06(Timestamp)
2019-04-24 15:33:27 -请求地址 : http://localhost:8081/main
2019-04-24 15:33:27 -HTTP METHOD : GET
2019-04-24 15:33:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:33:27 -参数 : []
2019-04-24 15:33:27 -耗时 : 1
2019-04-24 15:33:27 -返回值 : main
2019-04-24 15:33:27 -<==    Updates: 1
2019-04-24 15:33:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:33:27 -HTTP METHOD : GET
2019-04-24 15:33:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:33:27 -参数 : []
2019-04-24 15:33:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:33:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:33:27 -<==      Total: 0
2019-04-24 15:33:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:33:27 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:33:27 -<==      Total: 1
2019-04-24 15:33:27 -耗时 : 76
2019-04-24 15:33:27 -返回值 : com.bootdo.common.utils.PageUtils@75e13f3d
2019-04-24 15:33:27 -请求地址 : http://localhost:8081/main
2019-04-24 15:33:27 -HTTP METHOD : GET
2019-04-24 15:33:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:33:27 -参数 : []
2019-04-24 15:33:27 -耗时 : 1
2019-04-24 15:33:27 -返回值 : main
2019-04-24 15:33:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 15:33:33 -==> Parameters: 1(Long)
2019-04-24 15:33:33 -<==      Total: 93
2019-04-24 15:33:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:33:33 -HTTP METHOD : GET
2019-04-24 15:33:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:33:33 -参数 : []
2019-04-24 15:33:33 -耗时 : 1
2019-04-24 15:33:33 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:33:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:33:33 -HTTP METHOD : GET
2019-04-24 15:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:33 -参数 : [userType]
2019-04-24 15:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:33 -==> Parameters: userType(String)
2019-04-24 15:33:33 -<==      Total: 4
2019-04-24 15:33:33 -耗时 : 4
2019-04-24 15:33:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:33:33 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:33 -HTTP METHOD : GET
2019-04-24 15:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:33 -参数 : [elecType]
2019-04-24 15:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:33 -==> Parameters: elecType(String)
2019-04-24 15:33:33 -<==      Total: 11
2019-04-24 15:33:33 -耗时 : 7
2019-04-24 15:33:33 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:33:33 -HTTP METHOD : GET
2019-04-24 15:33:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:33:33 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:33:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:33:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:33:33 -<==      Total: 10
2019-04-24 15:33:33 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:33:33 -==> Parameters: 
2019-04-24 15:33:33 -<==      Total: 1
2019-04-24 15:33:33 -耗时 : 14
2019-04-24 15:33:33 -返回值 : com.bootdo.common.utils.PageUtils@69f049f3
2019-04-24 15:33:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:33:34 -HTTP METHOD : GET
2019-04-24 15:33:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:33:34 -参数 : []
2019-04-24 15:33:34 -耗时 : 0
2019-04-24 15:33:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:33:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:33:34 -HTTP METHOD : GET
2019-04-24 15:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:34 -参数 : [userType]
2019-04-24 15:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:34 -==> Parameters: userType(String)
2019-04-24 15:33:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:33:34 -HTTP METHOD : GET
2019-04-24 15:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:34 -参数 : [heatType]
2019-04-24 15:33:34 -<==      Total: 4
2019-04-24 15:33:34 -耗时 : 3
2019-04-24 15:33:34 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:34 -==> Parameters: heatType(String)
2019-04-24 15:33:34 -<==      Total: 4
2019-04-24 15:33:34 -耗时 : 6
2019-04-24 15:33:34 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:33:34 -HTTP METHOD : GET
2019-04-24 15:33:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:33:34 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:33:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:33:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:33:34 -<==      Total: 6
2019-04-24 15:33:34 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:33:34 -==> Parameters: 
2019-04-24 15:33:34 -<==      Total: 1
2019-04-24 15:33:34 -耗时 : 7
2019-04-24 15:33:34 -返回值 : com.bootdo.common.utils.PageUtils@65fe8d5a
2019-04-24 15:33:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 15:33:39 -HTTP METHOD : GET
2019-04-24 15:33:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 15:33:39 -参数 : []
2019-04-24 15:33:39 -耗时 : 0
2019-04-24 15:33:39 -返回值 : system/dept/deptTree
2019-04-24 15:33:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 15:33:39 -HTTP METHOD : GET
2019-04-24 15:33:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 15:33:39 -参数 : []
2019-04-24 15:33:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 15:33:39 -==> Parameters: 
2019-04-24 15:33:39 -<==      Total: 3
2019-04-24 15:33:39 -耗时 : 5
2019-04-24 15:33:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 15:33:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:33:41 -HTTP METHOD : GET
2019-04-24 15:33:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:33:41 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=2, userId=, heatDate=2019-03-19}]
2019-04-24 15:33:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-04-24 15:33:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-04-24 15:33:41 -<==      Total: 1
2019-04-24 15:33:41 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 15:33:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 15:33:41 -<==      Total: 1
2019-04-24 15:33:41 -耗时 : 11
2019-04-24 15:33:41 -返回值 : com.bootdo.common.utils.PageUtils@3dd9198
2019-04-24 15:33:43 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:33:43 -HTTP METHOD : GET
2019-04-24 15:33:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:33:43 -参数 : []
2019-04-24 15:33:43 -耗时 : 1
2019-04-24 15:33:43 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:33:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:33:43 -HTTP METHOD : GET
2019-04-24 15:33:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:43 -参数 : [userType]
2019-04-24 15:33:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:43 -==> Parameters: userType(String)
2019-04-24 15:33:43 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:33:43 -HTTP METHOD : GET
2019-04-24 15:33:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:43 -参数 : [waterType]
2019-04-24 15:33:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:43 -<==      Total: 4
2019-04-24 15:33:43 -==> Parameters: waterType(String)
2019-04-24 15:33:43 -耗时 : 4
2019-04-24 15:33:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:43 -<==      Total: 2
2019-04-24 15:33:43 -耗时 : 4
2019-04-24 15:33:43 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:33:43 -HTTP METHOD : GET
2019-04-24 15:33:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:33:43 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:33:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:33:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:33:43 -<==      Total: 6
2019-04-24 15:33:43 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:33:43 -==> Parameters: 
2019-04-24 15:33:43 -<==      Total: 1
2019-04-24 15:33:43 -耗时 : 6
2019-04-24 15:33:43 -返回值 : com.bootdo.common.utils.PageUtils@f41491b
2019-04-24 15:33:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:33:52 -HTTP METHOD : GET
2019-04-24 15:33:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:33:52 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-03-19}]
2019-04-24 15:33:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:33:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:33:52 -<==      Total: 1
2019-04-24 15:33:52 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-04-24 15:33:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-24 15:33:52 -<==      Total: 1
2019-04-24 15:33:52 -耗时 : 63
2019-04-24 15:33:52 -返回值 : com.bootdo.common.utils.PageUtils@687bb944
2019-04-24 15:33:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:33:56 -HTTP METHOD : GET
2019-04-24 15:33:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:33:56 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-03-29}]
2019-04-24 15:33:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:33:56 -==> Parameters: 2019-03-29 00:00:00(String), 2019-03-29 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:33:56 -<==      Total: 0
2019-04-24 15:33:56 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-04-24 15:33:56 -==> Parameters: 2019-03-29 00:00:00(String), 2019-03-29 23:59:59(String)
2019-04-24 15:33:56 -<==      Total: 1
2019-04-24 15:33:56 -耗时 : 7
2019-04-24 15:33:56 -返回值 : com.bootdo.common.utils.PageUtils@7e9069ff
2019-04-24 15:33:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:33:59 -HTTP METHOD : GET
2019-04-24 15:33:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:33:59 -参数 : []
2019-04-24 15:33:59 -耗时 : 0
2019-04-24 15:33:59 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:33:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:33:59 -HTTP METHOD : GET
2019-04-24 15:33:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:59 -参数 : [userType]
2019-04-24 15:33:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:59 -==> Parameters: userType(String)
2019-04-24 15:33:59 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:33:59 -HTTP METHOD : GET
2019-04-24 15:33:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:33:59 -参数 : [heatType]
2019-04-24 15:33:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:33:59 -==> Parameters: heatType(String)
2019-04-24 15:33:59 -<==      Total: 4
2019-04-24 15:33:59 -耗时 : 3
2019-04-24 15:33:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:59 -<==      Total: 4
2019-04-24 15:33:59 -耗时 : 5
2019-04-24 15:33:59 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:33:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:33:59 -HTTP METHOD : GET
2019-04-24 15:33:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:33:59 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:33:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:33:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:33:59 -<==      Total: 6
2019-04-24 15:33:59 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:33:59 -==> Parameters: 
2019-04-24 15:33:59 -<==      Total: 1
2019-04-24 15:33:59 -耗时 : 7
2019-04-24 15:33:59 -返回值 : com.bootdo.common.utils.PageUtils@1470eaa1
2019-04-24 15:34:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:00 -HTTP METHOD : GET
2019-04-24 15:34:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:00 -参数 : []
2019-04-24 15:34:00 -耗时 : 1
2019-04-24 15:34:00 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:00 -HTTP METHOD : GET
2019-04-24 15:34:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:00 -参数 : [userType]
2019-04-24 15:34:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:00 -==> Parameters: userType(String)
2019-04-24 15:34:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:00 -HTTP METHOD : GET
2019-04-24 15:34:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:00 -参数 : [elecType]
2019-04-24 15:34:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:00 -==> Parameters: elecType(String)
2019-04-24 15:34:00 -<==      Total: 4
2019-04-24 15:34:00 -耗时 : 3
2019-04-24 15:34:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:00 -<==      Total: 11
2019-04-24 15:34:00 -耗时 : 4
2019-04-24 15:34:00 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:00 -HTTP METHOD : GET
2019-04-24 15:34:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:00 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:00 -<==      Total: 10
2019-04-24 15:34:00 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:00 -==> Parameters: 
2019-04-24 15:34:00 -<==      Total: 1
2019-04-24 15:34:00 -耗时 : 6
2019-04-24 15:34:00 -返回值 : com.bootdo.common.utils.PageUtils@970c852
2019-04-24 15:34:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:00 -HTTP METHOD : GET
2019-04-24 15:34:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:00 -参数 : []
2019-04-24 15:34:00 -耗时 : 1
2019-04-24 15:34:00 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:01 -参数 : [userType]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:01 -==> Parameters: userType(String)
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:01 -参数 : [heatType]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:01 -==> Parameters: heatType(String)
2019-04-24 15:34:01 -<==      Total: 4
2019-04-24 15:34:01 -耗时 : 4
2019-04-24 15:34:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:01 -<==      Total: 4
2019-04-24 15:34:01 -耗时 : 3
2019-04-24 15:34:01 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:01 -<==      Total: 6
2019-04-24 15:34:01 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:01 -==> Parameters: 
2019-04-24 15:34:01 -<==      Total: 1
2019-04-24 15:34:01 -耗时 : 6
2019-04-24 15:34:01 -返回值 : com.bootdo.common.utils.PageUtils@7f176e88
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:01 -参数 : []
2019-04-24 15:34:01 -耗时 : 1
2019-04-24 15:34:01 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:01 -参数 : [userType]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -==> Parameters: userType(String)
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:01 -参数 : [waterType]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:01 -==> Parameters: waterType(String)
2019-04-24 15:34:01 -<==      Total: 4
2019-04-24 15:34:01 -耗时 : 4
2019-04-24 15:34:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:01 -<==      Total: 2
2019-04-24 15:34:01 -耗时 : 5
2019-04-24 15:34:01 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:01 -HTTP METHOD : GET
2019-04-24 15:34:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:01 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:01 -<==      Total: 6
2019-04-24 15:34:01 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:01 -==> Parameters: 
2019-04-24 15:34:01 -<==      Total: 1
2019-04-24 15:34:01 -耗时 : 6
2019-04-24 15:34:01 -返回值 : com.bootdo.common.utils.PageUtils@157cdf59
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:02 -参数 : []
2019-04-24 15:34:02 -耗时 : 1
2019-04-24 15:34:02 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:02 -参数 : [userType]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:02 -==> Parameters: userType(String)
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:02 -参数 : [heatType]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:02 -==> Parameters: heatType(String)
2019-04-24 15:34:02 -<==      Total: 4
2019-04-24 15:34:02 -耗时 : 5
2019-04-24 15:34:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:02 -<==      Total: 4
2019-04-24 15:34:02 -耗时 : 5
2019-04-24 15:34:02 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:02 -<==      Total: 6
2019-04-24 15:34:02 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:02 -==> Parameters: 
2019-04-24 15:34:02 -<==      Total: 1
2019-04-24 15:34:02 -耗时 : 9
2019-04-24 15:34:02 -返回值 : com.bootdo.common.utils.PageUtils@4c80dd9a
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:02 -参数 : []
2019-04-24 15:34:02 -耗时 : 0
2019-04-24 15:34:02 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:02 -参数 : [userType]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:02 -==> Parameters: userType(String)
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:02 -参数 : [elecType]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:02 -<==      Total: 4
2019-04-24 15:34:02 -耗时 : 3
2019-04-24 15:34:02 -==> Parameters: elecType(String)
2019-04-24 15:34:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:02 -<==      Total: 11
2019-04-24 15:34:02 -耗时 : 6
2019-04-24 15:34:02 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:02 -HTTP METHOD : GET
2019-04-24 15:34:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:02 -<==      Total: 10
2019-04-24 15:34:02 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:02 -==> Parameters: 
2019-04-24 15:34:02 -<==      Total: 1
2019-04-24 15:34:02 -耗时 : 6
2019-04-24 15:34:02 -返回值 : com.bootdo.common.utils.PageUtils@389d8767
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:03 -参数 : []
2019-04-24 15:34:03 -耗时 : 0
2019-04-24 15:34:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:03 -参数 : [userType]
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:03 -参数 : [heatType]
2019-04-24 15:34:03 -==> Parameters: userType(String)
2019-04-24 15:34:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:03 -==> Parameters: heatType(String)
2019-04-24 15:34:03 -<==      Total: 4
2019-04-24 15:34:03 -<==      Total: 4
2019-04-24 15:34:03 -耗时 : 3
2019-04-24 15:34:03 -耗时 : 3
2019-04-24 15:34:03 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:03 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:03 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:03 -<==      Total: 6
2019-04-24 15:34:03 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:03 -==> Parameters: 
2019-04-24 15:34:03 -<==      Total: 1
2019-04-24 15:34:03 -耗时 : 5
2019-04-24 15:34:03 -返回值 : com.bootdo.common.utils.PageUtils@23e4898f
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:03 -参数 : []
2019-04-24 15:34:03 -耗时 : 0
2019-04-24 15:34:03 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:03 -参数 : [userType]
2019-04-24 15:34:03 -参数 : [waterType]
2019-04-24 15:34:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:03 -==> Parameters: waterType(String)
2019-04-24 15:34:03 -==> Parameters: userType(String)
2019-04-24 15:34:03 -<==      Total: 2
2019-04-24 15:34:03 -<==      Total: 4
2019-04-24 15:34:03 -耗时 : 3
2019-04-24 15:34:03 -耗时 : 3
2019-04-24 15:34:03 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:03 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:03 -HTTP METHOD : GET
2019-04-24 15:34:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:03 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:03 -<==      Total: 6
2019-04-24 15:34:03 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:03 -==> Parameters: 
2019-04-24 15:34:03 -<==      Total: 1
2019-04-24 15:34:03 -耗时 : 6
2019-04-24 15:34:03 -返回值 : com.bootdo.common.utils.PageUtils@27661e91
2019-04-24 15:34:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:04 -HTTP METHOD : GET
2019-04-24 15:34:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:04 -参数 : []
2019-04-24 15:34:04 -耗时 : 1
2019-04-24 15:34:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:04 -HTTP METHOD : GET
2019-04-24 15:34:04 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:04 -HTTP METHOD : GET
2019-04-24 15:34:04 -参数 : [userType]
2019-04-24 15:34:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:04 -参数 : [heatType]
2019-04-24 15:34:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:04 -==> Parameters: heatType(String)
2019-04-24 15:34:04 -==> Parameters: userType(String)
2019-04-24 15:34:04 -<==      Total: 4
2019-04-24 15:34:04 -<==      Total: 4
2019-04-24 15:34:04 -耗时 : 4
2019-04-24 15:34:04 -耗时 : 3
2019-04-24 15:34:04 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:04 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:04 -HTTP METHOD : GET
2019-04-24 15:34:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:04 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:04 -<==      Total: 6
2019-04-24 15:34:04 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:04 -==> Parameters: 
2019-04-24 15:34:04 -<==      Total: 1
2019-04-24 15:34:04 -耗时 : 7
2019-04-24 15:34:04 -返回值 : com.bootdo.common.utils.PageUtils@3a7925b
2019-04-24 15:34:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:04 -HTTP METHOD : GET
2019-04-24 15:34:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:04 -参数 : []
2019-04-24 15:34:04 -耗时 : 1
2019-04-24 15:34:04 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:05 -参数 : [userType]
2019-04-24 15:34:05 -参数 : [elecType]
2019-04-24 15:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:05 -==> Parameters: userType(String)
2019-04-24 15:34:05 -==> Parameters: elecType(String)
2019-04-24 15:34:05 -<==      Total: 4
2019-04-24 15:34:05 -<==      Total: 11
2019-04-24 15:34:05 -耗时 : 3
2019-04-24 15:34:05 -耗时 : 3
2019-04-24 15:34:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:05 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:05 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:05 -<==      Total: 10
2019-04-24 15:34:05 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:05 -==> Parameters: 
2019-04-24 15:34:05 -<==      Total: 1
2019-04-24 15:34:05 -耗时 : 6
2019-04-24 15:34:05 -返回值 : com.bootdo.common.utils.PageUtils@2a59636a
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:05 -参数 : []
2019-04-24 15:34:05 -耗时 : 0
2019-04-24 15:34:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:05 -参数 : [userType]
2019-04-24 15:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:05 -==> Parameters: userType(String)
2019-04-24 15:34:05 -<==      Total: 4
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:05 -耗时 : 4
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:05 -参数 : [heatType]
2019-04-24 15:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:05 -==> Parameters: heatType(String)
2019-04-24 15:34:05 -<==      Total: 4
2019-04-24 15:34:05 -耗时 : 5
2019-04-24 15:34:05 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:05 -HTTP METHOD : GET
2019-04-24 15:34:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:05 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:05 -<==      Total: 6
2019-04-24 15:34:05 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:05 -==> Parameters: 
2019-04-24 15:34:05 -<==      Total: 1
2019-04-24 15:34:05 -耗时 : 7
2019-04-24 15:34:05 -返回值 : com.bootdo.common.utils.PageUtils@44659f11
2019-04-24 15:34:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:06 -HTTP METHOD : GET
2019-04-24 15:34:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:06 -参数 : []
2019-04-24 15:34:06 -耗时 : 1
2019-04-24 15:34:06 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:06 -HTTP METHOD : GET
2019-04-24 15:34:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:06 -参数 : [userType]
2019-04-24 15:34:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:06 -==> Parameters: userType(String)
2019-04-24 15:34:06 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:06 -HTTP METHOD : GET
2019-04-24 15:34:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:06 -参数 : [waterType]
2019-04-24 15:34:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:06 -==> Parameters: waterType(String)
2019-04-24 15:34:06 -<==      Total: 4
2019-04-24 15:34:06 -耗时 : 4
2019-04-24 15:34:06 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:06 -<==      Total: 2
2019-04-24 15:34:06 -耗时 : 3
2019-04-24 15:34:06 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:06 -HTTP METHOD : GET
2019-04-24 15:34:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:06 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:06 -<==      Total: 6
2019-04-24 15:34:06 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:06 -==> Parameters: 
2019-04-24 15:34:06 -<==      Total: 1
2019-04-24 15:34:06 -耗时 : 5
2019-04-24 15:34:06 -返回值 : com.bootdo.common.utils.PageUtils@365d4b02
2019-04-24 15:34:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:09 -HTTP METHOD : GET
2019-04-24 15:34:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:09 -参数 : []
2019-04-24 15:34:09 -耗时 : 1
2019-04-24 15:34:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:10 -HTTP METHOD : GET
2019-04-24 15:34:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:10 -参数 : [userType]
2019-04-24 15:34:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:10 -==> Parameters: userType(String)
2019-04-24 15:34:10 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:10 -HTTP METHOD : GET
2019-04-24 15:34:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:10 -参数 : [heatType]
2019-04-24 15:34:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:10 -==> Parameters: heatType(String)
2019-04-24 15:34:10 -<==      Total: 4
2019-04-24 15:34:10 -耗时 : 3
2019-04-24 15:34:10 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:10 -<==      Total: 4
2019-04-24 15:34:10 -耗时 : 3
2019-04-24 15:34:10 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:10 -HTTP METHOD : GET
2019-04-24 15:34:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:10 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:10 -<==      Total: 6
2019-04-24 15:34:10 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:10 -==> Parameters: 
2019-04-24 15:34:10 -<==      Total: 1
2019-04-24 15:34:10 -耗时 : 5
2019-04-24 15:34:10 -返回值 : com.bootdo.common.utils.PageUtils@8f05864
2019-04-24 15:34:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:12 -HTTP METHOD : GET
2019-04-24 15:34:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:12 -参数 : []
2019-04-24 15:34:12 -耗时 : 1
2019-04-24 15:34:12 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:12 -HTTP METHOD : GET
2019-04-24 15:34:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:12 -参数 : [userType]
2019-04-24 15:34:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:12 -==> Parameters: userType(String)
2019-04-24 15:34:12 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:12 -HTTP METHOD : GET
2019-04-24 15:34:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:12 -参数 : [elecType]
2019-04-24 15:34:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:12 -==> Parameters: elecType(String)
2019-04-24 15:34:12 -<==      Total: 4
2019-04-24 15:34:12 -耗时 : 5
2019-04-24 15:34:12 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:12 -<==      Total: 11
2019-04-24 15:34:12 -耗时 : 4
2019-04-24 15:34:12 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:12 -HTTP METHOD : GET
2019-04-24 15:34:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:12 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:12 -<==      Total: 10
2019-04-24 15:34:12 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:12 -==> Parameters: 
2019-04-24 15:34:12 -<==      Total: 1
2019-04-24 15:34:12 -耗时 : 4
2019-04-24 15:34:12 -返回值 : com.bootdo.common.utils.PageUtils@7dbe017d
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:15 -参数 : []
2019-04-24 15:34:15 -耗时 : 0
2019-04-24 15:34:15 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:15 -参数 : [userType]
2019-04-24 15:34:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:15 -==> Parameters: userType(String)
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:15 -<==      Total: 4
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:15 -参数 : [heatType]
2019-04-24 15:34:15 -耗时 : 3
2019-04-24 15:34:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:15 -==> Parameters: heatType(String)
2019-04-24 15:34:15 -<==      Total: 4
2019-04-24 15:34:15 -耗时 : 4
2019-04-24 15:34:15 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:15 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:15 -<==      Total: 6
2019-04-24 15:34:15 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:15 -==> Parameters: 
2019-04-24 15:34:15 -<==      Total: 1
2019-04-24 15:34:15 -耗时 : 5
2019-04-24 15:34:15 -返回值 : com.bootdo.common.utils.PageUtils@772684aa
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:15 -参数 : []
2019-04-24 15:34:15 -耗时 : 1
2019-04-24 15:34:15 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:15 -参数 : [userType]
2019-04-24 15:34:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:15 -==> Parameters: userType(String)
2019-04-24 15:34:15 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:15 -HTTP METHOD : GET
2019-04-24 15:34:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:15 -参数 : [waterType]
2019-04-24 15:34:15 -<==      Total: 4
2019-04-24 15:34:15 -耗时 : 4
2019-04-24 15:34:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:15 -==> Parameters: waterType(String)
2019-04-24 15:34:15 -<==      Total: 2
2019-04-24 15:34:15 -耗时 : 6
2019-04-24 15:34:15 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:16 -HTTP METHOD : GET
2019-04-24 15:34:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:16 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:16 -<==      Total: 6
2019-04-24 15:34:16 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:16 -==> Parameters: 
2019-04-24 15:34:16 -<==      Total: 1
2019-04-24 15:34:16 -耗时 : 7
2019-04-24 15:34:16 -返回值 : com.bootdo.common.utils.PageUtils@58b0de9f
2019-04-24 15:34:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:16 -HTTP METHOD : GET
2019-04-24 15:34:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:16 -参数 : []
2019-04-24 15:34:16 -耗时 : 0
2019-04-24 15:34:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:16 -HTTP METHOD : GET
2019-04-24 15:34:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:16 -HTTP METHOD : GET
2019-04-24 15:34:16 -参数 : [heatType]
2019-04-24 15:34:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:16 -参数 : [userType]
2019-04-24 15:34:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:16 -==> Parameters: userType(String)
2019-04-24 15:34:16 -==> Parameters: heatType(String)
2019-04-24 15:34:16 -<==      Total: 4
2019-04-24 15:34:16 -<==      Total: 4
2019-04-24 15:34:16 -耗时 : 4
2019-04-24 15:34:16 -耗时 : 4
2019-04-24 15:34:16 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:16 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:16 -HTTP METHOD : GET
2019-04-24 15:34:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:16 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:16 -<==      Total: 6
2019-04-24 15:34:16 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:16 -==> Parameters: 
2019-04-24 15:34:16 -<==      Total: 1
2019-04-24 15:34:16 -耗时 : 6
2019-04-24 15:34:16 -返回值 : com.bootdo.common.utils.PageUtils@3c46e5d4
2019-04-24 15:34:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:17 -HTTP METHOD : GET
2019-04-24 15:34:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:17 -参数 : []
2019-04-24 15:34:17 -耗时 : 0
2019-04-24 15:34:17 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:17 -HTTP METHOD : GET
2019-04-24 15:34:17 -HTTP METHOD : GET
2019-04-24 15:34:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:17 -参数 : [elecType]
2019-04-24 15:34:17 -参数 : [userType]
2019-04-24 15:34:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:17 -==> Parameters: userType(String)
2019-04-24 15:34:17 -==> Parameters: elecType(String)
2019-04-24 15:34:17 -<==      Total: 4
2019-04-24 15:34:17 -<==      Total: 11
2019-04-24 15:34:17 -耗时 : 3
2019-04-24 15:34:17 -耗时 : 3
2019-04-24 15:34:17 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:17 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:18 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:18 -<==      Total: 10
2019-04-24 15:34:18 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:18 -==> Parameters: 
2019-04-24 15:34:18 -<==      Total: 1
2019-04-24 15:34:18 -耗时 : 6
2019-04-24 15:34:18 -返回值 : com.bootdo.common.utils.PageUtils@7342d779
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:18 -参数 : []
2019-04-24 15:34:18 -耗时 : 0
2019-04-24 15:34:18 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:18 -参数 : [userType]
2019-04-24 15:34:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:18 -==> Parameters: userType(String)
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:18 -参数 : [waterType]
2019-04-24 15:34:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:18 -==> Parameters: waterType(String)
2019-04-24 15:34:18 -<==      Total: 4
2019-04-24 15:34:18 -耗时 : 4
2019-04-24 15:34:18 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:18 -<==      Total: 2
2019-04-24 15:34:18 -耗时 : 4
2019-04-24 15:34:18 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:18 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:18 -<==      Total: 6
2019-04-24 15:34:18 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:18 -==> Parameters: 
2019-04-24 15:34:18 -<==      Total: 1
2019-04-24 15:34:18 -耗时 : 5
2019-04-24 15:34:18 -返回值 : com.bootdo.common.utils.PageUtils@64c41c31
2019-04-24 15:34:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:18 -HTTP METHOD : GET
2019-04-24 15:34:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:18 -参数 : []
2019-04-24 15:34:18 -耗时 : 1
2019-04-24 15:34:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:19 -参数 : [userType]
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:19 -参数 : [heatType]
2019-04-24 15:34:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:19 -==> Parameters: heatType(String)
2019-04-24 15:34:19 -==> Parameters: userType(String)
2019-04-24 15:34:19 -<==      Total: 4
2019-04-24 15:34:19 -<==      Total: 4
2019-04-24 15:34:19 -耗时 : 3
2019-04-24 15:34:19 -耗时 : 2
2019-04-24 15:34:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:19 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:19 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:19 -<==      Total: 6
2019-04-24 15:34:19 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:19 -==> Parameters: 
2019-04-24 15:34:19 -<==      Total: 1
2019-04-24 15:34:19 -耗时 : 6
2019-04-24 15:34:19 -返回值 : com.bootdo.common.utils.PageUtils@290a56cb
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:19 -参数 : []
2019-04-24 15:34:19 -耗时 : 0
2019-04-24 15:34:19 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:19 -参数 : [userType]
2019-04-24 15:34:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:19 -==> Parameters: userType(String)
2019-04-24 15:34:19 -<==      Total: 4
2019-04-24 15:34:19 -耗时 : 36
2019-04-24 15:34:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:19 -参数 : [elecType]
2019-04-24 15:34:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:19 -==> Parameters: elecType(String)
2019-04-24 15:34:19 -<==      Total: 11
2019-04-24 15:34:19 -耗时 : 11
2019-04-24 15:34:19 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:19 -HTTP METHOD : GET
2019-04-24 15:34:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:19 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:19 -<==      Total: 10
2019-04-24 15:34:19 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:19 -==> Parameters: 
2019-04-24 15:34:19 -<==      Total: 1
2019-04-24 15:34:19 -耗时 : 6
2019-04-24 15:34:19 -返回值 : com.bootdo.common.utils.PageUtils@108d2188
2019-04-24 15:34:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:34:20 -HTTP METHOD : GET
2019-04-24 15:34:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:34:20 -参数 : []
2019-04-24 15:34:20 -耗时 : 1
2019-04-24 15:34:20 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:34:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:20 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:34:20 -HTTP METHOD : GET
2019-04-24 15:34:20 -HTTP METHOD : GET
2019-04-24 15:34:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:20 -参数 : [waterType]
2019-04-24 15:34:20 -参数 : [userType]
2019-04-24 15:34:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:20 -==> Parameters: waterType(String)
2019-04-24 15:34:20 -==> Parameters: userType(String)
2019-04-24 15:34:20 -<==      Total: 4
2019-04-24 15:34:20 -<==      Total: 2
2019-04-24 15:34:20 -耗时 : 3
2019-04-24 15:34:20 -耗时 : 3
2019-04-24 15:34:20 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:20 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:34:20 -HTTP METHOD : GET
2019-04-24 15:34:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:34:20 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:34:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:34:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:20 -<==      Total: 6
2019-04-24 15:34:20 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:34:20 -==> Parameters: 
2019-04-24 15:34:20 -<==      Total: 1
2019-04-24 15:34:20 -耗时 : 8
2019-04-24 15:34:20 -返回值 : com.bootdo.common.utils.PageUtils@60017c52
2019-04-24 15:34:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:34:21 -HTTP METHOD : GET
2019-04-24 15:34:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:34:21 -参数 : []
2019-04-24 15:34:21 -耗时 : 0
2019-04-24 15:34:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:34:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:21 -HTTP METHOD : GET
2019-04-24 15:34:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:34:21 -HTTP METHOD : GET
2019-04-24 15:34:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:21 -参数 : [userType]
2019-04-24 15:34:21 -参数 : [heatType]
2019-04-24 15:34:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:21 -==> Parameters: userType(String)
2019-04-24 15:34:21 -==> Parameters: heatType(String)
2019-04-24 15:34:21 -<==      Total: 4
2019-04-24 15:34:21 -<==      Total: 4
2019-04-24 15:34:21 -耗时 : 3
2019-04-24 15:34:21 -耗时 : 3
2019-04-24 15:34:21 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:21 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:34:21 -HTTP METHOD : GET
2019-04-24 15:34:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:34:21 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:34:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:34:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:21 -<==      Total: 6
2019-04-24 15:34:21 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:34:21 -==> Parameters: 
2019-04-24 15:34:21 -<==      Total: 1
2019-04-24 15:34:21 -耗时 : 6
2019-04-24 15:34:21 -返回值 : com.bootdo.common.utils.PageUtils@1bd55cd2
2019-04-24 15:34:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:34:21 -HTTP METHOD : GET
2019-04-24 15:34:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:34:21 -参数 : []
2019-04-24 15:34:21 -耗时 : 0
2019-04-24 15:34:21 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:34:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:22 -HTTP METHOD : GET
2019-04-24 15:34:22 -HTTP METHOD : GET
2019-04-24 15:34:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:22 -参数 : [userType]
2019-04-24 15:34:22 -参数 : [elecType]
2019-04-24 15:34:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:22 -==> Parameters: userType(String)
2019-04-24 15:34:22 -==> Parameters: elecType(String)
2019-04-24 15:34:22 -<==      Total: 4
2019-04-24 15:34:22 -耗时 : 4
2019-04-24 15:34:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:22 -<==      Total: 11
2019-04-24 15:34:22 -耗时 : 9
2019-04-24 15:34:22 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:34:22 -HTTP METHOD : GET
2019-04-24 15:34:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:34:22 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:34:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:34:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:34:22 -<==      Total: 10
2019-04-24 15:34:22 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:34:22 -==> Parameters: 
2019-04-24 15:34:22 -<==      Total: 1
2019-04-24 15:34:22 -耗时 : 6
2019-04-24 15:34:22 -返回值 : com.bootdo.common.utils.PageUtils@5b214e09
2019-04-24 15:34:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-24 15:34:29 -HTTP METHOD : GET
2019-04-24 15:34:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-24 15:34:29 -参数 : []
2019-04-24 15:34:29 -耗时 : 1
2019-04-24 15:34:29 -返回值 : moneyLog/elecLog/add
2019-04-24 15:34:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:34:29 -HTTP METHOD : GET
2019-04-24 15:34:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:29 -参数 : [userType]
2019-04-24 15:34:29 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:34:29 -HTTP METHOD : GET
2019-04-24 15:34:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:34:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:29 -==> Parameters: userType(String)
2019-04-24 15:34:29 -参数 : [elecType]
2019-04-24 15:34:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:34:29 -==> Parameters: elecType(String)
2019-04-24 15:34:29 -<==      Total: 4
2019-04-24 15:34:29 -耗时 : 4
2019-04-24 15:34:29 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:34:29 -<==      Total: 11
2019-04-24 15:34:29 -耗时 : 6
2019-04-24 15:34:29 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-24 15:35:13 -HTTP METHOD : GET
2019-04-24 15:35:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-24 15:35:13 -参数 : [1, {}]
2019-04-24 15:35:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-24 15:35:13 -==> Parameters: 1(Long)
2019-04-24 15:35:13 -<==      Total: 1
2019-04-24 15:35:13 -耗时 : 4
2019-04-24 15:35:13 -返回值 : moneyLog/elecLog/edit
2019-04-24 15:35:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:35:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:13 -HTTP METHOD : GET
2019-04-24 15:35:13 -HTTP METHOD : GET
2019-04-24 15:35:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:13 -参数 : [elecType]
2019-04-24 15:35:13 -参数 : [userType]
2019-04-24 15:35:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:13 -==> Parameters: elecType(String)
2019-04-24 15:35:13 -==> Parameters: userType(String)
2019-04-24 15:35:13 -<==      Total: 11
2019-04-24 15:35:13 -<==      Total: 4
2019-04-24 15:35:13 -耗时 : 5
2019-04-24 15:35:13 -耗时 : 5
2019-04-24 15:35:13 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:35:33 -HTTP METHOD : GET
2019-04-24 15:35:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:35:33 -参数 : []
2019-04-24 15:35:33 -耗时 : 1
2019-04-24 15:35:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:35:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:34 -HTTP METHOD : GET
2019-04-24 15:35:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:34 -参数 : [userType]
2019-04-24 15:35:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:34 -==> Parameters: userType(String)
2019-04-24 15:35:34 -<==      Total: 4
2019-04-24 15:35:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:35:34 -HTTP METHOD : GET
2019-04-24 15:35:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:34 -参数 : [heatType]
2019-04-24 15:35:34 -耗时 : 3
2019-04-24 15:35:34 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:34 -==> Parameters: heatType(String)
2019-04-24 15:35:34 -<==      Total: 4
2019-04-24 15:35:34 -耗时 : 3
2019-04-24 15:35:34 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:35:34 -HTTP METHOD : GET
2019-04-24 15:35:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:35:34 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:35:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:35:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:34 -<==      Total: 6
2019-04-24 15:35:34 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:35:34 -==> Parameters: 
2019-04-24 15:35:34 -<==      Total: 1
2019-04-24 15:35:34 -耗时 : 7
2019-04-24 15:35:34 -返回值 : com.bootdo.common.utils.PageUtils@49575823
2019-04-24 15:35:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:35:34 -HTTP METHOD : GET
2019-04-24 15:35:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:35:34 -参数 : []
2019-04-24 15:35:34 -耗时 : 0
2019-04-24 15:35:34 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:35 -参数 : [userType]
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:35 -参数 : [elecType]
2019-04-24 15:35:35 -==> Parameters: userType(String)
2019-04-24 15:35:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:35 -==> Parameters: elecType(String)
2019-04-24 15:35:35 -<==      Total: 4
2019-04-24 15:35:35 -<==      Total: 11
2019-04-24 15:35:35 -耗时 : 3
2019-04-24 15:35:35 -耗时 : 2
2019-04-24 15:35:35 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:35 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:35:35 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:35:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:35:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:35 -<==      Total: 10
2019-04-24 15:35:35 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:35:35 -==> Parameters: 
2019-04-24 15:35:35 -<==      Total: 1
2019-04-24 15:35:35 -耗时 : 6
2019-04-24 15:35:35 -返回值 : com.bootdo.common.utils.PageUtils@27c77b43
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:35:35 -参数 : []
2019-04-24 15:35:35 -耗时 : 1
2019-04-24 15:35:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:35 -参数 : [userType]
2019-04-24 15:35:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:35 -==> Parameters: userType(String)
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:35 -参数 : [heatType]
2019-04-24 15:35:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:35 -<==      Total: 4
2019-04-24 15:35:35 -==> Parameters: heatType(String)
2019-04-24 15:35:35 -耗时 : 3
2019-04-24 15:35:35 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:35 -<==      Total: 4
2019-04-24 15:35:35 -耗时 : 8
2019-04-24 15:35:35 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:35:35 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:35:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:35:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:35 -<==      Total: 6
2019-04-24 15:35:35 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:35:35 -==> Parameters: 
2019-04-24 15:35:35 -<==      Total: 1
2019-04-24 15:35:35 -耗时 : 4
2019-04-24 15:35:35 -返回值 : com.bootdo.common.utils.PageUtils@6be5ac56
2019-04-24 15:35:35 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-24 15:35:35 -HTTP METHOD : GET
2019-04-24 15:35:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-24 15:35:35 -参数 : []
2019-04-24 15:35:35 -耗时 : 0
2019-04-24 15:35:35 -返回值 : /moneyLog/waterLog/waterLog
2019-04-24 15:35:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:36 -HTTP METHOD : GET
2019-04-24 15:35:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:36 -参数 : [userType]
2019-04-24 15:35:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:36 -==> Parameters: userType(String)
2019-04-24 15:35:36 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:35:36 -HTTP METHOD : GET
2019-04-24 15:35:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:36 -参数 : [waterType]
2019-04-24 15:35:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:36 -==> Parameters: waterType(String)
2019-04-24 15:35:36 -<==      Total: 4
2019-04-24 15:35:36 -耗时 : 4
2019-04-24 15:35:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:36 -<==      Total: 2
2019-04-24 15:35:36 -耗时 : 3
2019-04-24 15:35:36 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:36 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-24 15:35:36 -HTTP METHOD : GET
2019-04-24 15:35:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-24 15:35:36 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-04-24 15:35:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-24 15:35:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:36 -<==      Total: 6
2019-04-24 15:35:36 -==>  Preparing: select count(*) from water_log 
2019-04-24 15:35:36 -==> Parameters: 
2019-04-24 15:35:36 -<==      Total: 1
2019-04-24 15:35:36 -耗时 : 5
2019-04-24 15:35:36 -返回值 : com.bootdo.common.utils.PageUtils@2c04e9a3
2019-04-24 15:35:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-24 15:35:36 -HTTP METHOD : GET
2019-04-24 15:35:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-24 15:35:36 -参数 : []
2019-04-24 15:35:36 -耗时 : 0
2019-04-24 15:35:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:37 -参数 : [userType]
2019-04-24 15:35:37 -参数 : [heatType]
2019-04-24 15:35:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:37 -==> Parameters: heatType(String)
2019-04-24 15:35:37 -==> Parameters: userType(String)
2019-04-24 15:35:37 -<==      Total: 4
2019-04-24 15:35:37 -<==      Total: 4
2019-04-24 15:35:37 -耗时 : 3
2019-04-24 15:35:37 -耗时 : 3
2019-04-24 15:35:37 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-24 15:35:37 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-04-24 15:35:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-24 15:35:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:37 -<==      Total: 6
2019-04-24 15:35:37 -==>  Preparing: select count(*) from heat_log 
2019-04-24 15:35:37 -==> Parameters: 
2019-04-24 15:35:37 -<==      Total: 1
2019-04-24 15:35:37 -耗时 : 6
2019-04-24 15:35:37 -返回值 : com.bootdo.common.utils.PageUtils@2a0ac7c3
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-24 15:35:37 -参数 : []
2019-04-24 15:35:37 -耗时 : 0
2019-04-24 15:35:37 -返回值 : /moneyLog/elecLog/elecLog
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -参数 : [userType]
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:37 -参数 : [elecType]
2019-04-24 15:35:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:37 -==> Parameters: elecType(String)
2019-04-24 15:35:37 -==> Parameters: userType(String)
2019-04-24 15:35:37 -<==      Total: 4
2019-04-24 15:35:37 -耗时 : 4
2019-04-24 15:35:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:37 -<==      Total: 11
2019-04-24 15:35:37 -耗时 : 6
2019-04-24 15:35:37 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-24 15:35:37 -HTTP METHOD : GET
2019-04-24 15:35:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-24 15:35:37 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-04-24 15:35:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-24 15:35:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:37 -<==      Total: 10
2019-04-24 15:35:37 -==>  Preparing: select count(*) from elec_log 
2019-04-24 15:35:37 -==> Parameters: 
2019-04-24 15:35:37 -<==      Total: 1
2019-04-24 15:35:37 -耗时 : 6
2019-04-24 15:35:37 -返回值 : com.bootdo.common.utils.PageUtils@7f895fe0
2019-04-24 15:35:39 -请求地址 : http://localhost:8081/elec/elec
2019-04-24 15:35:39 -HTTP METHOD : GET
2019-04-24 15:35:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-24 15:35:39 -参数 : []
2019-04-24 15:35:39 -耗时 : 1
2019-04-24 15:35:39 -返回值 : elec/elec/elec
2019-04-24 15:35:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:35:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-24 15:35:40 -HTTP METHOD : GET
2019-04-24 15:35:40 -HTTP METHOD : GET
2019-04-24 15:35:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:35:40 -参数 : [userType]
2019-04-24 15:35:40 -参数 : [elecType]
2019-04-24 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:40 -==> Parameters: elecType(String)
2019-04-24 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:35:40 -==> Parameters: userType(String)
2019-04-24 15:35:40 -<==      Total: 11
2019-04-24 15:35:40 -<==      Total: 4
2019-04-24 15:35:40 -耗时 : 7
2019-04-24 15:35:40 -耗时 : 6
2019-04-24 15:35:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:40 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:35:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-24 15:35:40 -HTTP METHOD : GET
2019-04-24 15:35:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-24 15:35:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@671aa60]
2019-04-24 15:35:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-24 15:35:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:35:40 -<==      Total: 10
2019-04-24 15:35:40 -==>  Preparing: select count(*) from elec 
2019-04-24 15:35:40 -==> Parameters: 
2019-04-24 15:35:40 -<==      Total: 1
2019-04-24 15:35:40 -耗时 : 7
2019-04-24 15:35:40 -返回值 : com.bootdo.common.utils.PageUtils@131e9fd8
2019-04-24 15:41:50 -请求地址 : http://localhost:8081/index
2019-04-24 15:41:50 -HTTP METHOD : GET
2019-04-24 15:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 15:41:50 -参数 : [{}]
2019-04-24 15:41:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 15:41:50 -==> Parameters: 1(Long)
2019-04-24 15:41:50 -<==      Total: 49
2019-04-24 15:41:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 15:41:50 -==> Parameters: 138(Long)
2019-04-24 15:41:50 -<==      Total: 1
2019-04-24 15:41:50 -耗时 : 26
2019-04-24 15:41:50 -返回值 : index_v1
2019-04-24 15:41:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 15:41:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 15:41:50.358(Timestamp)
2019-04-24 15:41:50 -请求地址 : http://localhost:8081/main
2019-04-24 15:41:50 -HTTP METHOD : GET
2019-04-24 15:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:41:50 -参数 : []
2019-04-24 15:41:50 -耗时 : 0
2019-04-24 15:41:50 -返回值 : main
2019-04-24 15:41:50 -<==    Updates: 1
2019-04-24 15:41:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 15:41:50 -HTTP METHOD : GET
2019-04-24 15:41:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 15:41:50 -参数 : []
2019-04-24 15:41:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 15:41:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 15:41:50 -<==      Total: 0
2019-04-24 15:41:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 15:41:50 -==> Parameters: 1(Long), 0(String)
2019-04-24 15:41:50 -<==      Total: 1
2019-04-24 15:41:50 -耗时 : 22
2019-04-24 15:41:50 -返回值 : com.bootdo.common.utils.PageUtils@4976f8e8
2019-04-24 15:41:50 -请求地址 : http://localhost:8081/main
2019-04-24 15:41:50 -HTTP METHOD : GET
2019-04-24 15:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 15:41:50 -参数 : []
2019-04-24 15:41:50 -耗时 : 2
2019-04-24 15:41:50 -返回值 : main
2019-04-24 15:41:53 -请求地址 : http://localhost:8081/water/water
2019-04-24 15:41:53 -HTTP METHOD : GET
2019-04-24 15:41:53 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-04-24 15:41:53 -参数 : []
2019-04-24 15:41:53 -耗时 : 0
2019-04-24 15:41:53 -返回值 : water/water/water
2019-04-24 15:41:53 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-24 15:41:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:41:53 -HTTP METHOD : GET
2019-04-24 15:41:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:41:53 -HTTP METHOD : GET
2019-04-24 15:41:53 -参数 : [waterType]
2019-04-24 15:41:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:41:53 -参数 : [userType]
2019-04-24 15:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:41:53 -==> Parameters: waterType(String)
2019-04-24 15:41:53 -==> Parameters: userType(String)
2019-04-24 15:41:53 -<==      Total: 2
2019-04-24 15:41:53 -<==      Total: 4
2019-04-24 15:41:53 -耗时 : 5
2019-04-24 15:41:53 -耗时 : 5
2019-04-24 15:41:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:41:53 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:41:53 -请求地址 : http://localhost:8081/water/water/list
2019-04-24 15:41:53 -HTTP METHOD : GET
2019-04-24 15:41:53 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-24 15:41:53 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-24 15:41:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-24 15:41:53 -==> Parameters: 0(Integer), 3(Integer)
2019-04-24 15:41:53 -<==      Total: 3
2019-04-24 15:41:53 -==>  Preparing: select count(*) from water 
2019-04-24 15:41:53 -==> Parameters: 
2019-04-24 15:41:53 -<==      Total: 1
2019-04-24 15:41:53 -耗时 : 10
2019-04-24 15:41:53 -返回值 : com.bootdo.common.utils.PageUtils@6442fc8
2019-04-24 15:42:13 -请求地址 : http://localhost:8081/print/print
2019-04-24 15:42:13 -HTTP METHOD : GET
2019-04-24 15:42:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-24 15:42:13 -参数 : []
2019-04-24 15:42:13 -耗时 : 0
2019-04-24 15:42:13 -返回值 : print/print/print
2019-04-24 15:42:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:42:13 -HTTP METHOD : GET
2019-04-24 15:42:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:42:13 -参数 : [userType]
2019-04-24 15:42:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:42:13 -==> Parameters: userType(String)
2019-04-24 15:42:13 -<==      Total: 4
2019-04-24 15:42:13 -耗时 : 3
2019-04-24 15:42:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:42:13 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:42:13 -HTTP METHOD : GET
2019-04-24 15:42:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:42:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 15:42:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 15:42:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 15:42:13 -<==      Total: 6
2019-04-24 15:42:13 -==>  Preparing: select count(*) from print 
2019-04-24 15:42:13 -==> Parameters: 
2019-04-24 15:42:13 -<==      Total: 1
2019-04-24 15:42:13 -耗时 : 92
2019-04-24 15:42:13 -返回值 : com.bootdo.common.utils.PageUtils@51aa1b5e
2019-04-24 15:42:16 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-24 15:42:16 -HTTP METHOD : GET
2019-04-24 15:42:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-24 15:42:16 -参数 : [1, {}]
2019-04-24 15:42:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-24 15:42:16 -==> Parameters: 1(Long)
2019-04-24 15:42:16 -<==      Total: 1
2019-04-24 15:42:16 -耗时 : 4
2019-04-24 15:42:16 -返回值 : print/print/edit
2019-04-24 15:42:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 15:42:16 -HTTP METHOD : GET
2019-04-24 15:42:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 15:42:16 -参数 : [userType]
2019-04-24 15:42:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 15:42:16 -==> Parameters: userType(String)
2019-04-24 15:42:16 -<==      Total: 4
2019-04-24 15:42:16 -耗时 : 3
2019-04-24 15:42:16 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 15:42:20 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-24 15:42:20 -HTTP METHOD : GET
2019-04-24 15:42:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-24 15:42:20 -参数 : [1, {}]
2019-04-24 15:42:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-24 15:42:20 -==> Parameters: 1(Long)
2019-04-24 15:42:20 -<==      Total: 1
2019-04-24 15:42:20 -耗时 : 4
2019-04-24 15:42:20 -返回值 : print/print/printEdit
2019-04-24 15:47:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 15:47:00 -HTTP METHOD : GET
2019-04-24 15:47:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 15:47:00 -参数 : []
2019-04-24 15:47:00 -耗时 : 0
2019-04-24 15:47:00 -返回值 : system/dept/deptTree
2019-04-24 15:47:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 15:47:00 -HTTP METHOD : GET
2019-04-24 15:47:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 15:47:00 -参数 : []
2019-04-24 15:47:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 15:47:00 -==> Parameters: 
2019-04-24 15:47:00 -<==      Total: 3
2019-04-24 15:47:00 -耗时 : 4
2019-04-24 15:47:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 15:47:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 15:47:02 -==> Parameters: 1(Long)
2019-04-24 15:47:02 -<==      Total: 93
2019-04-24 15:47:02 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:47:02 -HTTP METHOD : GET
2019-04-24 15:47:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:47:02 -参数 : [{limit=10, offset=0, createTime=2019-03-19, userType=, userOrg=2, userId=}]
2019-04-24 15:47:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:47:02 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:47:02 -<==      Total: 0
2019-04-24 15:47:02 -==>  Preparing: select count(*) from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-24 15:47:02 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-24 15:47:02 -<==      Total: 1
2019-04-24 15:47:02 -耗时 : 8
2019-04-24 15:47:02 -返回值 : com.bootdo.common.utils.PageUtils@74591ebc
2019-04-24 15:47:03 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:47:03 -HTTP METHOD : GET
2019-04-24 15:47:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:47:03 -参数 : [{limit=10, offset=0, createTime=2019-03-19, userType=, userOrg=2, userId=}]
2019-04-24 15:47:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:47:03 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:47:03 -<==      Total: 0
2019-04-24 15:47:03 -==>  Preparing: select count(*) from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-24 15:47:03 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-24 15:47:03 -<==      Total: 1
2019-04-24 15:47:03 -耗时 : 5
2019-04-24 15:47:03 -返回值 : com.bootdo.common.utils.PageUtils@bdfbb4
2019-04-24 15:47:04 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:47:04 -HTTP METHOD : GET
2019-04-24 15:47:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:47:04 -参数 : [{limit=10, offset=0, createTime=2019-03-19, userType=, userOrg=2, userId=}]
2019-04-24 15:47:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:47:04 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:47:04 -<==      Total: 0
2019-04-24 15:47:04 -==>  Preparing: select count(*) from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-24 15:47:04 -==> Parameters: 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-24 15:47:04 -<==      Total: 1
2019-04-24 15:47:04 -耗时 : 8
2019-04-24 15:47:04 -返回值 : com.bootdo.common.utils.PageUtils@1cb3672
2019-04-24 15:47:14 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:47:14 -HTTP METHOD : GET
2019-04-24 15:47:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:47:14 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=2, userId=}]
2019-04-24 15:47:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? order by id asc limit ?, ? 
2019-04-24 15:47:14 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-04-24 15:47:14 -<==      Total: 5
2019-04-24 15:47:14 -==>  Preparing: select count(*) from print WHERE user_org = ? 
2019-04-24 15:47:14 -==> Parameters: 2(String)
2019-04-24 15:47:14 -<==      Total: 1
2019-04-24 15:47:14 -耗时 : 10
2019-04-24 15:47:14 -返回值 : com.bootdo.common.utils.PageUtils@7b3ae096
2019-04-24 15:47:26 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 15:47:26 -HTTP METHOD : GET
2019-04-24 15:47:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 15:47:26 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=, userOrg=2, userId=}]
2019-04-24 15:47:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-24 15:47:26 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-24 15:47:26 -<==      Total: 1
2019-04-24 15:47:26 -==>  Preparing: select count(*) from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-24 15:47:26 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-24 15:47:26 -<==      Total: 1
2019-04-24 15:47:26 -耗时 : 6
2019-04-24 15:47:26 -返回值 : com.bootdo.common.utils.PageUtils@72dd76f6
2019-04-24 15:50:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 415]
2019-04-24 16:00:15 -请求地址 : http://localhost:8081/index
2019-04-24 16:00:15 -HTTP METHOD : GET
2019-04-24 16:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:00:15 -参数 : [{}]
2019-04-24 16:00:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:00:15 -==> Parameters: 1(Long)
2019-04-24 16:00:15 -<==      Total: 49
2019-04-24 16:00:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:00:15 -==> Parameters: 138(Long)
2019-04-24 16:00:15 -<==      Total: 1
2019-04-24 16:00:15 -耗时 : 29
2019-04-24 16:00:15 -返回值 : index_v1
2019-04-24 16:00:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:00:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:00:15.252(Timestamp)
2019-04-24 16:00:15 -<==    Updates: 1
2019-04-24 16:00:15 -请求地址 : http://localhost:8081/main
2019-04-24 16:00:15 -HTTP METHOD : GET
2019-04-24 16:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:00:15 -参数 : []
2019-04-24 16:00:15 -耗时 : 59
2019-04-24 16:00:15 -返回值 : main
2019-04-24 16:00:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:00:15 -HTTP METHOD : GET
2019-04-24 16:00:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:00:15 -参数 : []
2019-04-24 16:00:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:00:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:00:15 -<==      Total: 0
2019-04-24 16:00:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:00:15 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:00:15 -<==      Total: 1
2019-04-24 16:00:15 -耗时 : 9
2019-04-24 16:00:15 -返回值 : com.bootdo.common.utils.PageUtils@4ed09aec
2019-04-24 16:00:15 -请求地址 : http://localhost:8081/main
2019-04-24 16:00:15 -HTTP METHOD : GET
2019-04-24 16:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:00:15 -参数 : []
2019-04-24 16:00:15 -耗时 : 6
2019-04-24 16:00:15 -返回值 : main
2019-04-24 16:00:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:00:38 -==> Parameters: 1(Long)
2019-04-24 16:00:38 -<==      Total: 93
2019-04-24 16:00:38 -请求地址 : http://localhost:8081/charts/countYY
2019-04-24 16:00:38 -HTTP METHOD : GET
2019-04-24 16:00:38 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-24 16:00:38 -参数 : []
2019-04-24 16:00:38 -耗时 : 1
2019-04-24 16:00:38 -返回值 : charts/countYY
2019-04-24 16:00:42 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-24 16:00:42 -HTTP METHOD : GET
2019-04-24 16:00:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-24 16:00:42 -参数 : []
2019-04-24 16:00:42 -耗时 : 10
2019-04-24 16:00:42 -返回值 : charts/tableElecYY
2019-04-24 16:02:45 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 16:02:45 -HTTP METHOD : GET
2019-04-24 16:02:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 16:02:45 -参数 : []
2019-04-24 16:02:45 -耗时 : 10
2019-04-24 16:02:45 -返回值 : charts/countDD
2019-04-24 16:02:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:02:46 -HTTP METHOD : GET
2019-04-24 16:02:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:02:46 -参数 : [userType]
2019-04-24 16:02:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:02:46 -==> Parameters: userType(String)
2019-04-24 16:02:46 -<==      Total: 4
2019-04-24 16:02:46 -耗时 : 4
2019-04-24 16:02:46 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:02:46 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:02:46 -HTTP METHOD : GET
2019-04-24 16:02:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:02:46 -参数 : []
2019-04-24 16:02:46 -耗时 : 12
2019-04-24 16:02:46 -返回值 : charts/tableDD
2019-04-24 16:11:17 -请求地址 : http://localhost:8081/index
2019-04-24 16:11:17 -HTTP METHOD : GET
2019-04-24 16:11:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:11:17 -参数 : [{}]
2019-04-24 16:11:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:11:17 -==> Parameters: 1(Long)
2019-04-24 16:11:17 -<==      Total: 49
2019-04-24 16:11:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:11:17 -==> Parameters: 138(Long)
2019-04-24 16:11:17 -<==      Total: 1
2019-04-24 16:11:17 -耗时 : 20
2019-04-24 16:11:17 -返回值 : index_v1
2019-04-24 16:11:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:11:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:11:17.082(Timestamp)
2019-04-24 16:11:17 -请求地址 : http://localhost:8081/main
2019-04-24 16:11:17 -HTTP METHOD : GET
2019-04-24 16:11:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:11:17 -参数 : []
2019-04-24 16:11:17 -耗时 : 0
2019-04-24 16:11:17 -返回值 : main
2019-04-24 16:11:17 -<==    Updates: 1
2019-04-24 16:11:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:11:17 -HTTP METHOD : GET
2019-04-24 16:11:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:11:17 -参数 : []
2019-04-24 16:11:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:11:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:11:17 -<==      Total: 0
2019-04-24 16:11:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:11:17 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:11:17 -<==      Total: 1
2019-04-24 16:11:17 -耗时 : 7
2019-04-24 16:11:17 -返回值 : com.bootdo.common.utils.PageUtils@318e05d1
2019-04-24 16:11:17 -请求地址 : http://localhost:8081/main
2019-04-24 16:11:17 -HTTP METHOD : GET
2019-04-24 16:11:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:11:17 -参数 : []
2019-04-24 16:11:17 -耗时 : 0
2019-04-24 16:11:17 -返回值 : main
2019-04-24 16:11:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:11:24 -==> Parameters: 1(Long)
2019-04-24 16:11:24 -<==      Total: 93
2019-04-24 16:11:24 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 16:11:24 -HTTP METHOD : GET
2019-04-24 16:11:24 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 16:11:24 -参数 : []
2019-04-24 16:11:24 -耗时 : 13
2019-04-24 16:11:24 -返回值 : charts/countMM
2019-04-24 16:11:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:11:25 -HTTP METHOD : GET
2019-04-24 16:11:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:11:25 -参数 : [userType]
2019-04-24 16:11:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:11:25 -==> Parameters: userType(String)
2019-04-24 16:11:25 -<==      Total: 4
2019-04-24 16:11:25 -耗时 : 3
2019-04-24 16:11:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:11:25 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:11:25 -HTTP METHOD : GET
2019-04-24 16:11:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:11:25 -参数 : []
2019-04-24 16:11:25 -耗时 : 0
2019-04-24 16:11:25 -返回值 : charts/tableDD
2019-04-24 16:11:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:11:30 -HTTP METHOD : GET
2019-04-24 16:11:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:11:30 -参数 : []
2019-04-24 16:11:30 -耗时 : 1
2019-04-24 16:11:30 -返回值 : system/dept/deptTree
2019-04-24 16:11:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:11:30 -HTTP METHOD : GET
2019-04-24 16:11:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:11:30 -参数 : []
2019-04-24 16:11:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:11:30 -==> Parameters: 
2019-04-24 16:11:30 -<==      Total: 3
2019-04-24 16:11:30 -耗时 : 4
2019-04-24 16:11:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:11:32 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:11:32 -HTTP METHOD : POST
2019-04-24 16:11:32 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:11:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@fe2573a, com.bootdo.moneyLog.vo.WaterLogVo@6e850100, com.bootdo.moneyLog.vo.HeatLogVo@5696b894]
2019-04-24 16:11:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -耗时 : 218
2019-04-24 16:11:33 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:11:33 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:11:33 -HTTP METHOD : POST
2019-04-24 16:11:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:11:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5306cd22, com.bootdo.moneyLog.vo.WaterLogVo@67057aa7, com.bootdo.moneyLog.vo.HeatLogVo@72b7c4fd]
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:33 -<==      Total: 1
2019-04-24 16:11:33 -耗时 : 98
2019-04-24 16:11:33 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:11:35 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:11:35 -HTTP METHOD : POST
2019-04-24 16:11:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:11:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2cc638e6, com.bootdo.moneyLog.vo.WaterLogVo@6be033c5, com.bootdo.moneyLog.vo.HeatLogVo@4be95822]
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:35 -<==      Total: 1
2019-04-24 16:11:35 -耗时 : 115
2019-04-24 16:11:35 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:11:36 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:11:36 -HTTP METHOD : POST
2019-04-24 16:11:36 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:11:36 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5ea2828d, com.bootdo.moneyLog.vo.WaterLogVo@188123b0, com.bootdo.moneyLog.vo.HeatLogVo@6178b97a]
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:11:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:11:36 -<==      Total: 1
2019-04-24 16:11:36 -耗时 : 97
2019-04-24 16:11:36 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:13:15 -请求地址 : http://localhost:8081/index
2019-04-24 16:13:15 -HTTP METHOD : GET
2019-04-24 16:13:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:13:15 -参数 : [{}]
2019-04-24 16:13:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:13:15 -==> Parameters: 1(Long)
2019-04-24 16:13:15 -<==      Total: 49
2019-04-24 16:13:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:13:15 -==> Parameters: 138(Long)
2019-04-24 16:13:15 -<==      Total: 1
2019-04-24 16:13:15 -耗时 : 19
2019-04-24 16:13:15 -返回值 : index_v1
2019-04-24 16:13:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:13:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:13:15.81(Timestamp)
2019-04-24 16:13:15 -<==    Updates: 1
2019-04-24 16:13:16 -请求地址 : http://localhost:8081/main
2019-04-24 16:13:16 -HTTP METHOD : GET
2019-04-24 16:13:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:13:16 -参数 : []
2019-04-24 16:13:16 -耗时 : 0
2019-04-24 16:13:16 -返回值 : main
2019-04-24 16:13:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:13:17 -HTTP METHOD : GET
2019-04-24 16:13:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:13:17 -参数 : []
2019-04-24 16:13:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:13:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:13:17 -<==      Total: 0
2019-04-24 16:13:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:13:17 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:13:17 -<==      Total: 1
2019-04-24 16:13:17 -耗时 : 13
2019-04-24 16:13:17 -返回值 : com.bootdo.common.utils.PageUtils@2cff2b87
2019-04-24 16:13:17 -请求地址 : http://localhost:8081/main
2019-04-24 16:13:17 -HTTP METHOD : GET
2019-04-24 16:13:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:13:17 -参数 : []
2019-04-24 16:13:17 -耗时 : 1
2019-04-24 16:13:17 -返回值 : main
2019-04-24 16:13:24 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:13:24 -HTTP METHOD : GET
2019-04-24 16:13:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:13:24 -参数 : []
2019-04-24 16:13:24 -耗时 : 1
2019-04-24 16:13:24 -返回值 : charts/tableDD
2019-04-24 16:13:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:13:29 -HTTP METHOD : GET
2019-04-24 16:13:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:13:29 -参数 : []
2019-04-24 16:13:29 -耗时 : 1
2019-04-24 16:13:29 -返回值 : system/dept/deptTree
2019-04-24 16:13:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:13:29 -HTTP METHOD : GET
2019-04-24 16:13:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:13:29 -参数 : []
2019-04-24 16:13:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:13:29 -==> Parameters: 
2019-04-24 16:13:29 -<==      Total: 3
2019-04-24 16:13:29 -耗时 : 3
2019-04-24 16:13:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:13:31 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:13:31 -HTTP METHOD : POST
2019-04-24 16:13:31 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:13:31 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@18b77bd1, com.bootdo.moneyLog.vo.WaterLogVo@7c05282f, com.bootdo.moneyLog.vo.HeatLogVo@2f6b4941]
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:31 -<==      Total: 1
2019-04-24 16:13:31 -耗时 : 84
2019-04-24 16:13:31 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:13:32 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:13:32 -HTTP METHOD : POST
2019-04-24 16:13:32 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:13:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6951e1de, com.bootdo.moneyLog.vo.WaterLogVo@4e238989, com.bootdo.moneyLog.vo.HeatLogVo@1f3543a0]
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:32 -<==      Total: 1
2019-04-24 16:13:32 -耗时 : 74
2019-04-24 16:13:32 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:13:33 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:13:33 -HTTP METHOD : POST
2019-04-24 16:13:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:13:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@36495bb7, com.bootdo.moneyLog.vo.WaterLogVo@b0ff455, com.bootdo.moneyLog.vo.HeatLogVo@7482ab6f]
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:13:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:13:33 -<==      Total: 1
2019-04-24 16:13:33 -耗时 : 76
2019-04-24 16:13:33 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:15:43 -请求地址 : http://localhost:8081/index
2019-04-24 16:15:43 -HTTP METHOD : GET
2019-04-24 16:15:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:15:43 -参数 : [{}]
2019-04-24 16:15:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:15:43 -==> Parameters: 1(Long)
2019-04-24 16:15:43 -<==      Total: 49
2019-04-24 16:15:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:15:43 -==> Parameters: 138(Long)
2019-04-24 16:15:43 -<==      Total: 1
2019-04-24 16:15:43 -耗时 : 17
2019-04-24 16:15:43 -返回值 : index_v1
2019-04-24 16:15:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:15:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:15:43.515(Timestamp)
2019-04-24 16:15:43 -请求地址 : http://localhost:8081/main
2019-04-24 16:15:43 -HTTP METHOD : GET
2019-04-24 16:15:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:15:43 -参数 : []
2019-04-24 16:15:43 -耗时 : 0
2019-04-24 16:15:43 -返回值 : main
2019-04-24 16:15:43 -<==    Updates: 1
2019-04-24 16:15:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:15:43 -HTTP METHOD : GET
2019-04-24 16:15:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:15:43 -参数 : []
2019-04-24 16:15:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:15:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:15:43 -<==      Total: 0
2019-04-24 16:15:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:15:43 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:15:43 -<==      Total: 1
2019-04-24 16:15:43 -耗时 : 5
2019-04-24 16:15:43 -返回值 : com.bootdo.common.utils.PageUtils@3932caef
2019-04-24 16:15:43 -请求地址 : http://localhost:8081/main
2019-04-24 16:15:43 -HTTP METHOD : GET
2019-04-24 16:15:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:15:43 -参数 : []
2019-04-24 16:15:43 -耗时 : 0
2019-04-24 16:15:43 -返回值 : main
2019-04-24 16:16:37 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-24 16:16:37 -HTTP METHOD : GET
2019-04-24 16:16:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-24 16:16:37 -参数 : []
2019-04-24 16:16:37 -耗时 : 1
2019-04-24 16:16:37 -返回值 : /moneyList/moneyList
2019-04-24 16:16:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:16:43 -HTTP METHOD : GET
2019-04-24 16:16:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:16:43 -参数 : []
2019-04-24 16:16:43 -耗时 : 1
2019-04-24 16:16:43 -返回值 : system/dept/deptTree
2019-04-24 16:16:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:16:43 -HTTP METHOD : GET
2019-04-24 16:16:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:16:43 -参数 : []
2019-04-24 16:16:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:16:43 -==> Parameters: 
2019-04-24 16:16:43 -<==      Total: 3
2019-04-24 16:16:43 -耗时 : 5
2019-04-24 16:16:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:16:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-24 16:16:49 -HTTP METHOD : POST
2019-04-24 16:16:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-24 16:16:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38aba40]
2019-04-24 16:16:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-24 16:16:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-24 16:16:49 -<==      Total: 3
2019-04-24 16:16:49 -耗时 : 169
2019-04-24 16:16:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2c6b197b, com.bootdo.moneyList.damain.MoneyListDO@2ff477aa, com.bootdo.moneyList.damain.MoneyListDO@1c1b5d6]
2019-04-24 16:18:32 -请求地址 : http://localhost:8081/index
2019-04-24 16:18:32 -HTTP METHOD : GET
2019-04-24 16:18:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:18:32 -参数 : [{}]
2019-04-24 16:18:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:18:32 -==> Parameters: 1(Long)
2019-04-24 16:18:32 -<==      Total: 49
2019-04-24 16:18:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:18:32 -==> Parameters: 138(Long)
2019-04-24 16:18:32 -<==      Total: 1
2019-04-24 16:18:32 -耗时 : 18
2019-04-24 16:18:32 -返回值 : index_v1
2019-04-24 16:18:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:18:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:18:32.137(Timestamp)
2019-04-24 16:18:32 -请求地址 : http://localhost:8081/main
2019-04-24 16:18:32 -HTTP METHOD : GET
2019-04-24 16:18:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:18:32 -参数 : []
2019-04-24 16:18:32 -耗时 : 0
2019-04-24 16:18:32 -<==    Updates: 1
2019-04-24 16:18:32 -返回值 : main
2019-04-24 16:18:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:18:32 -HTTP METHOD : GET
2019-04-24 16:18:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:18:32 -参数 : []
2019-04-24 16:18:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:18:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:18:32 -<==      Total: 0
2019-04-24 16:18:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:18:32 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:18:32 -<==      Total: 1
2019-04-24 16:18:32 -耗时 : 7
2019-04-24 16:18:32 -返回值 : com.bootdo.common.utils.PageUtils@600bf1e7
2019-04-24 16:18:32 -请求地址 : http://localhost:8081/main
2019-04-24 16:18:32 -HTTP METHOD : GET
2019-04-24 16:18:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:18:32 -参数 : []
2019-04-24 16:18:32 -耗时 : 0
2019-04-24 16:18:32 -返回值 : main
2019-04-24 16:18:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:18:37 -HTTP METHOD : GET
2019-04-24 16:18:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:18:37 -参数 : []
2019-04-24 16:18:37 -耗时 : 1
2019-04-24 16:18:37 -返回值 : charts/tableDD
2019-04-24 16:18:38 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 16:18:38 -HTTP METHOD : GET
2019-04-24 16:18:38 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 16:18:38 -参数 : []
2019-04-24 16:18:38 -耗时 : 1
2019-04-24 16:18:38 -返回值 : charts/countMM
2019-04-24 16:18:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:18:39 -HTTP METHOD : GET
2019-04-24 16:18:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:18:39 -参数 : [userType]
2019-04-24 16:18:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:18:39 -==> Parameters: userType(String)
2019-04-24 16:18:39 -<==      Total: 4
2019-04-24 16:18:39 -耗时 : 337
2019-04-24 16:18:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:18:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:18:48 -HTTP METHOD : GET
2019-04-24 16:18:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:18:48 -参数 : []
2019-04-24 16:18:48 -耗时 : 1
2019-04-24 16:18:48 -返回值 : system/dept/deptTree
2019-04-24 16:18:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:18:48 -HTTP METHOD : GET
2019-04-24 16:18:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:18:48 -参数 : []
2019-04-24 16:18:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:18:48 -==> Parameters: 
2019-04-24 16:18:48 -<==      Total: 3
2019-04-24 16:18:48 -耗时 : 4
2019-04-24 16:18:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:18:50 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:18:50 -HTTP METHOD : POST
2019-04-24 16:18:50 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:18:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@548a5f80, com.bootdo.moneyLog.vo.WaterLogVo@32c835db, com.bootdo.moneyLog.vo.HeatLogVo@671db7d6]
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:50 -<==      Total: 1
2019-04-24 16:18:50 -耗时 : 117
2019-04-24 16:18:50 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:18:51 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:18:51 -HTTP METHOD : POST
2019-04-24 16:18:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:18:51 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1d8cbec1, com.bootdo.moneyLog.vo.WaterLogVo@741e9a08, com.bootdo.moneyLog.vo.HeatLogVo@4d7cb102]
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:51 -<==      Total: 1
2019-04-24 16:18:51 -耗时 : 96
2019-04-24 16:18:51 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:18:52 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:18:52 -HTTP METHOD : POST
2019-04-24 16:18:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:18:52 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@22440077, com.bootdo.moneyLog.vo.WaterLogVo@3df823f4, com.bootdo.moneyLog.vo.HeatLogVo@5d66fde1]
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:18:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:18:52 -<==      Total: 1
2019-04-24 16:18:52 -耗时 : 109
2019-04-24 16:18:52 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:20:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(9)-CONNECTED(9)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 105], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 845]
2019-04-24 16:20:40 -Validating all active sessions...
2019-04-24 16:20:40 -Finished session validation.  No sessions were stopped.
2019-04-24 16:22:36 -请求地址 : http://localhost:8081/index
2019-04-24 16:22:36 -HTTP METHOD : GET
2019-04-24 16:22:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:22:36 -参数 : [{}]
2019-04-24 16:22:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:22:36 -==> Parameters: 1(Long)
2019-04-24 16:22:36 -<==      Total: 49
2019-04-24 16:22:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:22:36 -==> Parameters: 138(Long)
2019-04-24 16:22:36 -<==      Total: 1
2019-04-24 16:22:36 -耗时 : 16
2019-04-24 16:22:36 -返回值 : index_v1
2019-04-24 16:22:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:22:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:22:36.999(Timestamp)
2019-04-24 16:22:37 -请求地址 : http://localhost:8081/main
2019-04-24 16:22:37 -HTTP METHOD : GET
2019-04-24 16:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:22:37 -参数 : []
2019-04-24 16:22:37 -耗时 : 1
2019-04-24 16:22:37 -返回值 : main
2019-04-24 16:22:37 -<==    Updates: 1
2019-04-24 16:22:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:22:37 -HTTP METHOD : GET
2019-04-24 16:22:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:22:37 -参数 : []
2019-04-24 16:22:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:22:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:22:37 -<==      Total: 0
2019-04-24 16:22:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:22:37 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:22:37 -<==      Total: 1
2019-04-24 16:22:37 -耗时 : 45
2019-04-24 16:22:37 -返回值 : com.bootdo.common.utils.PageUtils@6642db06
2019-04-24 16:22:37 -请求地址 : http://localhost:8081/main
2019-04-24 16:22:37 -HTTP METHOD : GET
2019-04-24 16:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:22:37 -参数 : []
2019-04-24 16:22:37 -耗时 : 0
2019-04-24 16:22:37 -返回值 : main
2019-04-24 16:22:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:22:39 -==> Parameters: 1(Long)
2019-04-24 16:22:39 -<==      Total: 93
2019-04-24 16:22:39 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 16:22:39 -HTTP METHOD : GET
2019-04-24 16:22:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 16:22:39 -参数 : []
2019-04-24 16:22:39 -耗时 : 0
2019-04-24 16:22:39 -返回值 : charts/countDD
2019-04-24 16:22:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:22:40 -HTTP METHOD : GET
2019-04-24 16:22:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:22:40 -参数 : [userType]
2019-04-24 16:22:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:22:40 -==> Parameters: userType(String)
2019-04-24 16:22:40 -<==      Total: 4
2019-04-24 16:22:40 -耗时 : 3
2019-04-24 16:22:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:22:40 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:22:40 -HTTP METHOD : GET
2019-04-24 16:22:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:22:40 -参数 : []
2019-04-24 16:22:40 -耗时 : 1
2019-04-24 16:22:40 -返回值 : charts/tableDD
2019-04-24 16:22:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:22:45 -HTTP METHOD : GET
2019-04-24 16:22:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:22:45 -参数 : []
2019-04-24 16:22:45 -耗时 : 1
2019-04-24 16:22:45 -返回值 : system/dept/deptTree
2019-04-24 16:22:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:22:45 -HTTP METHOD : GET
2019-04-24 16:22:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:22:45 -参数 : []
2019-04-24 16:22:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:22:45 -==> Parameters: 
2019-04-24 16:22:45 -<==      Total: 3
2019-04-24 16:22:45 -耗时 : 3
2019-04-24 16:22:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:22:47 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:22:47 -HTTP METHOD : POST
2019-04-24 16:22:47 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:22:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4f73e2c2, com.bootdo.moneyLog.vo.WaterLogVo@62ca48f0, com.bootdo.moneyLog.vo.HeatLogVo@4697d25]
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:47 -<==      Total: 1
2019-04-24 16:22:47 -耗时 : 142
2019-04-24 16:22:47 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:22:48 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:22:48 -HTTP METHOD : POST
2019-04-24 16:22:48 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:22:48 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@41d92d35, com.bootdo.moneyLog.vo.WaterLogVo@57abd404, com.bootdo.moneyLog.vo.HeatLogVo@3e3d1e84]
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:48 -<==      Total: 1
2019-04-24 16:22:48 -耗时 : 208
2019-04-24 16:22:48 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:22:49 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:22:49 -HTTP METHOD : POST
2019-04-24 16:22:49 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:22:49 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4910dfc, com.bootdo.moneyLog.vo.WaterLogVo@3ac67a7e, com.bootdo.moneyLog.vo.HeatLogVo@6f2b80d9]
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:22:49 -<==      Total: 1
2019-04-24 16:22:49 -耗时 : 118
2019-04-24 16:22:49 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:24:26 -请求地址 : http://localhost:8081/index
2019-04-24 16:24:26 -HTTP METHOD : GET
2019-04-24 16:24:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:24:26 -参数 : [{}]
2019-04-24 16:24:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:24:26 -==> Parameters: 1(Long)
2019-04-24 16:24:26 -<==      Total: 49
2019-04-24 16:24:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:24:26 -==> Parameters: 138(Long)
2019-04-24 16:24:26 -<==      Total: 1
2019-04-24 16:24:26 -耗时 : 82
2019-04-24 16:24:26 -返回值 : index_v1
2019-04-24 16:24:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:24:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:24:26.738(Timestamp)
2019-04-24 16:24:26 -<==    Updates: 1
2019-04-24 16:24:26 -请求地址 : http://localhost:8081/main
2019-04-24 16:24:26 -HTTP METHOD : GET
2019-04-24 16:24:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:24:26 -参数 : []
2019-04-24 16:24:26 -耗时 : 1
2019-04-24 16:24:26 -返回值 : main
2019-04-24 16:24:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:24:27 -HTTP METHOD : GET
2019-04-24 16:24:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:24:27 -参数 : []
2019-04-24 16:24:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:24:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:24:27 -<==      Total: 0
2019-04-24 16:24:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:24:27 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:24:27 -<==      Total: 1
2019-04-24 16:24:27 -耗时 : 5
2019-04-24 16:24:27 -返回值 : com.bootdo.common.utils.PageUtils@2a4a7c06
2019-04-24 16:24:27 -请求地址 : http://localhost:8081/main
2019-04-24 16:24:27 -HTTP METHOD : GET
2019-04-24 16:24:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:24:27 -参数 : []
2019-04-24 16:24:27 -耗时 : 1
2019-04-24 16:24:27 -返回值 : main
2019-04-24 16:24:30 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:24:30 -HTTP METHOD : GET
2019-04-24 16:24:30 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:24:30 -参数 : []
2019-04-24 16:24:30 -耗时 : 0
2019-04-24 16:24:30 -返回值 : charts/tableDD
2019-04-24 16:24:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:24:38 -HTTP METHOD : GET
2019-04-24 16:24:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:24:38 -参数 : []
2019-04-24 16:24:38 -耗时 : 0
2019-04-24 16:24:38 -返回值 : system/dept/deptTree
2019-04-24 16:24:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:24:39 -HTTP METHOD : GET
2019-04-24 16:24:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:24:39 -参数 : []
2019-04-24 16:24:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:24:39 -==> Parameters: 
2019-04-24 16:24:39 -<==      Total: 3
2019-04-24 16:24:39 -耗时 : 3
2019-04-24 16:24:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:24:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:24:41 -HTTP METHOD : POST
2019-04-24 16:24:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:24:41 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@142e934e, com.bootdo.moneyLog.vo.WaterLogVo@10e3cc6f, com.bootdo.moneyLog.vo.HeatLogVo@721fb57a]
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:41 -<==      Total: 1
2019-04-24 16:24:41 -耗时 : 174
2019-04-24 16:24:41 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:24:42 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:24:42 -HTTP METHOD : POST
2019-04-24 16:24:42 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:24:42 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6ac5c248, com.bootdo.moneyLog.vo.WaterLogVo@459c7dde, com.bootdo.moneyLog.vo.HeatLogVo@3ac8ffb]
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:24:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:24:42 -<==      Total: 1
2019-04-24 16:24:42 -耗时 : 118
2019-04-24 16:24:42 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:25:10 -请求地址 : http://localhost:8081/login;JSESSIONID=761bc645-f109-44f6-be4d-34ede4badd71
2019-04-24 16:25:10 -HTTP METHOD : GET
2019-04-24 16:25:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 16:25:10 -参数 : [{}]
2019-04-24 16:25:10 -耗时 : 0
2019-04-24 16:25:10 -返回值 : login
2019-04-24 16:25:11 -请求地址 : http://localhost:8081/getVerify
2019-04-24 16:25:11 -HTTP METHOD : GET
2019-04-24 16:25:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 16:25:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24a20d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1da38ffe]
2019-04-24 16:25:12 -2158
2019-04-24 16:25:12 -耗时 : 806
2019-04-24 16:25:12 -返回值 : null
2019-04-24 16:25:12 -请求地址 : http://localhost:8081/login
2019-04-24 16:25:12 -HTTP METHOD : GET
2019-04-24 16:25:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 16:25:12 -参数 : [{}]
2019-04-24 16:25:12 -耗时 : 0
2019-04-24 16:25:12 -返回值 : login
2019-04-24 16:25:16 -请求地址 : http://localhost:8081/login
2019-04-24 16:25:16 -HTTP METHOD : POST
2019-04-24 16:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 16:25:16 -参数 : [admin, 111111, 2158, org.apache.shiro.web.servlet.ShiroHttpServletRequest@75299300]
2019-04-24 16:25:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 16:25:17 -==> Parameters: admin(String)
2019-04-24 16:25:17 -<==      Total: 1
2019-04-24 16:25:17 -耗时 : 548
2019-04-24 16:25:17 -返回值 : {msg=操作成功, code=0}
2019-04-24 16:25:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:25:17 -==> Parameters: 1(Long), admin(String), 登录(String), 548(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 16:25:17.457(Timestamp)
2019-04-24 16:25:17 -请求地址 : http://localhost:8081/index
2019-04-24 16:25:17 -HTTP METHOD : GET
2019-04-24 16:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:25:17 -参数 : [{}]
2019-04-24 16:25:17 -<==    Updates: 1
2019-04-24 16:25:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:25:17 -==> Parameters: 1(Long)
2019-04-24 16:25:17 -<==      Total: 49
2019-04-24 16:25:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:25:17 -==> Parameters: 138(Long)
2019-04-24 16:25:17 -<==      Total: 1
2019-04-24 16:25:17 -耗时 : 400
2019-04-24 16:25:17 -返回值 : index_v1
2019-04-24 16:25:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:25:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 400(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:25:17.944(Timestamp)
2019-04-24 16:25:18 -请求地址 : http://localhost:8081/main
2019-04-24 16:25:18 -HTTP METHOD : GET
2019-04-24 16:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:25:18 -参数 : []
2019-04-24 16:25:18 -耗时 : 0
2019-04-24 16:25:18 -返回值 : main
2019-04-24 16:25:18 -<==    Updates: 1
2019-04-24 16:25:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:25:23 -HTTP METHOD : GET
2019-04-24 16:25:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:25:23 -参数 : []
2019-04-24 16:25:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:25:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:25:23 -<==      Total: 0
2019-04-24 16:25:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:25:23 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:25:23 -<==      Total: 1
2019-04-24 16:25:23 -耗时 : 390
2019-04-24 16:25:23 -返回值 : com.bootdo.common.utils.PageUtils@7fc8262
2019-04-24 16:25:23 -请求地址 : http://localhost:8081/main
2019-04-24 16:25:23 -HTTP METHOD : GET
2019-04-24 16:25:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:25:23 -参数 : []
2019-04-24 16:25:23 -耗时 : 1
2019-04-24 16:25:23 -返回值 : main
2019-04-24 16:25:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:25:28 -==> Parameters: 1(Long)
2019-04-24 16:25:28 -<==      Total: 93
2019-04-24 16:25:28 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:25:28 -HTTP METHOD : GET
2019-04-24 16:25:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:25:28 -参数 : []
2019-04-24 16:25:28 -耗时 : 0
2019-04-24 16:25:28 -返回值 : charts/tableDD
2019-04-24 16:26:05 -请求地址 : http://localhost:8081/index
2019-04-24 16:26:05 -HTTP METHOD : GET
2019-04-24 16:26:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:26:05 -参数 : [{}]
2019-04-24 16:26:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:26:05 -==> Parameters: 1(Long)
2019-04-24 16:26:05 -<==      Total: 49
2019-04-24 16:26:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:26:05 -==> Parameters: 138(Long)
2019-04-24 16:26:05 -<==      Total: 1
2019-04-24 16:26:05 -耗时 : 53
2019-04-24 16:26:05 -返回值 : index_v1
2019-04-24 16:26:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:26:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 53(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:26:05.804(Timestamp)
2019-04-24 16:26:05 -<==    Updates: 1
2019-04-24 16:26:06 -请求地址 : http://localhost:8081/main
2019-04-24 16:26:06 -HTTP METHOD : GET
2019-04-24 16:26:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:26:06 -参数 : []
2019-04-24 16:26:06 -耗时 : 1
2019-04-24 16:26:06 -返回值 : main
2019-04-24 16:26:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:26:06 -HTTP METHOD : GET
2019-04-24 16:26:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:26:06 -参数 : []
2019-04-24 16:26:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:26:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:26:06 -<==      Total: 0
2019-04-24 16:26:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:26:06 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:26:06 -<==      Total: 1
2019-04-24 16:26:06 -耗时 : 7
2019-04-24 16:26:06 -返回值 : com.bootdo.common.utils.PageUtils@6a69081b
2019-04-24 16:26:06 -请求地址 : http://localhost:8081/main
2019-04-24 16:26:06 -HTTP METHOD : GET
2019-04-24 16:26:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:26:06 -参数 : []
2019-04-24 16:26:06 -耗时 : 0
2019-04-24 16:26:06 -返回值 : main
2019-04-24 16:26:11 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:26:11 -HTTP METHOD : GET
2019-04-24 16:26:11 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:26:11 -参数 : []
2019-04-24 16:26:11 -耗时 : 0
2019-04-24 16:26:11 -返回值 : charts/tableDD
2019-04-24 16:26:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:26:16 -HTTP METHOD : GET
2019-04-24 16:26:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:26:16 -参数 : []
2019-04-24 16:26:16 -耗时 : 1
2019-04-24 16:26:16 -返回值 : system/dept/deptTree
2019-04-24 16:26:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:26:17 -HTTP METHOD : GET
2019-04-24 16:26:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:26:17 -参数 : []
2019-04-24 16:26:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:26:17 -==> Parameters: 
2019-04-24 16:26:17 -<==      Total: 3
2019-04-24 16:26:17 -耗时 : 4
2019-04-24 16:26:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:26:19 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:26:19 -HTTP METHOD : POST
2019-04-24 16:26:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:26:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@33fb6306, com.bootdo.moneyLog.vo.WaterLogVo@5c01c4e, com.bootdo.moneyLog.vo.HeatLogVo@427895ba]
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:19 -<==      Total: 1
2019-04-24 16:26:19 -耗时 : 196
2019-04-24 16:26:19 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:26:20 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:26:20 -HTTP METHOD : POST
2019-04-24 16:26:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:26:20 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@63465eb5, com.bootdo.moneyLog.vo.WaterLogVo@79150685, com.bootdo.moneyLog.vo.HeatLogVo@3465a7fc]
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:26:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:26:20 -<==      Total: 1
2019-04-24 16:26:20 -耗时 : 355
2019-04-24 16:26:20 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:27:56 -请求地址 : http://localhost:8081/index
2019-04-24 16:27:56 -HTTP METHOD : GET
2019-04-24 16:27:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:27:56 -参数 : [{}]
2019-04-24 16:27:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:27:56 -==> Parameters: 1(Long)
2019-04-24 16:27:56 -<==      Total: 49
2019-04-24 16:27:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:27:56 -==> Parameters: 138(Long)
2019-04-24 16:27:56 -<==      Total: 1
2019-04-24 16:27:56 -耗时 : 101
2019-04-24 16:27:56 -返回值 : index_v1
2019-04-24 16:27:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:27:56 -请求地址 : http://localhost:8081/main
2019-04-24 16:27:56 -HTTP METHOD : GET
2019-04-24 16:27:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:27:56 -参数 : []
2019-04-24 16:27:56 -耗时 : 0
2019-04-24 16:27:56 -返回值 : main
2019-04-24 16:27:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:27:56.559(Timestamp)
2019-04-24 16:27:57 -<==    Updates: 1
2019-04-24 16:27:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:27:57 -HTTP METHOD : GET
2019-04-24 16:27:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:27:57 -参数 : []
2019-04-24 16:27:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:27:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:27:57 -<==      Total: 0
2019-04-24 16:27:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:27:57 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:27:57 -<==      Total: 1
2019-04-24 16:27:57 -耗时 : 4
2019-04-24 16:27:57 -返回值 : com.bootdo.common.utils.PageUtils@49ea9891
2019-04-24 16:27:57 -请求地址 : http://localhost:8081/main
2019-04-24 16:27:57 -HTTP METHOD : GET
2019-04-24 16:27:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:27:57 -参数 : []
2019-04-24 16:27:57 -耗时 : 1
2019-04-24 16:27:57 -返回值 : main
2019-04-24 16:28:06 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 16:28:06 -HTTP METHOD : GET
2019-04-24 16:28:06 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 16:28:06 -参数 : []
2019-04-24 16:28:06 -耗时 : 1
2019-04-24 16:28:06 -返回值 : charts/countDD
2019-04-24 16:28:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:28:06 -HTTP METHOD : GET
2019-04-24 16:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:28:06 -参数 : [userType]
2019-04-24 16:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:28:06 -==> Parameters: userType(String)
2019-04-24 16:28:06 -<==      Total: 4
2019-04-24 16:28:06 -耗时 : 3
2019-04-24 16:28:06 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:28:07 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:28:07 -HTTP METHOD : GET
2019-04-24 16:28:07 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:28:07 -参数 : []
2019-04-24 16:28:07 -耗时 : 0
2019-04-24 16:28:07 -返回值 : charts/tableDD
2019-04-24 16:28:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:28:09 -HTTP METHOD : GET
2019-04-24 16:28:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:28:09 -参数 : []
2019-04-24 16:28:09 -耗时 : 1
2019-04-24 16:28:09 -返回值 : system/dept/deptTree
2019-04-24 16:28:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:28:09 -HTTP METHOD : GET
2019-04-24 16:28:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:28:09 -参数 : []
2019-04-24 16:28:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:28:09 -==> Parameters: 
2019-04-24 16:28:09 -<==      Total: 3
2019-04-24 16:28:09 -耗时 : 6
2019-04-24 16:28:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:28:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:28:18 -HTTP METHOD : GET
2019-04-24 16:28:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:28:18 -参数 : []
2019-04-24 16:28:18 -耗时 : 1
2019-04-24 16:28:18 -返回值 : system/dept/deptTree
2019-04-24 16:28:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:28:18 -HTTP METHOD : GET
2019-04-24 16:28:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:28:18 -参数 : []
2019-04-24 16:28:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:28:18 -==> Parameters: 
2019-04-24 16:28:18 -<==      Total: 3
2019-04-24 16:28:18 -耗时 : 3
2019-04-24 16:28:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:28:19 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:19 -HTTP METHOD : POST
2019-04-24 16:28:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4374ba33, com.bootdo.moneyLog.vo.WaterLogVo@79989f8d, com.bootdo.moneyLog.vo.HeatLogVo@4f375a4e]
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:19 -<==      Total: 1
2019-04-24 16:28:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:20 -<==      Total: 1
2019-04-24 16:28:20 -耗时 : 68
2019-04-24 16:28:20 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:21 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:21 -HTTP METHOD : POST
2019-04-24 16:28:21 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:21 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@c8952fc, com.bootdo.moneyLog.vo.WaterLogVo@11ba6dec, com.bootdo.moneyLog.vo.HeatLogVo@6f569e37]
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:21 -<==      Total: 1
2019-04-24 16:28:21 -耗时 : 96
2019-04-24 16:28:21 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:22 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:22 -HTTP METHOD : POST
2019-04-24 16:28:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2be1c9dc, com.bootdo.moneyLog.vo.WaterLogVo@43244a53, com.bootdo.moneyLog.vo.HeatLogVo@6852fd47]
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:22 -<==      Total: 1
2019-04-24 16:28:22 -耗时 : 114
2019-04-24 16:28:22 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:24 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:24 -HTTP METHOD : POST
2019-04-24 16:28:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6074240e, com.bootdo.moneyLog.vo.WaterLogVo@3e43aaa7, com.bootdo.moneyLog.vo.HeatLogVo@7121eadd]
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:24 -<==      Total: 1
2019-04-24 16:28:24 -耗时 : 106
2019-04-24 16:28:24 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:56 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:56 -HTTP METHOD : POST
2019-04-24 16:28:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:56 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@20734b11, com.bootdo.moneyLog.vo.WaterLogVo@4d977647, com.bootdo.moneyLog.vo.HeatLogVo@7e6b9719]
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -耗时 : 51
2019-04-24 16:28:56 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:56 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:56 -HTTP METHOD : POST
2019-04-24 16:28:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:56 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@27d25682, com.bootdo.moneyLog.vo.WaterLogVo@792bf9bf, com.bootdo.moneyLog.vo.HeatLogVo@75bb4ec3]
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:56 -<==      Total: 1
2019-04-24 16:28:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:57 -<==      Total: 1
2019-04-24 16:28:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:57 -<==      Total: 1
2019-04-24 16:28:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:57 -<==      Total: 1
2019-04-24 16:28:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:57 -<==      Total: 1
2019-04-24 16:28:57 -耗时 : 50
2019-04-24 16:28:57 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:58 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:58 -HTTP METHOD : POST
2019-04-24 16:28:58 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:58 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@326106c, com.bootdo.moneyLog.vo.WaterLogVo@2efb3c10, com.bootdo.moneyLog.vo.HeatLogVo@67cce612]
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:58 -<==      Total: 1
2019-04-24 16:28:58 -耗时 : 51
2019-04-24 16:28:58 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:28:59 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:28:59 -HTTP METHOD : POST
2019-04-24 16:28:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:28:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@77972823, com.bootdo.moneyLog.vo.WaterLogVo@29220a79, com.bootdo.moneyLog.vo.HeatLogVo@11316cee]
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:28:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:28:59 -<==      Total: 1
2019-04-24 16:28:59 -耗时 : 158
2019-04-24 16:28:59 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:29:00 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:29:00 -HTTP METHOD : POST
2019-04-24 16:29:00 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:29:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@12370b51, com.bootdo.moneyLog.vo.WaterLogVo@1c7b5e52, com.bootdo.moneyLog.vo.HeatLogVo@4b921933]
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:00 -<==      Total: 1
2019-04-24 16:29:00 -耗时 : 198
2019-04-24 16:29:00 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:29:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:29:01 -HTTP METHOD : POST
2019-04-24 16:29:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:29:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3d4c1b5a, com.bootdo.moneyLog.vo.WaterLogVo@1883b099, com.bootdo.moneyLog.vo.HeatLogVo@5e3c6d63]
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:01 -<==      Total: 1
2019-04-24 16:29:01 -耗时 : 55
2019-04-24 16:29:01 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:29:05 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:29:05 -HTTP METHOD : POST
2019-04-24 16:29:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:29:05 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@639913bc, com.bootdo.moneyLog.vo.WaterLogVo@4e59377d, com.bootdo.moneyLog.vo.HeatLogVo@7fec52f3]
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:05 -<==      Total: 1
2019-04-24 16:29:05 -耗时 : 57
2019-04-24 16:29:05 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:29:47 -请求地址 : http://localhost:8081/index
2019-04-24 16:29:47 -HTTP METHOD : GET
2019-04-24 16:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:29:47 -参数 : [{}]
2019-04-24 16:29:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:29:47 -==> Parameters: 1(Long)
2019-04-24 16:29:47 -<==      Total: 49
2019-04-24 16:29:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:29:47 -==> Parameters: 138(Long)
2019-04-24 16:29:47 -<==      Total: 1
2019-04-24 16:29:47 -耗时 : 73
2019-04-24 16:29:47 -返回值 : index_v1
2019-04-24 16:29:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:29:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 73(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:29:47.129(Timestamp)
2019-04-24 16:29:47 -<==    Updates: 1
2019-04-24 16:29:47 -请求地址 : http://localhost:8081/main
2019-04-24 16:29:47 -HTTP METHOD : GET
2019-04-24 16:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:29:47 -参数 : []
2019-04-24 16:29:47 -耗时 : 31
2019-04-24 16:29:47 -返回值 : main
2019-04-24 16:29:47 -请求地址 : http://localhost:8081/main
2019-04-24 16:29:47 -HTTP METHOD : GET
2019-04-24 16:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:29:47 -参数 : []
2019-04-24 16:29:47 -耗时 : 2
2019-04-24 16:29:47 -返回值 : main
2019-04-24 16:29:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:29:47 -HTTP METHOD : GET
2019-04-24 16:29:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:29:47 -参数 : []
2019-04-24 16:29:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:29:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:29:47 -<==      Total: 0
2019-04-24 16:29:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:29:47 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:29:47 -<==      Total: 1
2019-04-24 16:29:47 -耗时 : 5
2019-04-24 16:29:47 -返回值 : com.bootdo.common.utils.PageUtils@5b4d18b7
2019-04-24 16:29:51 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:29:51 -HTTP METHOD : GET
2019-04-24 16:29:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:29:51 -参数 : []
2019-04-24 16:29:51 -耗时 : 0
2019-04-24 16:29:51 -返回值 : charts/tableDD
2019-04-24 16:29:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:29:55 -HTTP METHOD : GET
2019-04-24 16:29:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:29:55 -参数 : []
2019-04-24 16:29:55 -耗时 : 1
2019-04-24 16:29:55 -返回值 : system/dept/deptTree
2019-04-24 16:29:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:29:55 -HTTP METHOD : GET
2019-04-24 16:29:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:29:56 -参数 : []
2019-04-24 16:29:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:29:56 -==> Parameters: 
2019-04-24 16:29:56 -<==      Total: 3
2019-04-24 16:29:56 -耗时 : 36
2019-04-24 16:29:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:29:58 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:29:58 -HTTP METHOD : POST
2019-04-24 16:29:58 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:29:58 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@17e93ac4, com.bootdo.moneyLog.vo.WaterLogVo@75d9994c, com.bootdo.moneyLog.vo.HeatLogVo@4cb2f507]
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:58 -<==      Total: 1
2019-04-24 16:29:58 -耗时 : 57
2019-04-24 16:29:58 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:29:59 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:29:59 -HTTP METHOD : POST
2019-04-24 16:29:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:29:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@541e416d, com.bootdo.moneyLog.vo.WaterLogVo@723ccb1e, com.bootdo.moneyLog.vo.HeatLogVo@6605561f]
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:29:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:29:59 -<==      Total: 1
2019-04-24 16:29:59 -耗时 : 61
2019-04-24 16:29:59 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:33:13 -请求地址 : http://localhost:8081/index
2019-04-24 16:33:13 -HTTP METHOD : GET
2019-04-24 16:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:33:13 -参数 : [{}]
2019-04-24 16:33:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:33:13 -==> Parameters: 1(Long)
2019-04-24 16:33:13 -<==      Total: 49
2019-04-24 16:33:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:33:13 -==> Parameters: 138(Long)
2019-04-24 16:33:13 -<==      Total: 1
2019-04-24 16:33:13 -耗时 : 17
2019-04-24 16:33:13 -返回值 : index_v1
2019-04-24 16:33:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:33:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:33:13.712(Timestamp)
2019-04-24 16:33:13 -<==    Updates: 1
2019-04-24 16:33:13 -请求地址 : http://localhost:8081/main
2019-04-24 16:33:13 -HTTP METHOD : GET
2019-04-24 16:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:33:13 -参数 : []
2019-04-24 16:33:13 -耗时 : 13
2019-04-24 16:33:13 -返回值 : main
2019-04-24 16:33:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:33:14 -HTTP METHOD : GET
2019-04-24 16:33:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:33:14 -参数 : []
2019-04-24 16:33:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:33:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:33:14 -<==      Total: 0
2019-04-24 16:33:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:33:14 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:33:14 -<==      Total: 1
2019-04-24 16:33:14 -耗时 : 4
2019-04-24 16:33:14 -返回值 : com.bootdo.common.utils.PageUtils@4466ee37
2019-04-24 16:33:14 -请求地址 : http://localhost:8081/main
2019-04-24 16:33:14 -HTTP METHOD : GET
2019-04-24 16:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:33:14 -参数 : []
2019-04-24 16:33:14 -耗时 : 1
2019-04-24 16:33:14 -返回值 : main
2019-04-24 16:33:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:33:16 -HTTP METHOD : GET
2019-04-24 16:33:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:33:16 -参数 : []
2019-04-24 16:33:16 -耗时 : 0
2019-04-24 16:33:16 -返回值 : charts/tableDD
2019-04-24 16:33:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:33:21 -HTTP METHOD : GET
2019-04-24 16:33:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:33:21 -参数 : []
2019-04-24 16:33:21 -耗时 : 0
2019-04-24 16:33:21 -返回值 : system/dept/deptTree
2019-04-24 16:33:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:33:22 -HTTP METHOD : GET
2019-04-24 16:33:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:33:22 -参数 : []
2019-04-24 16:33:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:33:22 -==> Parameters: 
2019-04-24 16:33:22 -<==      Total: 3
2019-04-24 16:33:22 -耗时 : 3
2019-04-24 16:33:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:33:23 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:33:23 -HTTP METHOD : POST
2019-04-24 16:33:23 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:33:23 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@376d7324, com.bootdo.moneyLog.vo.WaterLogVo@292d29, com.bootdo.moneyLog.vo.HeatLogVo@e769f9]
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:23 -<==      Total: 1
2019-04-24 16:33:23 -耗时 : 52
2019-04-24 16:33:23 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:33:25 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:33:25 -HTTP METHOD : POST
2019-04-24 16:33:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:33:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@61ec56b7, com.bootdo.moneyLog.vo.WaterLogVo@2e6fabb3, com.bootdo.moneyLog.vo.HeatLogVo@4931807b]
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:25 -<==      Total: 1
2019-04-24 16:33:25 -耗时 : 61
2019-04-24 16:33:25 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:33:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:33:26 -HTTP METHOD : POST
2019-04-24 16:33:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:33:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7385a993, com.bootdo.moneyLog.vo.WaterLogVo@44b539f, com.bootdo.moneyLog.vo.HeatLogVo@3d8d1b67]
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:26 -<==      Total: 1
2019-04-24 16:33:26 -耗时 : 155
2019-04-24 16:33:26 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:33:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:33:28 -HTTP METHOD : POST
2019-04-24 16:33:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:33:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@456a4e5e, com.bootdo.moneyLog.vo.WaterLogVo@3bde7011, com.bootdo.moneyLog.vo.HeatLogVo@8e55f7d]
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:28 -<==      Total: 1
2019-04-24 16:33:28 -耗时 : 47
2019-04-24 16:33:28 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:33:29 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:33:29 -HTTP METHOD : POST
2019-04-24 16:33:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:33:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@644a32b4, com.bootdo.moneyLog.vo.WaterLogVo@1ac922f7, com.bootdo.moneyLog.vo.HeatLogVo@1f516a72]
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:33:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:33:29 -<==      Total: 1
2019-04-24 16:33:29 -耗时 : 52
2019-04-24 16:33:29 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:34:50 -请求地址 : http://localhost:8081/index
2019-04-24 16:34:50 -HTTP METHOD : GET
2019-04-24 16:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:34:50 -参数 : [{}]
2019-04-24 16:34:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:34:50 -==> Parameters: 1(Long)
2019-04-24 16:34:50 -<==      Total: 49
2019-04-24 16:34:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:34:50 -==> Parameters: 138(Long)
2019-04-24 16:34:50 -<==      Total: 1
2019-04-24 16:34:50 -耗时 : 17
2019-04-24 16:34:50 -返回值 : index_v1
2019-04-24 16:34:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:34:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:34:50.445(Timestamp)
2019-04-24 16:34:50 -请求地址 : http://localhost:8081/main
2019-04-24 16:34:50 -HTTP METHOD : GET
2019-04-24 16:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:34:50 -参数 : []
2019-04-24 16:34:50 -耗时 : 0
2019-04-24 16:34:50 -返回值 : main
2019-04-24 16:34:50 -<==    Updates: 1
2019-04-24 16:34:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:34:50 -HTTP METHOD : GET
2019-04-24 16:34:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:34:50 -参数 : []
2019-04-24 16:34:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:34:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:34:50 -<==      Total: 0
2019-04-24 16:34:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:34:50 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:34:50 -<==      Total: 1
2019-04-24 16:34:50 -耗时 : 4
2019-04-24 16:34:50 -返回值 : com.bootdo.common.utils.PageUtils@3f011816
2019-04-24 16:34:50 -请求地址 : http://localhost:8081/main
2019-04-24 16:34:50 -HTTP METHOD : GET
2019-04-24 16:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:34:50 -参数 : []
2019-04-24 16:34:50 -耗时 : 0
2019-04-24 16:34:50 -返回值 : main
2019-04-24 16:34:53 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 16:34:53 -HTTP METHOD : GET
2019-04-24 16:34:53 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 16:34:53 -参数 : []
2019-04-24 16:34:53 -耗时 : 1
2019-04-24 16:34:53 -返回值 : charts/countDD
2019-04-24 16:34:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:34:53 -HTTP METHOD : GET
2019-04-24 16:34:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:34:53 -参数 : [userType]
2019-04-24 16:34:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:34:53 -==> Parameters: userType(String)
2019-04-24 16:34:53 -<==      Total: 4
2019-04-24 16:34:53 -耗时 : 2
2019-04-24 16:34:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:34:54 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:34:54 -HTTP METHOD : GET
2019-04-24 16:34:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:34:54 -参数 : []
2019-04-24 16:34:54 -耗时 : 1
2019-04-24 16:34:54 -返回值 : charts/tableDD
2019-04-24 16:34:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:34:59 -HTTP METHOD : GET
2019-04-24 16:34:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:34:59 -参数 : []
2019-04-24 16:34:59 -耗时 : 0
2019-04-24 16:34:59 -返回值 : system/dept/deptTree
2019-04-24 16:34:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:34:59 -HTTP METHOD : GET
2019-04-24 16:34:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:34:59 -参数 : []
2019-04-24 16:34:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:34:59 -==> Parameters: 
2019-04-24 16:34:59 -<==      Total: 3
2019-04-24 16:34:59 -耗时 : 2
2019-04-24 16:34:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:35:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:35:01 -HTTP METHOD : GET
2019-04-24 16:35:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:35:01 -参数 : []
2019-04-24 16:35:01 -耗时 : 0
2019-04-24 16:35:01 -返回值 : system/dept/deptTree
2019-04-24 16:35:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:35:01 -HTTP METHOD : GET
2019-04-24 16:35:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:35:01 -参数 : []
2019-04-24 16:35:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:35:01 -==> Parameters: 
2019-04-24 16:35:01 -<==      Total: 3
2019-04-24 16:35:01 -耗时 : 2
2019-04-24 16:35:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:35:02 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:35:02 -HTTP METHOD : POST
2019-04-24 16:35:02 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:35:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@56fa540, com.bootdo.moneyLog.vo.WaterLogVo@66266440, com.bootdo.moneyLog.vo.HeatLogVo@3dbd274f]
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:02 -<==      Total: 1
2019-04-24 16:35:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:35:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:03 -<==      Total: 1
2019-04-24 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:03 -<==      Total: 1
2019-04-24 16:35:03 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:35:03 -<==      Total: 1
2019-04-24 16:35:03 -耗时 : 112
2019-04-24 16:35:03 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:35:39 -请求地址 : http://localhost:8081/login;JSESSIONID=db29644a-d747-4a14-877b-224ca3453f00
2019-04-24 16:35:39 -HTTP METHOD : GET
2019-04-24 16:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 16:35:39 -参数 : [{}]
2019-04-24 16:35:39 -耗时 : 1
2019-04-24 16:35:39 -返回值 : login
2019-04-24 16:35:39 -请求地址 : http://localhost:8081/login
2019-04-24 16:35:39 -HTTP METHOD : GET
2019-04-24 16:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 16:35:39 -参数 : [{}]
2019-04-24 16:35:39 -耗时 : 1
2019-04-24 16:35:39 -返回值 : login
2019-04-24 16:35:39 -请求地址 : http://localhost:8081/getVerify
2019-04-24 16:35:39 -HTTP METHOD : GET
2019-04-24 16:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 16:35:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b995ab0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b3799f6]
2019-04-24 16:35:39 -0330
2019-04-24 16:35:39 -耗时 : 12
2019-04-24 16:35:39 -返回值 : null
2019-04-24 16:35:39 -请求地址 : http://localhost:8081/login
2019-04-24 16:35:39 -HTTP METHOD : GET
2019-04-24 16:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 16:35:39 -参数 : [{}]
2019-04-24 16:35:39 -耗时 : 0
2019-04-24 16:35:39 -返回值 : login
2019-04-24 16:35:46 -请求地址 : http://localhost:8081/login
2019-04-24 16:35:46 -HTTP METHOD : POST
2019-04-24 16:35:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 16:35:46 -参数 : [admin, 111111, 0330, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3310a2d6]
2019-04-24 16:35:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 16:35:46 -==> Parameters: admin(String)
2019-04-24 16:35:46 -<==      Total: 1
2019-04-24 16:35:46 -耗时 : 92
2019-04-24 16:35:46 -返回值 : {msg=操作成功, code=0}
2019-04-24 16:35:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:35:47 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 16:35:46.994(Timestamp)
2019-04-24 16:35:47 -请求地址 : http://localhost:8081/index
2019-04-24 16:35:47 -HTTP METHOD : GET
2019-04-24 16:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:35:47 -参数 : [{}]
2019-04-24 16:35:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:35:47 -==> Parameters: 1(Long)
2019-04-24 16:35:47 -<==      Total: 49
2019-04-24 16:35:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:35:47 -==> Parameters: 138(Long)
2019-04-24 16:35:47 -<==      Total: 1
2019-04-24 16:35:47 -耗时 : 17
2019-04-24 16:35:47 -返回值 : index_v1
2019-04-24 16:35:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:35:47 -<==    Updates: 1
2019-04-24 16:35:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:35:47.088(Timestamp)
2019-04-24 16:35:47 -<==    Updates: 1
2019-04-24 16:35:47 -请求地址 : http://localhost:8081/main
2019-04-24 16:35:47 -HTTP METHOD : GET
2019-04-24 16:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:35:47 -参数 : []
2019-04-24 16:35:47 -耗时 : 0
2019-04-24 16:35:47 -返回值 : main
2019-04-24 16:35:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:35:48 -HTTP METHOD : GET
2019-04-24 16:35:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:35:48 -参数 : []
2019-04-24 16:35:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:35:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:35:48 -<==      Total: 0
2019-04-24 16:35:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:35:48 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:35:48 -<==      Total: 1
2019-04-24 16:35:48 -耗时 : 4
2019-04-24 16:35:48 -返回值 : com.bootdo.common.utils.PageUtils@265f3b0d
2019-04-24 16:35:48 -请求地址 : http://localhost:8081/main
2019-04-24 16:35:48 -HTTP METHOD : GET
2019-04-24 16:35:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:35:48 -参数 : []
2019-04-24 16:35:48 -耗时 : 0
2019-04-24 16:35:48 -返回值 : main
2019-04-24 16:35:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:35:53 -==> Parameters: 1(Long)
2019-04-24 16:35:53 -<==      Total: 93
2019-04-24 16:35:53 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:35:53 -HTTP METHOD : GET
2019-04-24 16:35:53 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:35:53 -参数 : []
2019-04-24 16:35:53 -耗时 : 0
2019-04-24 16:35:53 -返回值 : charts/tableDD
2019-04-24 16:35:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:35:58 -HTTP METHOD : GET
2019-04-24 16:35:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:35:58 -参数 : []
2019-04-24 16:35:58 -耗时 : 0
2019-04-24 16:35:58 -返回值 : system/dept/deptTree
2019-04-24 16:35:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:35:59 -HTTP METHOD : GET
2019-04-24 16:35:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:35:59 -参数 : []
2019-04-24 16:35:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:35:59 -==> Parameters: 
2019-04-24 16:35:59 -<==      Total: 3
2019-04-24 16:35:59 -耗时 : 3
2019-04-24 16:35:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:36:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:36:01 -HTTP METHOD : POST
2019-04-24 16:36:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:36:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@64d951fc, com.bootdo.moneyLog.vo.WaterLogVo@4c8e85d7, com.bootdo.moneyLog.vo.HeatLogVo@21dfacbe]
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:36:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:36:01 -<==      Total: 1
2019-04-24 16:36:01 -耗时 : 264
2019-04-24 16:36:01 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:36:57 -请求地址 : http://localhost:8081/index
2019-04-24 16:36:57 -HTTP METHOD : GET
2019-04-24 16:36:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:36:57 -参数 : [{}]
2019-04-24 16:36:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:36:57 -==> Parameters: 1(Long)
2019-04-24 16:36:57 -<==      Total: 49
2019-04-24 16:36:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:36:57 -==> Parameters: 138(Long)
2019-04-24 16:36:57 -<==      Total: 1
2019-04-24 16:36:57 -耗时 : 72
2019-04-24 16:36:57 -返回值 : index_v1
2019-04-24 16:36:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:36:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 72(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:36:57.932(Timestamp)
2019-04-24 16:36:58 -<==    Updates: 1
2019-04-24 16:36:58 -请求地址 : http://localhost:8081/main
2019-04-24 16:36:58 -HTTP METHOD : GET
2019-04-24 16:36:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:36:58 -参数 : []
2019-04-24 16:36:58 -耗时 : 1
2019-04-24 16:36:58 -返回值 : main
2019-04-24 16:36:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:36:58 -HTTP METHOD : GET
2019-04-24 16:36:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:36:58 -参数 : []
2019-04-24 16:36:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:36:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:36:58 -<==      Total: 0
2019-04-24 16:36:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:36:58 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:36:58 -<==      Total: 1
2019-04-24 16:36:58 -耗时 : 56
2019-04-24 16:36:58 -返回值 : com.bootdo.common.utils.PageUtils@7c4e2675
2019-04-24 16:36:58 -请求地址 : http://localhost:8081/main
2019-04-24 16:36:58 -HTTP METHOD : GET
2019-04-24 16:36:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:36:58 -参数 : []
2019-04-24 16:36:58 -耗时 : 0
2019-04-24 16:36:58 -返回值 : main
2019-04-24 16:37:00 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:37:00 -HTTP METHOD : GET
2019-04-24 16:37:00 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:37:00 -参数 : []
2019-04-24 16:37:00 -耗时 : 0
2019-04-24 16:37:00 -返回值 : charts/tableDD
2019-04-24 16:37:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:37:04 -HTTP METHOD : GET
2019-04-24 16:37:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:37:04 -参数 : []
2019-04-24 16:37:04 -耗时 : 0
2019-04-24 16:37:04 -返回值 : system/dept/deptTree
2019-04-24 16:37:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:37:05 -HTTP METHOD : GET
2019-04-24 16:37:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:37:05 -参数 : []
2019-04-24 16:37:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:37:05 -==> Parameters: 
2019-04-24 16:37:05 -<==      Total: 3
2019-04-24 16:37:05 -耗时 : 3
2019-04-24 16:37:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:37:07 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:37:07 -HTTP METHOD : POST
2019-04-24 16:37:07 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:37:07 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@14ea7c03, com.bootdo.moneyLog.vo.WaterLogVo@176ab9d9, com.bootdo.moneyLog.vo.HeatLogVo@78b14aab]
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:37:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:37:07 -<==      Total: 1
2019-04-24 16:37:07 -耗时 : 53
2019-04-24 16:37:07 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:38:13 -请求地址 : http://localhost:8081/index
2019-04-24 16:38:13 -HTTP METHOD : GET
2019-04-24 16:38:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:38:13 -参数 : [{}]
2019-04-24 16:38:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:38:13 -==> Parameters: 1(Long)
2019-04-24 16:38:13 -<==      Total: 49
2019-04-24 16:38:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:38:13 -==> Parameters: 138(Long)
2019-04-24 16:38:13 -<==      Total: 1
2019-04-24 16:38:13 -耗时 : 13
2019-04-24 16:38:13 -返回值 : index_v1
2019-04-24 16:38:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:38:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:38:13.361(Timestamp)
2019-04-24 16:38:13 -<==    Updates: 1
2019-04-24 16:38:13 -请求地址 : http://localhost:8081/main
2019-04-24 16:38:13 -HTTP METHOD : GET
2019-04-24 16:38:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:38:13 -参数 : []
2019-04-24 16:38:13 -耗时 : 0
2019-04-24 16:38:13 -返回值 : main
2019-04-24 16:38:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:38:14 -HTTP METHOD : GET
2019-04-24 16:38:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:38:14 -参数 : []
2019-04-24 16:38:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:38:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:38:14 -<==      Total: 0
2019-04-24 16:38:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:38:14 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:38:14 -<==      Total: 1
2019-04-24 16:38:14 -耗时 : 16
2019-04-24 16:38:14 -返回值 : com.bootdo.common.utils.PageUtils@4bc88df
2019-04-24 16:38:14 -请求地址 : http://localhost:8081/main
2019-04-24 16:38:14 -HTTP METHOD : GET
2019-04-24 16:38:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:38:14 -参数 : []
2019-04-24 16:38:14 -耗时 : 0
2019-04-24 16:38:14 -返回值 : main
2019-04-24 16:38:18 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:38:18 -HTTP METHOD : GET
2019-04-24 16:38:18 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:38:18 -参数 : []
2019-04-24 16:38:18 -耗时 : 0
2019-04-24 16:38:18 -返回值 : charts/tableDD
2019-04-24 16:38:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:38:24 -HTTP METHOD : GET
2019-04-24 16:38:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:38:24 -参数 : []
2019-04-24 16:38:24 -耗时 : 0
2019-04-24 16:38:24 -返回值 : system/dept/deptTree
2019-04-24 16:38:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:38:24 -HTTP METHOD : GET
2019-04-24 16:38:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:38:24 -参数 : []
2019-04-24 16:38:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:38:24 -==> Parameters: 
2019-04-24 16:38:24 -<==      Total: 3
2019-04-24 16:38:24 -耗时 : 2
2019-04-24 16:38:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:38:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:38:26 -HTTP METHOD : POST
2019-04-24 16:38:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:38:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@537edf63, com.bootdo.moneyLog.vo.WaterLogVo@140f5661, com.bootdo.moneyLog.vo.HeatLogVo@2fd8a73a]
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:38:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:38:26 -<==      Total: 1
2019-04-24 16:38:26 -耗时 : 47
2019-04-24 16:38:26 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:40:12 -请求地址 : http://localhost:8081/index
2019-04-24 16:40:12 -HTTP METHOD : GET
2019-04-24 16:40:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:40:12 -参数 : [{}]
2019-04-24 16:40:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:40:12 -==> Parameters: 1(Long)
2019-04-24 16:40:12 -<==      Total: 49
2019-04-24 16:40:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:40:12 -==> Parameters: 138(Long)
2019-04-24 16:40:12 -<==      Total: 1
2019-04-24 16:40:12 -耗时 : 14
2019-04-24 16:40:12 -返回值 : index_v1
2019-04-24 16:40:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:40:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:40:12.79(Timestamp)
2019-04-24 16:40:12 -<==    Updates: 1
2019-04-24 16:40:12 -请求地址 : http://localhost:8081/main
2019-04-24 16:40:12 -HTTP METHOD : GET
2019-04-24 16:40:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:40:12 -参数 : []
2019-04-24 16:40:12 -耗时 : 0
2019-04-24 16:40:12 -返回值 : main
2019-04-24 16:40:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:40:13 -HTTP METHOD : GET
2019-04-24 16:40:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:40:13 -参数 : []
2019-04-24 16:40:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:40:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:40:13 -<==      Total: 0
2019-04-24 16:40:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:40:13 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:40:13 -<==      Total: 1
2019-04-24 16:40:13 -耗时 : 4
2019-04-24 16:40:13 -返回值 : com.bootdo.common.utils.PageUtils@22c95a0a
2019-04-24 16:40:13 -请求地址 : http://localhost:8081/main
2019-04-24 16:40:13 -HTTP METHOD : GET
2019-04-24 16:40:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:40:13 -参数 : []
2019-04-24 16:40:13 -耗时 : 1
2019-04-24 16:40:13 -返回值 : main
2019-04-24 16:40:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:40:16 -HTTP METHOD : GET
2019-04-24 16:40:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:40:16 -参数 : []
2019-04-24 16:40:16 -耗时 : 0
2019-04-24 16:40:16 -返回值 : charts/tableDD
2019-04-24 16:40:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:40:23 -HTTP METHOD : GET
2019-04-24 16:40:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:40:23 -参数 : []
2019-04-24 16:40:23 -耗时 : 1
2019-04-24 16:40:23 -返回值 : system/dept/deptTree
2019-04-24 16:40:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:40:23 -HTTP METHOD : GET
2019-04-24 16:40:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:40:23 -参数 : []
2019-04-24 16:40:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:40:23 -==> Parameters: 
2019-04-24 16:40:23 -<==      Total: 3
2019-04-24 16:40:23 -耗时 : 3
2019-04-24 16:40:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:40:25 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:40:25 -HTTP METHOD : POST
2019-04-24 16:40:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:40:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5502aa2b, com.bootdo.moneyLog.vo.WaterLogVo@3953fca6, com.bootdo.moneyLog.vo.HeatLogVo@33dc1204]
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:25 -<==      Total: 1
2019-04-24 16:40:25 -耗时 : 50
2019-04-24 16:40:25 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:40:27 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 16:40:27 -HTTP METHOD : POST
2019-04-24 16:40:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 16:40:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7777b0f0, com.bootdo.moneyLog.vo.WaterLogVo@17be3e1e, com.bootdo.moneyLog.vo.HeatLogVo@2ac75b4f]
2019-04-24 16:40:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:27 -<==      Total: 1
2019-04-24 16:40:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 16:40:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 16:40:28 -<==      Total: 1
2019-04-24 16:40:28 -耗时 : 76
2019-04-24 16:40:28 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 16:43:00 -请求地址 : http://localhost:8081/print/print
2019-04-24 16:43:00 -HTTP METHOD : GET
2019-04-24 16:43:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-24 16:43:00 -参数 : []
2019-04-24 16:43:00 -耗时 : 1
2019-04-24 16:43:00 -返回值 : print/print/print
2019-04-24 16:43:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 16:43:01 -HTTP METHOD : GET
2019-04-24 16:43:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 16:43:01 -参数 : [userType]
2019-04-24 16:43:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 16:43:01 -==> Parameters: userType(String)
2019-04-24 16:43:01 -<==      Total: 4
2019-04-24 16:43:01 -耗时 : 4
2019-04-24 16:43:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 16:43:01 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:01 -HTTP METHOD : GET
2019-04-24 16:43:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:01 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:01 -<==      Total: 6
2019-04-24 16:43:01 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:01 -==> Parameters: 
2019-04-24 16:43:01 -<==      Total: 1
2019-04-24 16:43:01 -耗时 : 36
2019-04-24 16:43:01 -返回值 : com.bootdo.common.utils.PageUtils@d134468
2019-04-24 16:43:06 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:06 -HTTP METHOD : GET
2019-04-24 16:43:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:06 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:06 -<==      Total: 6
2019-04-24 16:43:06 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:06 -==> Parameters: 
2019-04-24 16:43:06 -<==      Total: 1
2019-04-24 16:43:06 -耗时 : 233
2019-04-24 16:43:06 -返回值 : com.bootdo.common.utils.PageUtils@525e25
2019-04-24 16:43:07 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:07 -HTTP METHOD : GET
2019-04-24 16:43:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:07 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:07 -<==      Total: 6
2019-04-24 16:43:07 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:07 -==> Parameters: 
2019-04-24 16:43:07 -<==      Total: 1
2019-04-24 16:43:07 -耗时 : 4
2019-04-24 16:43:07 -返回值 : com.bootdo.common.utils.PageUtils@694a59a
2019-04-24 16:43:08 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:08 -HTTP METHOD : GET
2019-04-24 16:43:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:08 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:08 -<==      Total: 6
2019-04-24 16:43:08 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:08 -==> Parameters: 
2019-04-24 16:43:08 -<==      Total: 1
2019-04-24 16:43:08 -耗时 : 4
2019-04-24 16:43:08 -返回值 : com.bootdo.common.utils.PageUtils@6688f53f
2019-04-24 16:43:08 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:08 -HTTP METHOD : GET
2019-04-24 16:43:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:08 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:08 -<==      Total: 6
2019-04-24 16:43:08 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:08 -==> Parameters: 
2019-04-24 16:43:08 -<==      Total: 1
2019-04-24 16:43:08 -耗时 : 5
2019-04-24 16:43:08 -返回值 : com.bootdo.common.utils.PageUtils@6af3e9c6
2019-04-24 16:43:09 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:09 -HTTP METHOD : GET
2019-04-24 16:43:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:09 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:09 -<==      Total: 6
2019-04-24 16:43:09 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:09 -==> Parameters: 
2019-04-24 16:43:09 -<==      Total: 1
2019-04-24 16:43:09 -耗时 : 4
2019-04-24 16:43:09 -返回值 : com.bootdo.common.utils.PageUtils@4e9c6790
2019-04-24 16:43:09 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:09 -HTTP METHOD : GET
2019-04-24 16:43:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:09 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:09 -<==      Total: 6
2019-04-24 16:43:09 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:09 -==> Parameters: 
2019-04-24 16:43:09 -<==      Total: 1
2019-04-24 16:43:09 -耗时 : 71
2019-04-24 16:43:09 -返回值 : com.bootdo.common.utils.PageUtils@2aced526
2019-04-24 16:43:10 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:10 -HTTP METHOD : GET
2019-04-24 16:43:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:10 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:10 -<==      Total: 6
2019-04-24 16:43:10 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:10 -==> Parameters: 
2019-04-24 16:43:10 -<==      Total: 1
2019-04-24 16:43:10 -耗时 : 26
2019-04-24 16:43:10 -返回值 : com.bootdo.common.utils.PageUtils@2dfc5dab
2019-04-24 16:43:10 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:43:10 -HTTP METHOD : GET
2019-04-24 16:43:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:43:10 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:43:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:43:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:43:10 -<==      Total: 6
2019-04-24 16:43:10 -==>  Preparing: select count(*) from print 
2019-04-24 16:43:10 -==> Parameters: 
2019-04-24 16:43:10 -<==      Total: 1
2019-04-24 16:43:10 -耗时 : 5
2019-04-24 16:43:10 -返回值 : com.bootdo.common.utils.PageUtils@683792a6
2019-04-24 16:44:03 -请求地址 : http://localhost:8081/print/print/remove
2019-04-24 16:44:03 -HTTP METHOD : POST
2019-04-24 16:44:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.remove
2019-04-24 16:44:03 -参数 : [5]
2019-04-24 16:44:03 -==>  Preparing: delete from print where id = ? 
2019-04-24 16:44:03 -==> Parameters: 5(Long)
2019-04-24 16:44:03 -<==    Updates: 1
2019-04-24 16:44:03 -耗时 : 232
2019-04-24 16:44:03 -返回值 : {msg=操作成功, code=0}
2019-04-24 16:44:03 -请求地址 : http://localhost:8081/print/print/list
2019-04-24 16:44:03 -HTTP METHOD : GET
2019-04-24 16:44:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-24 16:44:03 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-24 16:44:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-24 16:44:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-24 16:44:04 -<==      Total: 5
2019-04-24 16:44:04 -==>  Preparing: select count(*) from print 
2019-04-24 16:44:04 -==> Parameters: 
2019-04-24 16:44:04 -<==      Total: 1
2019-04-24 16:44:04 -耗时 : 18
2019-04-24 16:44:04 -返回值 : com.bootdo.common.utils.PageUtils@458b9c5e
2019-04-24 16:44:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:44:21 -HTTP METHOD : GET
2019-04-24 16:44:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:44:21 -参数 : []
2019-04-24 16:44:21 -耗时 : 1
2019-04-24 16:44:21 -返回值 : system/dept/deptTree
2019-04-24 16:44:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:44:21 -HTTP METHOD : GET
2019-04-24 16:44:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:44:21 -参数 : []
2019-04-24 16:44:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:44:21 -==> Parameters: 
2019-04-24 16:44:21 -<==      Total: 3
2019-04-24 16:44:21 -耗时 : 2
2019-04-24 16:44:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:44:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 16:44:25 -HTTP METHOD : GET
2019-04-24 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 16:44:25 -参数 : []
2019-04-24 16:44:25 -耗时 : 1
2019-04-24 16:44:25 -返回值 : system/dept/deptTree
2019-04-24 16:44:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 16:44:25 -HTTP METHOD : GET
2019-04-24 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 16:44:25 -参数 : []
2019-04-24 16:44:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 16:44:25 -==> Parameters: 
2019-04-24 16:44:25 -<==      Total: 3
2019-04-24 16:44:25 -耗时 : 2
2019-04-24 16:44:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 16:44:28 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-24 16:44:28 -HTTP METHOD : GET
2019-04-24 16:44:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-24 16:44:28 -参数 : [com.bootdo.print.vo.PrintVo@58422ee, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37844753, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c80e9ed]
2019-04-24 16:44:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-24 16:44:28 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-24 16:44:28 -<==      Total: 1
2019-04-24 16:44:28 -耗时 : 121
2019-04-24 16:44:28 -返回值 : null
2019-04-24 16:47:19 -请求地址 : http://localhost:8081/index
2019-04-24 16:47:19 -HTTP METHOD : GET
2019-04-24 16:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:47:19 -参数 : [{}]
2019-04-24 16:47:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:47:19 -==> Parameters: 1(Long)
2019-04-24 16:47:19 -<==      Total: 49
2019-04-24 16:47:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:47:19 -==> Parameters: 138(Long)
2019-04-24 16:47:19 -<==      Total: 1
2019-04-24 16:47:19 -耗时 : 17
2019-04-24 16:47:19 -返回值 : index_v1
2019-04-24 16:47:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:47:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:47:19.254(Timestamp)
2019-04-24 16:47:19 -<==    Updates: 1
2019-04-24 16:47:19 -请求地址 : http://localhost:8081/main
2019-04-24 16:47:19 -HTTP METHOD : GET
2019-04-24 16:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:47:19 -参数 : []
2019-04-24 16:47:19 -耗时 : 0
2019-04-24 16:47:19 -返回值 : main
2019-04-24 16:47:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:47:19 -HTTP METHOD : GET
2019-04-24 16:47:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:47:19 -参数 : []
2019-04-24 16:47:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:47:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:47:19 -<==      Total: 0
2019-04-24 16:47:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:47:19 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:47:19 -<==      Total: 1
2019-04-24 16:47:19 -耗时 : 4
2019-04-24 16:47:19 -返回值 : com.bootdo.common.utils.PageUtils@790fe058
2019-04-24 16:47:19 -请求地址 : http://localhost:8081/main
2019-04-24 16:47:19 -HTTP METHOD : GET
2019-04-24 16:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:47:19 -参数 : []
2019-04-24 16:47:19 -耗时 : 1
2019-04-24 16:47:19 -返回值 : main
2019-04-24 16:47:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 16:47:24 -==> Parameters: 1(Long)
2019-04-24 16:47:24 -<==      Total: 93
2019-04-24 16:47:24 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:47:24 -HTTP METHOD : GET
2019-04-24 16:47:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:47:24 -参数 : []
2019-04-24 16:47:24 -耗时 : 1
2019-04-24 16:47:24 -返回值 : charts/tableDD
2019-04-24 16:48:57 -请求地址 : http://localhost:8081/index
2019-04-24 16:48:57 -HTTP METHOD : GET
2019-04-24 16:48:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:48:57 -参数 : [{}]
2019-04-24 16:48:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:48:57 -==> Parameters: 1(Long)
2019-04-24 16:48:57 -<==      Total: 49
2019-04-24 16:48:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:48:57 -==> Parameters: 138(Long)
2019-04-24 16:48:57 -<==      Total: 1
2019-04-24 16:48:57 -耗时 : 16
2019-04-24 16:48:57 -返回值 : index_v1
2019-04-24 16:48:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:48:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:48:57.924(Timestamp)
2019-04-24 16:48:58 -<==    Updates: 1
2019-04-24 16:48:58 -请求地址 : http://localhost:8081/main
2019-04-24 16:48:58 -HTTP METHOD : GET
2019-04-24 16:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:48:58 -参数 : []
2019-04-24 16:48:58 -耗时 : 1
2019-04-24 16:48:58 -返回值 : main
2019-04-24 16:48:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:48:58 -HTTP METHOD : GET
2019-04-24 16:48:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:48:58 -参数 : []
2019-04-24 16:48:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:48:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:48:58 -<==      Total: 0
2019-04-24 16:48:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:48:58 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:48:58 -<==      Total: 1
2019-04-24 16:48:58 -耗时 : 4
2019-04-24 16:48:58 -返回值 : com.bootdo.common.utils.PageUtils@28f0998a
2019-04-24 16:48:58 -请求地址 : http://localhost:8081/main
2019-04-24 16:48:58 -HTTP METHOD : GET
2019-04-24 16:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:48:58 -参数 : []
2019-04-24 16:48:58 -耗时 : 1
2019-04-24 16:48:58 -返回值 : main
2019-04-24 16:49:16 -请求地址 : http://localhost:8081/index
2019-04-24 16:49:16 -HTTP METHOD : GET
2019-04-24 16:49:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 16:49:16 -参数 : [{}]
2019-04-24 16:49:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 16:49:16 -==> Parameters: 1(Long)
2019-04-24 16:49:16 -<==      Total: 49
2019-04-24 16:49:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 16:49:16 -==> Parameters: 138(Long)
2019-04-24 16:49:16 -<==      Total: 1
2019-04-24 16:49:16 -耗时 : 14
2019-04-24 16:49:16 -返回值 : index_v1
2019-04-24 16:49:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 16:49:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 16:49:16.043(Timestamp)
2019-04-24 16:49:16 -<==    Updates: 1
2019-04-24 16:49:16 -请求地址 : http://localhost:8081/main
2019-04-24 16:49:16 -HTTP METHOD : GET
2019-04-24 16:49:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:49:16 -参数 : []
2019-04-24 16:49:16 -耗时 : 5
2019-04-24 16:49:16 -返回值 : main
2019-04-24 16:49:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 16:49:16 -HTTP METHOD : GET
2019-04-24 16:49:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 16:49:16 -参数 : []
2019-04-24 16:49:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 16:49:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 16:49:16 -<==      Total: 0
2019-04-24 16:49:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 16:49:16 -==> Parameters: 1(Long), 0(String)
2019-04-24 16:49:16 -<==      Total: 1
2019-04-24 16:49:16 -耗时 : 3
2019-04-24 16:49:16 -返回值 : com.bootdo.common.utils.PageUtils@6d11f289
2019-04-24 16:49:16 -请求地址 : http://localhost:8081/main
2019-04-24 16:49:16 -HTTP METHOD : GET
2019-04-24 16:49:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 16:49:16 -参数 : []
2019-04-24 16:49:16 -耗时 : 0
2019-04-24 16:49:16 -返回值 : main
2019-04-24 16:49:21 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 16:49:21 -HTTP METHOD : GET
2019-04-24 16:49:21 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 16:49:21 -参数 : []
2019-04-24 16:49:21 -耗时 : 1
2019-04-24 16:49:21 -返回值 : charts/tableDD
2019-04-24 16:50:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 24 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(24)-CONNECTED(24)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 285], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 47], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1267]
2019-04-24 17:58:09 -Starting BootdoApplication on ZJZL-20180906VX with PID 2408 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 17:58:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 17:58:09 -The following profiles are active: dev
2019-04-24 17:58:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 17:58:09 CST 2019]; root of context hierarchy
2019-04-24 17:58:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 17:58:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 17:58:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 17:58:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 17:58:20 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 17:58:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 17:58:20 -Starting service [Tomcat]
2019-04-24 17:58:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 17:58:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 17:58:21 -Initializing Spring embedded WebApplicationContext
2019-04-24 17:58:21 -Root WebApplicationContext: initialization completed in 11395 ms
2019-04-24 17:58:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 17:58:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 17:58:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 17:58:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 17:58:21 -Filter xssFilter was not registered (disabled)
2019-04-24 17:58:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 17:58:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 17:58:21 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 17:58:21 -Servlet dispatcherServlet mapped to [/]
2019-04-24 17:58:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 17:58:09 CST 2019]; root of context hierarchy
2019-04-24 17:58:26 -Using default implementation for ThreadExecutor
2019-04-24 17:58:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 17:58:26 -Quartz Scheduler v.2.2.1 created.
2019-04-24 17:58:26 -RAMJobStore initialized.
2019-04-24 17:58:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 17:58:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 17:58:26 -Quartz scheduler version: 2.2.1
2019-04-24 17:58:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-24 17:58:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 17:58:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 17:58:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 17:58:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 17:58:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 17:58:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 17:58:30 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 17:58:30 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 17:58:30 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 17:58:30 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 17:58:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 17:58:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 17:58:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 17:58:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 17:58:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 17:58:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 17:58:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 17:58:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 17:58:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 17:58:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 17:58:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 17:58:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 17:58:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 17:58:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 17:58:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 17:58:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 17:58:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 17:58:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 17:58:30 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 17:58:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 17:58:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 17:58:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 17:58:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 17:58:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 17:58:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 17:58:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 17:58:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 17:58:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 17:58:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 17:58:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 17:58:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 17:58:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 17:58:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 17:58:30 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 17:58:30 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 17:58:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 17:58:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 17:58:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 17:58:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 17:58:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 17:58:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 17:58:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 17:58:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 17:58:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 17:58:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 17:58:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 17:58:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 17:58:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 17:58:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 17:58:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 17:58:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 17:58:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 17:58:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 17:58:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 17:58:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 17:58:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 17:58:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 17:58:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 17:58:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 17:58:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 17:58:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 17:58:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 17:58:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 17:58:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 17:58:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 17:58:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 17:58:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 17:58:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 17:58:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 17:58:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 17:58:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 17:58:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 17:58:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 17:58:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 17:58:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 17:58:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 17:58:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 17:58:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 17:58:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 17:58:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 17:58:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 17:58:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 17:58:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 17:58:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 17:58:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 17:58:09 CST 2019]; root of context hierarchy
2019-04-24 17:58:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 17:58:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 17:58:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 17:58:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 17:58:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 17:58:35 -Registering beans for JMX exposure on startup
2019-04-24 17:58:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 17:58:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 17:58:35 -Starting beans in phase 2147483647
2019-04-24 17:58:35 -Context refreshed
2019-04-24 17:58:35 -Found 1 custom documentation plugin(s)
2019-04-24 17:58:35 -Scanning for api listing references
2019-04-24 17:58:36 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_1
2019-04-24 17:58:36 -Generating unique operation named: addUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: editUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: listUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_2
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_3
2019-04-24 17:58:36 -Generating unique operation named: saveUsingPOST_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPOST_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPUT_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 17:58:36 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 17:58:36 -Generating unique operation named: addUsingGET_2
2019-04-24 17:58:36 -Generating unique operation named: editUsingGET_2
2019-04-24 17:58:36 -Generating unique operation named: listUsingGET_2
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_4
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_5
2019-04-24 17:58:36 -Generating unique operation named: saveUsingPOST_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPOST_2
2019-04-24 17:58:36 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: addUsingGET_3
2019-04-24 17:58:36 -Generating unique operation named: editUsingGET_3
2019-04-24 17:58:36 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 17:58:36 -Generating unique operation named: listUsingGET_3
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_6
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_7
2019-04-24 17:58:36 -Generating unique operation named: saveUsingPOST_3
2019-04-24 17:58:36 -Generating unique operation named: updateUsingGET_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPOST_3
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPUT_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 17:58:36 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 17:58:36 -Generating unique operation named: addUsingGET_4
2019-04-24 17:58:36 -Generating unique operation named: editUsingGET_4
2019-04-24 17:58:36 -Generating unique operation named: listUsingGET_4
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_8
2019-04-24 17:58:36 -Generating unique operation named: removeUsingPOST_9
2019-04-24 17:58:36 -Generating unique operation named: saveUsingPOST_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingGET_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPUT_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 17:58:37 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 17:58:37 -Generating unique operation named: ElecUsingGET_1
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_5
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_5
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_5
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_10
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_11
2019-04-24 17:58:37 -Generating unique operation named: saveUsingPOST_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingGET_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPUT_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 17:58:37 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_6
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_6
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_6
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_7
2019-04-24 17:58:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_7
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_12
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_13
2019-04-24 17:58:37 -Generating unique operation named: saveUsingPOST_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingGET_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPUT_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 17:58:37 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 17:58:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_7
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_8
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_8
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_14
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_15
2019-04-24 17:58:37 -Generating unique operation named: saveUsingPOST_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingGET_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_8
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPUT_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 17:58:37 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_8
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_9
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_9
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_16
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_17
2019-04-24 17:58:37 -Generating unique operation named: saveUsingPOST_8
2019-04-24 17:58:37 -Generating unique operation named: updateUsingGET_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_9
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPUT_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 17:58:37 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_9
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_10
2019-04-24 17:58:37 -Generating unique operation named: infoUsingGET_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingPOST_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingPUT_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 17:58:37 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_10
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_18
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_19
2019-04-24 17:58:37 -Generating unique operation named: saveUsingPOST_9
2019-04-24 17:58:37 -Generating unique operation named: updateUsingPOST_10
2019-04-24 17:58:37 -Generating unique operation named: listUsingGET_11
2019-04-24 17:58:37 -Generating unique operation named: removeUsingPOST_20
2019-04-24 17:58:37 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 17:58:37 -Generating unique operation named: addUsingGET_10
2019-04-24 17:58:37 -Generating unique operation named: editUsingGET_11
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_12
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_21
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_10
2019-04-24 17:58:38 -Generating unique operation named: treeUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: treeUsingGET_2
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_11
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_11
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_12
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_13
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_22
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_23
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingGET_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPUT_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 17:58:38 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_12
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_13
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_14
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_24
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_25
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingGET_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_13
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPUT_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 17:58:38 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_13
2019-04-24 17:58:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_14
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_15
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_13
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_14
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_14
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_16
2019-04-24 17:58:38 -Generating unique operation named: listUsingHEAD_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingPOST_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingPUT_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingPATCH_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingDELETE_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingTRACE_1
2019-04-24 17:58:38 -Generating unique operation named: countDDUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 17:58:38 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 17:58:38 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 17:58:38 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_14
2019-04-24 17:58:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_15
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_17
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_26
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_15
2019-04-24 17:58:38 -Generating unique operation named: treeUsingGET_3
2019-04-24 17:58:38 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_15
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_15
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_16
2019-04-24 17:58:38 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_18
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_27
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_28
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_16
2019-04-24 17:58:38 -Generating unique operation named: updateUsingGET_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_16
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPUT_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 17:58:38 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 17:58:38 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_16
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_17
2019-04-24 17:58:38 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_19
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_29
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_30
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_17
2019-04-24 17:58:38 -Generating unique operation named: updateUsingGET_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_17
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPUT_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 17:58:38 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 17:58:38 -Generating unique operation named: addUsingGET_17
2019-04-24 17:58:38 -Generating unique operation named: editUsingGET_18
2019-04-24 17:58:38 -Generating unique operation named: listUsingGET_20
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_31
2019-04-24 17:58:38 -Generating unique operation named: removeUsingPOST_32
2019-04-24 17:58:38 -Generating unique operation named: saveUsingPOST_18
2019-04-24 17:58:38 -Generating unique operation named: updateUsingGET_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPOST_18
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPUT_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 17:58:38 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 17:58:39 -Starting Quartz Scheduler now
2019-04-24 17:58:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 17:58:39 -Starting...
2019-04-24 17:58:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 17:58:39 -Started.
2019-04-24 17:58:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 17:58:39 -Using a shared selector for servlet write/read
2019-04-24 17:58:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 17:58:39 -Started BootdoApplication in 30.73 seconds (JVM running for 31.527)
2019-04-24 17:58:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 17:58:39 -==> Parameters: 
2019-04-24 17:58:39 -<==      Total: 1
2019-04-24 17:59:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 17:59:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 17:59:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
2019-04-24 17:59:09 -Enabling session validation scheduler...
2019-04-24 17:59:09 -请求地址 : http://localhost:8081/login;JSESSIONID=7219832f-2f01-4dd4-83b0-8ee01a83646a
2019-04-24 17:59:09 -HTTP METHOD : GET
2019-04-24 17:59:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 17:59:09 -参数 : [{}]
2019-04-24 17:59:09 -耗时 : 2
2019-04-24 17:59:09 -返回值 : login
2019-04-24 17:59:11 -请求地址 : http://localhost:8081/getVerify
2019-04-24 17:59:11 -HTTP METHOD : GET
2019-04-24 17:59:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 17:59:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@22d02619, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c17dc33]
2019-04-24 17:59:16 -5675
2019-04-24 17:59:16 -耗时 : 4980
2019-04-24 17:59:16 -返回值 : null
2019-04-24 17:59:20 -请求地址 : http://localhost:8081/login
2019-04-24 17:59:20 -HTTP METHOD : POST
2019-04-24 17:59:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 17:59:20 -参数 : [admin, 111111, 5675, org.apache.shiro.web.servlet.ShiroHttpServletRequest@70d8f2e9]
2019-04-24 17:59:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 17:59:20 -==> Parameters: admin(String)
2019-04-24 17:59:20 -<==      Total: 1
2019-04-24 17:59:20 -耗时 : 174
2019-04-24 17:59:20 -返回值 : {msg=操作成功, code=0}
2019-04-24 17:59:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 17:59:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 17:59:21 -==> Parameters: 1(Long), admin(String), 登录(String), 175(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 17:59:21.018(Timestamp)
2019-04-24 17:59:21 -<==    Updates: 1
2019-04-24 17:59:21 -请求地址 : http://localhost:8081/index
2019-04-24 17:59:21 -HTTP METHOD : GET
2019-04-24 17:59:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 17:59:21 -参数 : [{}]
2019-04-24 17:59:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 17:59:21 -==> Parameters: 1(Long)
2019-04-24 17:59:21 -<==      Total: 49
2019-04-24 17:59:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 17:59:21 -==> Parameters: 138(Long)
2019-04-24 17:59:21 -<==      Total: 1
2019-04-24 17:59:21 -耗时 : 244
2019-04-24 17:59:21 -返回值 : index_v1
2019-04-24 17:59:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 17:59:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 245(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 17:59:21.685(Timestamp)
2019-04-24 17:59:21 -<==    Updates: 1
2019-04-24 17:59:21 -请求地址 : http://localhost:8081/main
2019-04-24 17:59:21 -HTTP METHOD : GET
2019-04-24 17:59:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 17:59:21 -参数 : []
2019-04-24 17:59:21 -耗时 : 0
2019-04-24 17:59:21 -返回值 : main
2019-04-24 17:59:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 17:59:24 -HTTP METHOD : GET
2019-04-24 17:59:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 17:59:24 -参数 : []
2019-04-24 17:59:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 17:59:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 17:59:24 -<==      Total: 0
2019-04-24 17:59:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 17:59:24 -==> Parameters: 1(Long), 0(String)
2019-04-24 17:59:24 -<==      Total: 1
2019-04-24 17:59:24 -耗时 : 52
2019-04-24 17:59:24 -返回值 : com.bootdo.common.utils.PageUtils@7d614c7c
2019-04-24 17:59:24 -请求地址 : http://localhost:8081/main
2019-04-24 17:59:24 -HTTP METHOD : GET
2019-04-24 17:59:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 17:59:24 -参数 : []
2019-04-24 17:59:24 -耗时 : 1
2019-04-24 17:59:24 -返回值 : main
2019-04-24 17:59:31 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-04-24 18:00:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:00:07 -==> Parameters: 1(Long)
2019-04-24 18:00:07 -<==      Total: 93
2019-04-24 18:00:07 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 18:00:07 -HTTP METHOD : GET
2019-04-24 18:00:07 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 18:00:07 -参数 : []
2019-04-24 18:00:07 -耗时 : 13
2019-04-24 18:00:07 -返回值 : charts/countDD
2019-04-24 18:00:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 18:00:08 -HTTP METHOD : GET
2019-04-24 18:00:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 18:00:08 -参数 : [userType]
2019-04-24 18:00:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 18:00:08 -==> Parameters: userType(String)
2019-04-24 18:00:08 -<==      Total: 4
2019-04-24 18:00:08 -耗时 : 25
2019-04-24 18:00:08 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 18:00:17 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:00:17 -HTTP METHOD : GET
2019-04-24 18:00:17 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:00:17 -参数 : []
2019-04-24 18:00:17 -耗时 : 12
2019-04-24 18:00:17 -返回值 : charts/tableDD
2019-04-24 18:00:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:00:40 -HTTP METHOD : GET
2019-04-24 18:00:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:00:40 -参数 : []
2019-04-24 18:00:40 -耗时 : 0
2019-04-24 18:00:40 -返回值 : system/dept/deptTree
2019-04-24 18:00:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:00:40 -HTTP METHOD : GET
2019-04-24 18:00:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:00:40 -参数 : []
2019-04-24 18:00:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:00:40 -==> Parameters: 
2019-04-24 18:00:40 -<==      Total: 3
2019-04-24 18:00:40 -耗时 : 14
2019-04-24 18:00:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:00:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:00:42 -HTTP METHOD : GET
2019-04-24 18:00:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:00:42 -参数 : []
2019-04-24 18:00:42 -耗时 : 1
2019-04-24 18:00:42 -返回值 : system/dept/deptTree
2019-04-24 18:00:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:00:42 -HTTP METHOD : GET
2019-04-24 18:00:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:00:42 -参数 : []
2019-04-24 18:00:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:00:42 -==> Parameters: 
2019-04-24 18:00:42 -<==      Total: 3
2019-04-24 18:00:42 -耗时 : 6
2019-04-24 18:00:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:00:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:00:45 -HTTP METHOD : POST
2019-04-24 18:00:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:00:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7e3e1398, com.bootdo.moneyLog.vo.WaterLogVo@4ac4153a, com.bootdo.moneyLog.vo.HeatLogVo@3b65f332]
2019-04-24 18:00:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:45 -<==      Total: 1
2019-04-24 18:00:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:00:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:00:46 -<==      Total: 1
2019-04-24 18:00:46 -耗时 : 146
2019-04-24 18:00:46 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 18:20:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 6132 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 18:20:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 18:20:15 -The following profiles are active: dev
2019-04-24 18:20:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:20:16 CST 2019]; root of context hierarchy
2019-04-24 18:20:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 18:20:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 18:20:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 18:20:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:20:25 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 18:20:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 18:20:25 -Starting service [Tomcat]
2019-04-24 18:20:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 18:20:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 18:20:25 -Initializing Spring embedded WebApplicationContext
2019-04-24 18:20:25 -Root WebApplicationContext: initialization completed in 9598 ms
2019-04-24 18:20:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 18:20:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 18:20:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 18:20:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 18:20:26 -Filter xssFilter was not registered (disabled)
2019-04-24 18:20:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 18:20:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 18:20:26 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 18:20:26 -Servlet dispatcherServlet mapped to [/]
2019-04-24 18:20:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:20:16 CST 2019]; root of context hierarchy
2019-04-24 18:20:31 -Using default implementation for ThreadExecutor
2019-04-24 18:20:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 18:20:31 -Quartz Scheduler v.2.2.1 created.
2019-04-24 18:20:31 -RAMJobStore initialized.
2019-04-24 18:20:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 18:20:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 18:20:31 -Quartz scheduler version: 2.2.1
2019-04-24 18:20:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-04-24 18:20:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 18:20:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 18:20:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 18:20:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 18:20:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 18:20:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 18:20:34 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 18:20:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 18:20:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 18:20:34 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 18:20:34 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 18:20:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 18:20:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 18:20:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 18:20:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 18:20:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 18:20:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 18:20:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 18:20:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 18:20:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 18:20:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:20:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 18:20:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 18:20:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:20:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 18:20:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 18:20:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 18:20:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 18:20:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 18:20:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 18:20:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 18:20:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 18:20:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 18:20:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 18:20:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 18:20:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 18:20:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 18:20:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 18:20:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 18:20:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 18:20:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 18:20:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 18:20:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 18:20:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 18:20:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 18:20:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 18:20:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:20:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:20:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 18:20:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 18:20:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 18:20:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:20:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 18:20:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:20:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:20:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:20:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 18:20:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 18:20:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 18:20:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 18:20:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 18:20:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 18:20:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 18:20:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 18:20:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 18:20:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 18:20:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 18:20:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 18:20:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 18:20:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 18:20:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 18:20:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 18:20:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 18:20:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 18:20:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 18:20:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 18:20:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 18:20:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 18:20:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 18:20:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 18:20:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 18:20:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 18:20:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 18:20:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 18:20:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 18:20:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:20:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:20:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 18:20:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 18:20:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 18:20:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 18:20:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 18:20:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 18:20:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 18:20:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:20:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 18:20:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 18:20:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:20:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:20:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:20:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 18:20:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 18:20:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 18:20:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 18:20:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 18:20:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 18:20:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:20:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:20:16 CST 2019]; root of context hierarchy
2019-04-24 18:20:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:20:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:20:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:20:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 18:20:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 18:20:39 -Registering beans for JMX exposure on startup
2019-04-24 18:20:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 18:20:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 18:20:39 -Starting beans in phase 2147483647
2019-04-24 18:20:39 -Context refreshed
2019-04-24 18:20:39 -Found 1 custom documentation plugin(s)
2019-04-24 18:20:39 -Scanning for api listing references
2019-04-24 18:20:40 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 18:20:40 -Generating unique operation named: removeUsingPOST_1
2019-04-24 18:20:40 -Generating unique operation named: addUsingGET_1
2019-04-24 18:20:40 -Generating unique operation named: editUsingGET_1
2019-04-24 18:20:40 -Generating unique operation named: listUsingGET_1
2019-04-24 18:20:40 -Generating unique operation named: removeUsingPOST_2
2019-04-24 18:20:40 -Generating unique operation named: removeUsingPOST_3
2019-04-24 18:20:40 -Generating unique operation named: saveUsingPOST_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingGET_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingPOST_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingPUT_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 18:20:40 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 18:20:40 -Generating unique operation named: addUsingGET_2
2019-04-24 18:20:40 -Generating unique operation named: editUsingGET_2
2019-04-24 18:20:40 -Generating unique operation named: listUsingGET_2
2019-04-24 18:20:40 -Generating unique operation named: removeUsingPOST_4
2019-04-24 18:20:40 -Generating unique operation named: removeUsingPOST_5
2019-04-24 18:20:40 -Generating unique operation named: saveUsingPOST_2
2019-04-24 18:20:40 -Generating unique operation named: updateUsingPOST_2
2019-04-24 18:20:40 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 18:20:40 -Generating unique operation named: addUsingGET_3
2019-04-24 18:20:40 -Generating unique operation named: editUsingGET_3
2019-04-24 18:20:40 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_3
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_6
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_7
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_4
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_4
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_4
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_8
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_9
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 18:20:41 -Generating unique operation named: ElecUsingGET_1
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_5
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_5
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_5
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_10
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_11
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_6
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_6
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_6
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_7
2019-04-24 18:20:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_7
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_12
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_13
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 18:20:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_7
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_8
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_8
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_14
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_15
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_8
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_8
2019-04-24 18:20:41 -Generating unique operation named: editUsingGET_9
2019-04-24 18:20:41 -Generating unique operation named: listUsingGET_9
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_16
2019-04-24 18:20:41 -Generating unique operation named: removeUsingPOST_17
2019-04-24 18:20:41 -Generating unique operation named: saveUsingPOST_8
2019-04-24 18:20:41 -Generating unique operation named: updateUsingGET_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPOST_9
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPUT_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 18:20:41 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 18:20:41 -Generating unique operation named: addUsingGET_9
2019-04-24 18:20:42 -Generating unique operation named: editUsingGET_10
2019-04-24 18:20:42 -Generating unique operation named: infoUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingPOST_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingPUT_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 18:20:42 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_10
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_18
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_19
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPOST_10
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_11
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_20
2019-04-24 18:20:42 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: addUsingGET_10
2019-04-24 18:20:42 -Generating unique operation named: editUsingGET_11
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_12
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_21
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_10
2019-04-24 18:20:42 -Generating unique operation named: treeUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: treeUsingGET_2
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPOST_11
2019-04-24 18:20:42 -Generating unique operation named: addUsingGET_11
2019-04-24 18:20:42 -Generating unique operation named: editUsingGET_12
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_13
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_22
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_23
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_11
2019-04-24 18:20:42 -Generating unique operation named: updateUsingGET_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPOST_12
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPUT_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 18:20:42 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 18:20:42 -Generating unique operation named: addUsingGET_12
2019-04-24 18:20:42 -Generating unique operation named: editUsingGET_13
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_14
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_24
2019-04-24 18:20:42 -Generating unique operation named: removeUsingPOST_25
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_12
2019-04-24 18:20:42 -Generating unique operation named: updateUsingGET_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPOST_13
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPUT_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 18:20:42 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 18:20:42 -Generating unique operation named: addUsingGET_13
2019-04-24 18:20:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 18:20:42 -Generating unique operation named: editUsingGET_14
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_15
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_13
2019-04-24 18:20:42 -Generating unique operation named: saveUsingPOST_14
2019-04-24 18:20:42 -Generating unique operation named: updateUsingPOST_14
2019-04-24 18:20:42 -Generating unique operation named: listUsingGET_16
2019-04-24 18:20:42 -Generating unique operation named: listUsingHEAD_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingPOST_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingPUT_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingPATCH_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingDELETE_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 18:20:42 -Generating unique operation named: listUsingTRACE_1
2019-04-24 18:20:42 -Generating unique operation named: countDDUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 18:20:42 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 18:20:42 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 18:20:42 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 18:20:42 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 18:20:42 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 18:20:42 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 18:20:43 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 18:20:43 -Generating unique operation named: addUsingGET_14
2019-04-24 18:20:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 18:20:43 -Generating unique operation named: editUsingGET_15
2019-04-24 18:20:43 -Generating unique operation named: listUsingGET_17
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_26
2019-04-24 18:20:43 -Generating unique operation named: saveUsingPOST_15
2019-04-24 18:20:43 -Generating unique operation named: treeUsingGET_3
2019-04-24 18:20:43 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPOST_15
2019-04-24 18:20:43 -Generating unique operation named: addUsingGET_15
2019-04-24 18:20:43 -Generating unique operation named: editUsingGET_16
2019-04-24 18:20:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 18:20:43 -Generating unique operation named: listUsingGET_18
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_27
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_28
2019-04-24 18:20:43 -Generating unique operation named: saveUsingPOST_16
2019-04-24 18:20:43 -Generating unique operation named: updateUsingGET_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPOST_16
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPUT_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 18:20:43 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 18:20:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 18:20:43 -Generating unique operation named: addUsingGET_16
2019-04-24 18:20:43 -Generating unique operation named: editUsingGET_17
2019-04-24 18:20:43 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 18:20:43 -Generating unique operation named: listUsingGET_19
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_29
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_30
2019-04-24 18:20:43 -Generating unique operation named: saveUsingPOST_17
2019-04-24 18:20:43 -Generating unique operation named: updateUsingGET_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPOST_17
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPUT_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 18:20:43 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 18:20:43 -Generating unique operation named: addUsingGET_17
2019-04-24 18:20:43 -Generating unique operation named: editUsingGET_18
2019-04-24 18:20:43 -Generating unique operation named: listUsingGET_20
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_31
2019-04-24 18:20:43 -Generating unique operation named: removeUsingPOST_32
2019-04-24 18:20:43 -Generating unique operation named: saveUsingPOST_18
2019-04-24 18:20:43 -Generating unique operation named: updateUsingGET_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPOST_18
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPUT_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 18:20:43 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 18:20:43 -Starting Quartz Scheduler now
2019-04-24 18:20:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 18:20:43 -Starting...
2019-04-24 18:20:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 18:20:43 -Started.
2019-04-24 18:20:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 18:20:43 -Using a shared selector for servlet write/read
2019-04-24 18:20:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 18:20:43 -Started BootdoApplication in 29.426 seconds (JVM running for 30.379)
2019-04-24 18:20:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 18:20:44 -==> Parameters: 
2019-04-24 18:20:44 -<==      Total: 1
2019-04-24 18:20:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 18:20:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 18:20:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2019-04-24 18:20:49 -Enabling session validation scheduler...
2019-04-24 18:20:49 -请求地址 : http://localhost:8081/login;JSESSIONID=42864a20-7cef-47a8-8ad1-8474689cf71c
2019-04-24 18:20:49 -HTTP METHOD : GET
2019-04-24 18:20:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:20:49 -参数 : [{}]
2019-04-24 18:20:49 -耗时 : 2
2019-04-24 18:20:49 -返回值 : login
2019-04-24 18:20:51 -请求地址 : http://localhost:8081/getVerify
2019-04-24 18:20:51 -HTTP METHOD : GET
2019-04-24 18:20:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 18:20:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ae17082, org.apache.shiro.web.servlet.ShiroHttpServletResponse@13004578]
2019-04-24 18:20:52 -9096
2019-04-24 18:20:52 -耗时 : 642
2019-04-24 18:20:52 -返回值 : null
2019-04-24 18:20:52 -请求地址 : http://localhost:8081/login
2019-04-24 18:20:52 -HTTP METHOD : GET
2019-04-24 18:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:20:52 -参数 : [{}]
2019-04-24 18:20:52 -耗时 : 1
2019-04-24 18:20:52 -返回值 : login
2019-04-24 18:21:01 -请求地址 : http://localhost:8081/login
2019-04-24 18:21:01 -HTTP METHOD : POST
2019-04-24 18:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 18:21:01 -参数 : [admin, 111111, 9096, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68fba1ba]
2019-04-24 18:21:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 18:21:01 -==> Parameters: admin(String)
2019-04-24 18:21:01 -<==      Total: 1
2019-04-24 18:21:01 -耗时 : 126
2019-04-24 18:21:01 -返回值 : {msg=操作成功, code=0}
2019-04-24 18:21:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 18:21:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:21:01 -==> Parameters: 1(Long), admin(String), 登录(String), 126(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 18:21:01.412(Timestamp)
2019-04-24 18:21:01 -<==    Updates: 1
2019-04-24 18:21:01 -请求地址 : http://localhost:8081/index
2019-04-24 18:21:01 -HTTP METHOD : GET
2019-04-24 18:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:21:01 -参数 : [{}]
2019-04-24 18:21:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:21:01 -==> Parameters: 1(Long)
2019-04-24 18:21:01 -<==      Total: 49
2019-04-24 18:21:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:21:01 -==> Parameters: 138(Long)
2019-04-24 18:21:01 -<==      Total: 1
2019-04-24 18:21:01 -耗时 : 128
2019-04-24 18:21:01 -返回值 : index_v1
2019-04-24 18:21:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:21:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 128(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:21:01.717(Timestamp)
2019-04-24 18:21:01 -<==    Updates: 1
2019-04-24 18:21:01 -请求地址 : http://localhost:8081/main
2019-04-24 18:21:01 -HTTP METHOD : GET
2019-04-24 18:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:21:01 -参数 : []
2019-04-24 18:21:01 -耗时 : 1
2019-04-24 18:21:01 -返回值 : main
2019-04-24 18:21:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:21:02 -HTTP METHOD : GET
2019-04-24 18:21:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:21:02 -参数 : []
2019-04-24 18:21:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:21:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:21:02 -<==      Total: 0
2019-04-24 18:21:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:21:02 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:21:02 -<==      Total: 1
2019-04-24 18:21:02 -耗时 : 38
2019-04-24 18:21:02 -返回值 : com.bootdo.common.utils.PageUtils@60e15cea
2019-04-24 18:21:02 -请求地址 : http://localhost:8081/main
2019-04-24 18:21:02 -HTTP METHOD : GET
2019-04-24 18:21:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:21:02 -参数 : []
2019-04-24 18:21:02 -耗时 : 1
2019-04-24 18:21:02 -返回值 : main
2019-04-24 18:21:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:21:06 -==> Parameters: 1(Long)
2019-04-24 18:21:06 -<==      Total: 93
2019-04-24 18:21:06 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:21:06 -HTTP METHOD : GET
2019-04-24 18:21:06 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:21:06 -参数 : []
2019-04-24 18:21:06 -耗时 : 10
2019-04-24 18:21:06 -返回值 : charts/tableDD
2019-04-24 18:21:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:21:12 -HTTP METHOD : GET
2019-04-24 18:21:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:21:12 -参数 : []
2019-04-24 18:21:12 -耗时 : 0
2019-04-24 18:21:12 -返回值 : system/dept/deptTree
2019-04-24 18:21:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:21:12 -HTTP METHOD : GET
2019-04-24 18:21:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:21:12 -参数 : []
2019-04-24 18:21:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:21:12 -==> Parameters: 
2019-04-24 18:21:12 -<==      Total: 3
2019-04-24 18:21:12 -耗时 : 22
2019-04-24 18:21:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:21:14 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:21:14 -HTTP METHOD : POST
2019-04-24 18:21:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:21:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@47856e2c, com.bootdo.moneyLog.vo.WaterLogVo@b9a48fc, com.bootdo.moneyLog.vo.HeatLogVo@5b175ed8]
2019-04-24 18:21:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:21:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: "2019-03-19"(String), null, 2019-04-24 18:21:14.808(Timestamp)
2019-04-24 18:21:14 -For input string: "2019-03-19"
java.lang.NumberFormatException: For input string: "2019-03-19"
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:57)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$f20a13f6.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:21:14 -<==    Updates: 1
2019-04-24 18:21:35 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-24 18:25:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 6256 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 18:25:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 18:25:36 -The following profiles are active: dev
2019-04-24 18:25:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:25:36 CST 2019]; root of context hierarchy
2019-04-24 18:25:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 18:25:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 18:25:42 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 18:25:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:25:43 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 18:25:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 18:25:43 -Starting service [Tomcat]
2019-04-24 18:25:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 18:25:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 18:25:43 -Initializing Spring embedded WebApplicationContext
2019-04-24 18:25:43 -Root WebApplicationContext: initialization completed in 6958 ms
2019-04-24 18:25:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 18:25:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 18:25:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 18:25:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 18:25:44 -Filter xssFilter was not registered (disabled)
2019-04-24 18:25:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 18:25:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 18:25:44 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 18:25:44 -Servlet dispatcherServlet mapped to [/]
2019-04-24 18:25:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:25:36 CST 2019]; root of context hierarchy
2019-04-24 18:25:47 -Using default implementation for ThreadExecutor
2019-04-24 18:25:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 18:25:47 -Quartz Scheduler v.2.2.1 created.
2019-04-24 18:25:47 -RAMJobStore initialized.
2019-04-24 18:25:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 18:25:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 18:25:47 -Quartz scheduler version: 2.2.1
2019-04-24 18:25:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-24 18:25:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 18:25:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 18:25:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 18:25:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 18:25:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 18:25:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 18:25:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 18:25:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 18:25:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 18:25:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 18:25:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 18:25:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 18:25:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 18:25:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 18:25:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 18:25:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 18:25:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:25:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 18:25:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:25:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 18:25:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 18:25:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 18:25:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 18:25:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 18:25:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 18:25:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 18:25:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 18:25:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 18:25:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 18:25:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 18:25:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 18:25:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 18:25:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 18:25:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 18:25:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 18:25:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 18:25:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:25:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:25:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 18:25:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 18:25:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 18:25:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 18:25:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 18:25:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:25:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:25:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:25:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 18:25:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 18:25:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 18:25:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 18:25:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 18:25:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 18:25:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 18:25:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 18:25:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 18:25:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 18:25:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 18:25:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 18:25:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 18:25:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 18:25:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 18:25:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 18:25:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 18:25:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 18:25:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 18:25:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 18:25:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 18:25:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 18:25:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 18:25:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 18:25:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 18:25:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 18:25:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 18:25:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 18:25:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:25:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:25:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 18:25:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 18:25:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 18:25:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 18:25:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 18:25:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 18:25:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 18:25:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:25:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:25:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:25:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 18:25:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 18:25:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:25:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 18:25:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 18:25:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 18:25:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 18:25:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 18:25:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 18:25:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:25:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:25:36 CST 2019]; root of context hierarchy
2019-04-24 18:25:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:25:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:25:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:25:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 18:25:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 18:25:54 -Registering beans for JMX exposure on startup
2019-04-24 18:25:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 18:25:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 18:25:54 -Starting beans in phase 2147483647
2019-04-24 18:25:54 -Context refreshed
2019-04-24 18:25:54 -Found 1 custom documentation plugin(s)
2019-04-24 18:25:54 -Scanning for api listing references
2019-04-24 18:25:54 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 18:25:54 -Generating unique operation named: removeUsingPOST_1
2019-04-24 18:25:54 -Generating unique operation named: addUsingGET_1
2019-04-24 18:25:54 -Generating unique operation named: editUsingGET_1
2019-04-24 18:25:54 -Generating unique operation named: listUsingGET_1
2019-04-24 18:25:54 -Generating unique operation named: removeUsingPOST_2
2019-04-24 18:25:54 -Generating unique operation named: removeUsingPOST_3
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_2
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_2
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_2
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_4
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_5
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_2
2019-04-24 18:25:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_3
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_3
2019-04-24 18:25:55 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_3
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_6
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_7
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_4
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_4
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_4
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_8
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_9
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 18:25:55 -Generating unique operation named: ElecUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_5
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_5
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_5
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_10
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_11
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_6
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_6
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_6
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_7
2019-04-24 18:25:55 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_7
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_12
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_13
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 18:25:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_7
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_8
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_8
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_14
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_15
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_8
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_8
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_9
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_9
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_16
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_17
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_8
2019-04-24 18:25:55 -Generating unique operation named: updateUsingGET_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_9
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPUT_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 18:25:55 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_9
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_10
2019-04-24 18:25:55 -Generating unique operation named: infoUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingPOST_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingPUT_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 18:25:55 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_10
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_18
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_19
2019-04-24 18:25:55 -Generating unique operation named: saveUsingPOST_9
2019-04-24 18:25:55 -Generating unique operation named: updateUsingPOST_10
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_11
2019-04-24 18:25:55 -Generating unique operation named: removeUsingPOST_20
2019-04-24 18:25:55 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 18:25:55 -Generating unique operation named: addUsingGET_10
2019-04-24 18:25:55 -Generating unique operation named: editUsingGET_11
2019-04-24 18:25:55 -Generating unique operation named: listUsingGET_12
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_21
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_10
2019-04-24 18:25:56 -Generating unique operation named: treeUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: treeUsingGET_2
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_11
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_11
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_12
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_13
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_22
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_23
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingGET_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPUT_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 18:25:56 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_12
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_13
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_14
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_24
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_25
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingGET_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_13
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPUT_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 18:25:56 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_13
2019-04-24 18:25:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_14
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_15
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_13
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_14
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_14
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_16
2019-04-24 18:25:56 -Generating unique operation named: listUsingHEAD_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingPOST_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingPUT_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingPATCH_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingDELETE_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingTRACE_1
2019-04-24 18:25:56 -Generating unique operation named: countDDUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 18:25:56 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 18:25:56 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 18:25:56 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_14
2019-04-24 18:25:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_15
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_17
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_26
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_15
2019-04-24 18:25:56 -Generating unique operation named: treeUsingGET_3
2019-04-24 18:25:56 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_15
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_15
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_16
2019-04-24 18:25:56 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_18
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_27
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_28
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_16
2019-04-24 18:25:56 -Generating unique operation named: updateUsingGET_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_16
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPUT_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 18:25:56 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 18:25:56 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_16
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_17
2019-04-24 18:25:56 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_19
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_29
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_30
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_17
2019-04-24 18:25:56 -Generating unique operation named: updateUsingGET_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_17
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPUT_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 18:25:56 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 18:25:56 -Generating unique operation named: addUsingGET_17
2019-04-24 18:25:56 -Generating unique operation named: editUsingGET_18
2019-04-24 18:25:56 -Generating unique operation named: listUsingGET_20
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_31
2019-04-24 18:25:56 -Generating unique operation named: removeUsingPOST_32
2019-04-24 18:25:56 -Generating unique operation named: saveUsingPOST_18
2019-04-24 18:25:56 -Generating unique operation named: updateUsingGET_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPOST_18
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPUT_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 18:25:56 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 18:25:56 -Starting Quartz Scheduler now
2019-04-24 18:25:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 18:25:56 -Starting...
2019-04-24 18:25:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 18:25:56 -Started.
2019-04-24 18:25:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 18:25:56 -Using a shared selector for servlet write/read
2019-04-24 18:25:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 18:25:57 -Started BootdoApplication in 21.811 seconds (JVM running for 22.592)
2019-04-24 18:25:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 18:25:57 -==> Parameters: 
2019-04-24 18:25:57 -<==      Total: 1
2019-04-24 18:26:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 18:26:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 18:26:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 253 ms
2019-04-24 18:26:33 -Enabling session validation scheduler...
2019-04-24 18:26:33 -请求地址 : http://localhost:8081/login;JSESSIONID=8e372ed0-b547-47bc-a981-0ca67b89b62a
2019-04-24 18:26:33 -HTTP METHOD : GET
2019-04-24 18:26:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:26:33 -参数 : [{}]
2019-04-24 18:26:33 -耗时 : 3
2019-04-24 18:26:33 -返回值 : login
2019-04-24 18:26:35 -请求地址 : http://localhost:8081/getVerify
2019-04-24 18:26:35 -HTTP METHOD : GET
2019-04-24 18:26:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 18:26:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f08ce1a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50573ec7]
2019-04-24 18:26:35 -0326
2019-04-24 18:26:35 -耗时 : 895
2019-04-24 18:26:35 -返回值 : null
2019-04-24 18:26:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-24 18:27:47 -请求地址 : http://localhost:8081/login
2019-04-24 18:27:47 -HTTP METHOD : POST
2019-04-24 18:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 18:27:47 -参数 : [admin, 111111, 0326, org.apache.shiro.web.servlet.ShiroHttpServletRequest@41d2a58f]
2019-04-24 18:27:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 18:27:47 -==> Parameters: admin(String)
2019-04-24 18:27:47 -<==      Total: 1
2019-04-24 18:27:47 -耗时 : 178
2019-04-24 18:27:47 -返回值 : {msg=操作成功, code=0}
2019-04-24 18:27:47 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 18:27:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:27:47 -==> Parameters: 1(Long), admin(String), 登录(String), 179(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 18:27:47.329(Timestamp)
2019-04-24 18:27:47 -请求地址 : http://localhost:8081/index
2019-04-24 18:27:47 -HTTP METHOD : GET
2019-04-24 18:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:27:47 -参数 : [{}]
2019-04-24 18:27:47 -<==    Updates: 1
2019-04-24 18:27:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:27:47 -==> Parameters: 1(Long)
2019-04-24 18:27:47 -<==      Total: 49
2019-04-24 18:27:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:27:47 -==> Parameters: 138(Long)
2019-04-24 18:27:47 -<==      Total: 1
2019-04-24 18:27:47 -耗时 : 449
2019-04-24 18:27:47 -返回值 : index_v1
2019-04-24 18:27:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:27:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 450(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:27:47.938(Timestamp)
2019-04-24 18:27:48 -<==    Updates: 1
2019-04-24 18:27:48 -请求地址 : http://localhost:8081/main
2019-04-24 18:27:48 -HTTP METHOD : GET
2019-04-24 18:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:27:48 -参数 : []
2019-04-24 18:27:48 -耗时 : 1
2019-04-24 18:27:48 -返回值 : main
2019-04-24 18:27:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:27:48 -HTTP METHOD : GET
2019-04-24 18:27:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:27:48 -参数 : []
2019-04-24 18:27:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:27:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:27:48 -<==      Total: 0
2019-04-24 18:27:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:27:48 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:27:48 -<==      Total: 1
2019-04-24 18:27:48 -耗时 : 81
2019-04-24 18:27:48 -返回值 : com.bootdo.common.utils.PageUtils@4a336b26
2019-04-24 18:27:48 -请求地址 : http://localhost:8081/main
2019-04-24 18:27:48 -HTTP METHOD : GET
2019-04-24 18:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:27:48 -参数 : []
2019-04-24 18:27:48 -耗时 : 0
2019-04-24 18:27:48 -返回值 : main
2019-04-24 18:27:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:27:54 -==> Parameters: 1(Long)
2019-04-24 18:27:54 -<==      Total: 93
2019-04-24 18:27:54 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:27:54 -HTTP METHOD : GET
2019-04-24 18:27:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:27:54 -参数 : []
2019-04-24 18:27:54 -耗时 : 13
2019-04-24 18:27:54 -返回值 : charts/tableDD
2019-04-24 18:27:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:27:59 -HTTP METHOD : GET
2019-04-24 18:27:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:27:59 -参数 : []
2019-04-24 18:27:59 -耗时 : 1
2019-04-24 18:27:59 -返回值 : system/dept/deptTree
2019-04-24 18:27:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:27:59 -HTTP METHOD : GET
2019-04-24 18:27:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:27:59 -参数 : []
2019-04-24 18:27:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:27:59 -==> Parameters: 
2019-04-24 18:28:00 -<==      Total: 3
2019-04-24 18:28:00 -耗时 : 103
2019-04-24 18:28:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:28:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:28:01 -HTTP METHOD : POST
2019-04-24 18:28:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:28:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5ae00341, com.bootdo.moneyLog.vo.WaterLogVo@4ebe1fd7, com.bootdo.moneyLog.vo.HeatLogVo@4b48a505]
2019-04-24 18:28:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:28:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: "2019-03-19"(String), null, 2019-04-24 18:28:01.793(Timestamp)
2019-04-24 18:28:01 -For input string: "2019-03-19"
java.lang.NumberFormatException: For input string: "2019-03-19"
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:57)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$b18a0a9e.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:28:01 -<==    Updates: 1
2019-04-24 18:29:12 -请求地址 : http://localhost:8081/index
2019-04-24 18:29:12 -HTTP METHOD : GET
2019-04-24 18:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:29:12 -参数 : [{}]
2019-04-24 18:29:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:29:12 -==> Parameters: 1(Long)
2019-04-24 18:29:12 -<==      Total: 49
2019-04-24 18:29:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:29:12 -==> Parameters: 138(Long)
2019-04-24 18:29:12 -<==      Total: 1
2019-04-24 18:29:12 -耗时 : 38
2019-04-24 18:29:12 -返回值 : index_v1
2019-04-24 18:29:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:29:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:29:12.075(Timestamp)
2019-04-24 18:29:12 -请求地址 : http://localhost:8081/main
2019-04-24 18:29:12 -HTTP METHOD : GET
2019-04-24 18:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:29:12 -参数 : []
2019-04-24 18:29:12 -耗时 : 0
2019-04-24 18:29:12 -返回值 : main
2019-04-24 18:29:12 -<==    Updates: 1
2019-04-24 18:29:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:29:12 -HTTP METHOD : GET
2019-04-24 18:29:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:29:12 -参数 : []
2019-04-24 18:29:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:29:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:29:12 -<==      Total: 0
2019-04-24 18:29:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:29:12 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:29:12 -<==      Total: 1
2019-04-24 18:29:12 -耗时 : 12
2019-04-24 18:29:12 -返回值 : com.bootdo.common.utils.PageUtils@754a6b1b
2019-04-24 18:29:12 -请求地址 : http://localhost:8081/main
2019-04-24 18:29:12 -HTTP METHOD : GET
2019-04-24 18:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:29:12 -参数 : []
2019-04-24 18:29:12 -耗时 : 3
2019-04-24 18:29:12 -返回值 : main
2019-04-24 18:29:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:29:16 -HTTP METHOD : GET
2019-04-24 18:29:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:29:16 -参数 : []
2019-04-24 18:29:16 -耗时 : 2
2019-04-24 18:29:16 -返回值 : charts/tableDD
2019-04-24 18:29:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:29:22 -HTTP METHOD : GET
2019-04-24 18:29:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:29:22 -参数 : []
2019-04-24 18:29:22 -耗时 : 0
2019-04-24 18:29:22 -返回值 : system/dept/deptTree
2019-04-24 18:29:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:29:22 -HTTP METHOD : GET
2019-04-24 18:29:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:29:22 -参数 : []
2019-04-24 18:29:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:29:22 -==> Parameters: 
2019-04-24 18:29:22 -<==      Total: 3
2019-04-24 18:29:22 -耗时 : 5
2019-04-24 18:29:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:29:24 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:29:24 -HTTP METHOD : POST
2019-04-24 18:29:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:29:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@622ff915, com.bootdo.moneyLog.vo.WaterLogVo@5b497eae, com.bootdo.moneyLog.vo.HeatLogVo@6a576090]
2019-04-24 18:29:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:29:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: "2019-03-19"(String), null, 2019-04-24 18:29:24.016(Timestamp)
2019-04-24 18:29:24 -For input string: "2019-03-19"
java.lang.NumberFormatException: For input string: "2019-03-19"
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:57)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$b18a0a9e.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:29:24 -<==    Updates: 1
2019-04-24 18:29:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 7816 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 18:29:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 18:29:45 -The following profiles are active: dev
2019-04-24 18:29:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:29:45 CST 2019]; root of context hierarchy
2019-04-24 18:29:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 18:29:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 18:29:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 18:29:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:29:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 18:29:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 18:29:53 -Starting service [Tomcat]
2019-04-24 18:29:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 18:29:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 18:29:54 -Initializing Spring embedded WebApplicationContext
2019-04-24 18:29:54 -Root WebApplicationContext: initialization completed in 8296 ms
2019-04-24 18:29:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 18:29:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 18:29:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 18:29:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 18:29:54 -Filter xssFilter was not registered (disabled)
2019-04-24 18:29:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 18:29:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 18:29:54 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 18:29:54 -Servlet dispatcherServlet mapped to [/]
2019-04-24 18:29:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:29:45 CST 2019]; root of context hierarchy
2019-04-24 18:29:58 -Using default implementation for ThreadExecutor
2019-04-24 18:29:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 18:29:58 -Quartz Scheduler v.2.2.1 created.
2019-04-24 18:29:58 -RAMJobStore initialized.
2019-04-24 18:29:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 18:29:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 18:29:58 -Quartz scheduler version: 2.2.1
2019-04-24 18:29:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-04-24 18:29:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 18:29:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 18:30:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 18:30:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 18:30:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 18:30:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 18:30:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 18:30:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 18:30:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 18:30:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 18:30:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 18:30:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 18:30:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 18:30:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 18:30:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 18:30:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:30:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 18:30:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:30:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 18:30:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 18:30:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 18:30:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 18:30:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 18:30:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 18:30:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 18:30:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 18:30:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 18:30:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 18:30:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 18:30:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 18:30:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 18:30:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 18:30:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 18:30:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 18:30:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:30:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:30:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 18:30:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 18:30:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 18:30:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 18:30:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:30:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:30:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 18:30:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 18:30:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 18:30:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 18:30:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 18:30:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 18:30:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 18:30:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 18:30:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 18:30:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 18:30:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 18:30:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 18:30:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 18:30:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 18:30:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 18:30:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 18:30:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 18:30:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 18:30:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 18:30:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 18:30:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 18:30:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 18:30:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 18:30:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 18:30:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 18:30:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 18:30:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 18:30:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 18:30:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 18:30:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:30:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:30:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 18:30:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 18:30:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 18:30:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 18:30:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 18:30:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:30:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 18:30:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:30:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:30:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 18:30:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 18:30:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:30:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 18:30:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 18:30:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 18:30:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 18:30:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 18:30:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 18:30:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:30:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 18:29:45 CST 2019]; root of context hierarchy
2019-04-24 18:30:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:30:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:30:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:30:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 18:30:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 18:30:06 -Registering beans for JMX exposure on startup
2019-04-24 18:30:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 18:30:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 18:30:06 -Starting beans in phase 2147483647
2019-04-24 18:30:06 -Context refreshed
2019-04-24 18:30:06 -Found 1 custom documentation plugin(s)
2019-04-24 18:30:06 -Scanning for api listing references
2019-04-24 18:30:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_1
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_2
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_3
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPUT_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 18:30:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_2
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_2
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_2
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_4
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_5
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_2
2019-04-24 18:30:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_3
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_3
2019-04-24 18:30:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_3
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_6
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_7
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingGET_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPUT_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 18:30:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_4
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_4
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_4
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_8
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_9
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingGET_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPUT_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 18:30:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 18:30:07 -Generating unique operation named: ElecUsingGET_1
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_5
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_5
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_5
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_10
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_11
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingGET_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPUT_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 18:30:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_6
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_6
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_6
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_6
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_7
2019-04-24 18:30:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 18:30:07 -Generating unique operation named: listUsingGET_7
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_12
2019-04-24 18:30:07 -Generating unique operation named: removeUsingPOST_13
2019-04-24 18:30:07 -Generating unique operation named: saveUsingPOST_6
2019-04-24 18:30:07 -Generating unique operation named: updateUsingGET_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPOST_7
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPUT_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 18:30:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 18:30:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 18:30:07 -Generating unique operation named: addUsingGET_7
2019-04-24 18:30:07 -Generating unique operation named: editUsingGET_8
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_8
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_14
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_15
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingGET_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPUT_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 18:30:08 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_8
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_9
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_9
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_16
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_17
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingGET_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPUT_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 18:30:08 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_9
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_10
2019-04-24 18:30:08 -Generating unique operation named: infoUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingPOST_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingPUT_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 18:30:08 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_10
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_18
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_19
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_10
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_11
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_20
2019-04-24 18:30:08 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_10
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_11
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_12
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_21
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_10
2019-04-24 18:30:08 -Generating unique operation named: treeUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: treeUsingGET_2
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_11
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_11
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_12
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_13
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_22
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_23
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_11
2019-04-24 18:30:08 -Generating unique operation named: updateUsingGET_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_12
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPUT_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 18:30:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_12
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_13
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_14
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_24
2019-04-24 18:30:08 -Generating unique operation named: removeUsingPOST_25
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_12
2019-04-24 18:30:08 -Generating unique operation named: updateUsingGET_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_13
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPUT_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 18:30:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 18:30:08 -Generating unique operation named: addUsingGET_13
2019-04-24 18:30:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 18:30:08 -Generating unique operation named: editUsingGET_14
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_15
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_13
2019-04-24 18:30:08 -Generating unique operation named: saveUsingPOST_14
2019-04-24 18:30:08 -Generating unique operation named: updateUsingPOST_14
2019-04-24 18:30:08 -Generating unique operation named: listUsingGET_16
2019-04-24 18:30:08 -Generating unique operation named: listUsingHEAD_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingPOST_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingPUT_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingPATCH_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingDELETE_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 18:30:08 -Generating unique operation named: listUsingTRACE_1
2019-04-24 18:30:08 -Generating unique operation named: countDDUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 18:30:08 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 18:30:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 18:30:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 18:30:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 18:30:08 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 18:30:08 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 18:30:09 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 18:30:09 -Generating unique operation named: addUsingGET_14
2019-04-24 18:30:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 18:30:09 -Generating unique operation named: editUsingGET_15
2019-04-24 18:30:09 -Generating unique operation named: listUsingGET_17
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_26
2019-04-24 18:30:09 -Generating unique operation named: saveUsingPOST_15
2019-04-24 18:30:09 -Generating unique operation named: treeUsingGET_3
2019-04-24 18:30:09 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPOST_15
2019-04-24 18:30:09 -Generating unique operation named: addUsingGET_15
2019-04-24 18:30:09 -Generating unique operation named: editUsingGET_16
2019-04-24 18:30:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 18:30:09 -Generating unique operation named: listUsingGET_18
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_27
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_28
2019-04-24 18:30:09 -Generating unique operation named: saveUsingPOST_16
2019-04-24 18:30:09 -Generating unique operation named: updateUsingGET_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPOST_16
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPUT_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 18:30:09 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 18:30:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 18:30:09 -Generating unique operation named: addUsingGET_16
2019-04-24 18:30:09 -Generating unique operation named: editUsingGET_17
2019-04-24 18:30:09 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 18:30:09 -Generating unique operation named: listUsingGET_19
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_29
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_30
2019-04-24 18:30:09 -Generating unique operation named: saveUsingPOST_17
2019-04-24 18:30:09 -Generating unique operation named: updateUsingGET_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPOST_17
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPUT_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 18:30:09 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 18:30:09 -Generating unique operation named: addUsingGET_17
2019-04-24 18:30:09 -Generating unique operation named: editUsingGET_18
2019-04-24 18:30:09 -Generating unique operation named: listUsingGET_20
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_31
2019-04-24 18:30:09 -Generating unique operation named: removeUsingPOST_32
2019-04-24 18:30:09 -Generating unique operation named: saveUsingPOST_18
2019-04-24 18:30:09 -Generating unique operation named: updateUsingGET_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPOST_18
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPUT_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 18:30:09 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 18:30:09 -Starting Quartz Scheduler now
2019-04-24 18:30:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 18:30:09 -Starting...
2019-04-24 18:30:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 18:30:09 -Started.
2019-04-24 18:30:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 18:30:09 -Using a shared selector for servlet write/read
2019-04-24 18:30:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 18:30:09 -Started BootdoApplication in 25.231 seconds (JVM running for 26.115)
2019-04-24 18:30:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 18:30:09 -==> Parameters: 
2019-04-24 18:30:10 -<==      Total: 1
2019-04-24 18:30:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 18:30:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 18:30:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-04-24 18:30:17 -Enabling session validation scheduler...
2019-04-24 18:30:18 -请求地址 : http://localhost:8081/login;JSESSIONID=d3bfc8f3-0c03-4894-bbdd-869b7a15c348
2019-04-24 18:30:18 -HTTP METHOD : GET
2019-04-24 18:30:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:30:18 -参数 : [{}]
2019-04-24 18:30:18 -耗时 : 3
2019-04-24 18:30:18 -返回值 : login
2019-04-24 18:30:19 -请求地址 : http://localhost:8081/getVerify
2019-04-24 18:30:19 -HTTP METHOD : GET
2019-04-24 18:30:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 18:30:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@27839294, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d21eaaf]
2019-04-24 18:30:20 -3956
2019-04-24 18:30:20 -耗时 : 558
2019-04-24 18:30:20 -返回值 : null
2019-04-24 18:30:25 -请求地址 : http://localhost:8081/login
2019-04-24 18:30:25 -HTTP METHOD : POST
2019-04-24 18:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 18:30:25 -参数 : [admin, 111111, 3956, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ace6351]
2019-04-24 18:30:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 18:30:25 -==> Parameters: admin(String)
2019-04-24 18:30:25 -<==      Total: 1
2019-04-24 18:30:25 -耗时 : 124
2019-04-24 18:30:25 -返回值 : {msg=操作成功, code=0}
2019-04-24 18:30:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 18:30:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:30:25 -==> Parameters: 1(Long), admin(String), 登录(String), 124(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 18:30:25.587(Timestamp)
2019-04-24 18:30:25 -请求地址 : http://localhost:8081/index
2019-04-24 18:30:25 -HTTP METHOD : GET
2019-04-24 18:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:30:25 -参数 : [{}]
2019-04-24 18:30:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:30:25 -==> Parameters: 1(Long)
2019-04-24 18:30:25 -<==    Updates: 1
2019-04-24 18:30:25 -<==      Total: 49
2019-04-24 18:30:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:30:25 -==> Parameters: 138(Long)
2019-04-24 18:30:25 -<==      Total: 1
2019-04-24 18:30:25 -耗时 : 322
2019-04-24 18:30:25 -返回值 : index_v1
2019-04-24 18:30:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:30:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 322(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:30:26.085(Timestamp)
2019-04-24 18:30:26 -<==    Updates: 1
2019-04-24 18:30:26 -请求地址 : http://localhost:8081/main
2019-04-24 18:30:26 -HTTP METHOD : GET
2019-04-24 18:30:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:30:26 -参数 : []
2019-04-24 18:30:26 -耗时 : 0
2019-04-24 18:30:26 -返回值 : main
2019-04-24 18:30:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:30:26 -HTTP METHOD : GET
2019-04-24 18:30:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:30:26 -参数 : []
2019-04-24 18:30:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:30:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:30:26 -<==      Total: 0
2019-04-24 18:30:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:30:26 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:30:26 -<==      Total: 1
2019-04-24 18:30:26 -耗时 : 58
2019-04-24 18:30:26 -返回值 : com.bootdo.common.utils.PageUtils@61059422
2019-04-24 18:30:26 -请求地址 : http://localhost:8081/main
2019-04-24 18:30:26 -HTTP METHOD : GET
2019-04-24 18:30:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:30:26 -参数 : []
2019-04-24 18:30:26 -耗时 : 1
2019-04-24 18:30:26 -返回值 : main
2019-04-24 18:30:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:30:30 -==> Parameters: 1(Long)
2019-04-24 18:30:30 -<==      Total: 93
2019-04-24 18:30:30 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:30:30 -HTTP METHOD : GET
2019-04-24 18:30:30 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:30:30 -参数 : []
2019-04-24 18:30:30 -耗时 : 9
2019-04-24 18:30:30 -返回值 : charts/tableDD
2019-04-24 18:30:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:30:36 -HTTP METHOD : GET
2019-04-24 18:30:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:30:36 -参数 : []
2019-04-24 18:30:36 -耗时 : 1
2019-04-24 18:30:36 -返回值 : system/dept/deptTree
2019-04-24 18:30:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:30:36 -HTTP METHOD : GET
2019-04-24 18:30:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:30:36 -参数 : []
2019-04-24 18:30:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:30:36 -==> Parameters: 
2019-04-24 18:30:36 -<==      Total: 3
2019-04-24 18:30:36 -耗时 : 24
2019-04-24 18:30:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:30:38 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:30:38 -HTTP METHOD : POST
2019-04-24 18:30:38 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:30:38 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@52be37ff, com.bootdo.moneyLog.vo.WaterLogVo@70786484, com.bootdo.moneyLog.vo.HeatLogVo@27c3f314]
2019-04-24 18:30:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:30:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: ""(String), null, 2019-04-24 18:30:38.336(Timestamp)
2019-04-24 18:30:38 -For input string: ""
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:60)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$2c1b5ab4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:30:38 -<==    Updates: 1
2019-04-24 18:30:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:30:43 -HTTP METHOD : POST
2019-04-24 18:30:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:30:43 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@48984b36, com.bootdo.moneyLog.vo.WaterLogVo@1636b38f, com.bootdo.moneyLog.vo.HeatLogVo@5cc63603]
2019-04-24 18:30:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:30:43 -For input string: ""
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:60)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$2c1b5ab4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:30:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: ""(String), null, 2019-04-24 18:30:43.381(Timestamp)
2019-04-24 18:30:43 -<==    Updates: 1
2019-04-24 18:30:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:30:45 -HTTP METHOD : POST
2019-04-24 18:30:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:30:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7a400cd6, com.bootdo.moneyLog.vo.WaterLogVo@546102c2, com.bootdo.moneyLog.vo.HeatLogVo@628e7bf3]
2019-04-24 18:30:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:30:45 -For input string: ""
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.bootdo.charts.controller.tableDDController.getTableDD(tableDDController.java:60)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$2c1b5ab4.getTableDD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-24 18:30:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), java.lang.NumberFormatException: For input string: ""(String), null, 2019-04-24 18:30:45.332(Timestamp)
2019-04-24 18:30:45 -<==    Updates: 1
2019-04-24 18:31:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-24 18:39:32 -Starting BootdoApplication on ZJZL-20180906VX with PID 9040 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 18:39:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 18:39:32 -The following profiles are active: dev
2019-04-24 18:39:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 18:39:32 CST 2019]; root of context hierarchy
2019-04-24 18:39:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 18:39:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 18:39:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 18:39:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 18:39:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 18:39:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 18:39:40 -Starting service [Tomcat]
2019-04-24 18:39:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 18:39:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 18:39:40 -Initializing Spring embedded WebApplicationContext
2019-04-24 18:39:40 -Root WebApplicationContext: initialization completed in 8082 ms
2019-04-24 18:39:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 18:39:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 18:39:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 18:39:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 18:39:41 -Filter xssFilter was not registered (disabled)
2019-04-24 18:39:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 18:39:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 18:39:41 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 18:39:41 -Servlet dispatcherServlet mapped to [/]
2019-04-24 18:39:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 18:39:32 CST 2019]; root of context hierarchy
2019-04-24 18:39:45 -Using default implementation for ThreadExecutor
2019-04-24 18:39:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 18:39:45 -Quartz Scheduler v.2.2.1 created.
2019-04-24 18:39:45 -RAMJobStore initialized.
2019-04-24 18:39:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 18:39:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 18:39:45 -Quartz scheduler version: 2.2.1
2019-04-24 18:39:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-24 18:39:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 18:39:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 18:39:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 18:39:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 18:39:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 18:39:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 18:39:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 18:39:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 18:39:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 18:39:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 18:39:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 18:39:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 18:39:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 18:39:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 18:39:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 18:39:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 18:39:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:39:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 18:39:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 18:39:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 18:39:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 18:39:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 18:39:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 18:39:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 18:39:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 18:39:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 18:39:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 18:39:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 18:39:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 18:39:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 18:39:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 18:39:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 18:39:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 18:39:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 18:39:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 18:39:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:39:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 18:39:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 18:39:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 18:39:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 18:39:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 18:39:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:39:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 18:39:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:39:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 18:39:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 18:39:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 18:39:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 18:39:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 18:39:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 18:39:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 18:39:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 18:39:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 18:39:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 18:39:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 18:39:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 18:39:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 18:39:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 18:39:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 18:39:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 18:39:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 18:39:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 18:39:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 18:39:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 18:39:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 18:39:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 18:39:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 18:39:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 18:39:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 18:39:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 18:39:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 18:39:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 18:39:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 18:39:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:39:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 18:39:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 18:39:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 18:39:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 18:39:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 18:39:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 18:39:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 18:39:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 18:39:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 18:39:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 18:39:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 18:39:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 18:39:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 18:39:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 18:39:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 18:39:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 18:39:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 18:39:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 18:39:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 18:39:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:39:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Wed Apr 24 18:39:32 CST 2019]; root of context hierarchy
2019-04-24 18:39:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:39:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:39:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 18:39:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 18:39:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 18:39:52 -Registering beans for JMX exposure on startup
2019-04-24 18:39:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 18:39:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 18:39:52 -Starting beans in phase 2147483647
2019-04-24 18:39:52 -Context refreshed
2019-04-24 18:39:52 -Found 1 custom documentation plugin(s)
2019-04-24 18:39:52 -Scanning for api listing references
2019-04-24 18:39:53 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_1
2019-04-24 18:39:53 -Generating unique operation named: addUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: editUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: listUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_2
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_3
2019-04-24 18:39:53 -Generating unique operation named: saveUsingPOST_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPOST_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPUT_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 18:39:53 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 18:39:53 -Generating unique operation named: addUsingGET_2
2019-04-24 18:39:53 -Generating unique operation named: editUsingGET_2
2019-04-24 18:39:53 -Generating unique operation named: listUsingGET_2
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_4
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_5
2019-04-24 18:39:53 -Generating unique operation named: saveUsingPOST_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPOST_2
2019-04-24 18:39:53 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: addUsingGET_3
2019-04-24 18:39:53 -Generating unique operation named: editUsingGET_3
2019-04-24 18:39:53 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 18:39:53 -Generating unique operation named: listUsingGET_3
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_6
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_7
2019-04-24 18:39:53 -Generating unique operation named: saveUsingPOST_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingGET_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPOST_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPUT_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 18:39:53 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 18:39:53 -Generating unique operation named: addUsingGET_4
2019-04-24 18:39:53 -Generating unique operation named: editUsingGET_4
2019-04-24 18:39:53 -Generating unique operation named: listUsingGET_4
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_8
2019-04-24 18:39:53 -Generating unique operation named: removeUsingPOST_9
2019-04-24 18:39:53 -Generating unique operation named: saveUsingPOST_4
2019-04-24 18:39:53 -Generating unique operation named: updateUsingGET_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPOST_4
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPUT_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 18:39:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 18:39:54 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 18:39:54 -Generating unique operation named: ElecUsingGET_1
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_5
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_5
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_5
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_10
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_11
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingGET_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPUT_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 18:39:54 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_6
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_6
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_6
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_7
2019-04-24 18:39:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_7
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_12
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_13
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingGET_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPUT_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 18:39:54 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 18:39:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_7
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_8
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_8
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_14
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_15
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingGET_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_8
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPUT_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 18:39:54 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_8
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_9
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_9
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_16
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_17
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_8
2019-04-24 18:39:54 -Generating unique operation named: updateUsingGET_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_9
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPUT_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 18:39:54 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_9
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_10
2019-04-24 18:39:54 -Generating unique operation named: infoUsingGET_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingPOST_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingPUT_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 18:39:54 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_10
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_18
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_19
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_9
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_10
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_11
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_20
2019-04-24 18:39:54 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_10
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_11
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_12
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_21
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_10
2019-04-24 18:39:54 -Generating unique operation named: treeUsingGET_1
2019-04-24 18:39:54 -Generating unique operation named: treeUsingGET_2
2019-04-24 18:39:54 -Generating unique operation named: updateUsingPOST_11
2019-04-24 18:39:54 -Generating unique operation named: addUsingGET_11
2019-04-24 18:39:54 -Generating unique operation named: editUsingGET_12
2019-04-24 18:39:54 -Generating unique operation named: listUsingGET_13
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_22
2019-04-24 18:39:54 -Generating unique operation named: removeUsingPOST_23
2019-04-24 18:39:54 -Generating unique operation named: saveUsingPOST_11
2019-04-24 18:39:54 -Generating unique operation named: updateUsingGET_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPUT_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 18:39:55 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_12
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_13
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_14
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_24
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_25
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingGET_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_13
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPUT_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 18:39:55 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_13
2019-04-24 18:39:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_14
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_15
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_13
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_14
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_14
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_16
2019-04-24 18:39:55 -Generating unique operation named: listUsingHEAD_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingPOST_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingPUT_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingPATCH_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingDELETE_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingTRACE_1
2019-04-24 18:39:55 -Generating unique operation named: countDDUsingGET_1
2019-04-24 18:39:55 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 18:39:55 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 18:39:55 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 18:39:55 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_14
2019-04-24 18:39:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_15
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_17
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_26
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_15
2019-04-24 18:39:55 -Generating unique operation named: treeUsingGET_3
2019-04-24 18:39:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_15
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_15
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_16
2019-04-24 18:39:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_18
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_27
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_28
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_16
2019-04-24 18:39:55 -Generating unique operation named: updateUsingGET_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_16
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPUT_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 18:39:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 18:39:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_16
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_17
2019-04-24 18:39:55 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_19
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_29
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_30
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_17
2019-04-24 18:39:55 -Generating unique operation named: updateUsingGET_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_17
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPUT_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 18:39:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 18:39:55 -Generating unique operation named: addUsingGET_17
2019-04-24 18:39:55 -Generating unique operation named: editUsingGET_18
2019-04-24 18:39:55 -Generating unique operation named: listUsingGET_20
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_31
2019-04-24 18:39:55 -Generating unique operation named: removeUsingPOST_32
2019-04-24 18:39:55 -Generating unique operation named: saveUsingPOST_18
2019-04-24 18:39:55 -Generating unique operation named: updateUsingGET_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPOST_18
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPUT_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 18:39:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 18:39:55 -Starting Quartz Scheduler now
2019-04-24 18:39:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 18:39:55 -Starting...
2019-04-24 18:39:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 18:39:55 -Started.
2019-04-24 18:39:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 18:39:55 -Using a shared selector for servlet write/read
2019-04-24 18:39:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 18:39:55 -Started BootdoApplication in 24.546 seconds (JVM running for 25.457)
2019-04-24 18:39:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 18:39:56 -==> Parameters: 
2019-04-24 18:39:56 -<==      Total: 1
2019-04-24 18:40:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 18:40:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 18:40:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-04-24 18:40:06 -Enabling session validation scheduler...
2019-04-24 18:40:07 -请求地址 : http://localhost:8081/login;JSESSIONID=b8be87ee-896a-4a0a-9a38-f5959dfae1a7
2019-04-24 18:40:07 -HTTP METHOD : GET
2019-04-24 18:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:40:07 -参数 : [{}]
2019-04-24 18:40:07 -耗时 : 5
2019-04-24 18:40:07 -返回值 : login
2019-04-24 18:40:08 -请求地址 : http://localhost:8081/getVerify
2019-04-24 18:40:08 -HTTP METHOD : GET
2019-04-24 18:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 18:40:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@590c98be, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5d330747]
2019-04-24 18:40:09 -0780
2019-04-24 18:40:09 -耗时 : 697
2019-04-24 18:40:09 -返回值 : null
2019-04-24 18:40:15 -请求地址 : http://localhost:8081/login
2019-04-24 18:40:15 -HTTP METHOD : POST
2019-04-24 18:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 18:40:15 -参数 : [admin, 111111, 0780, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62002073]
2019-04-24 18:40:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 18:40:15 -==> Parameters: admin(String)
2019-04-24 18:40:15 -<==      Total: 1
2019-04-24 18:40:15 -耗时 : 286
2019-04-24 18:40:15 -返回值 : {msg=操作成功, code=0}
2019-04-24 18:40:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 18:40:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:40:15 -==> Parameters: 1(Long), admin(String), 登录(String), 286(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 18:40:15.543(Timestamp)
2019-04-24 18:40:15 -请求地址 : http://localhost:8081/index
2019-04-24 18:40:15 -HTTP METHOD : GET
2019-04-24 18:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:40:15 -参数 : [{}]
2019-04-24 18:40:15 -<==    Updates: 1
2019-04-24 18:40:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:40:15 -==> Parameters: 1(Long)
2019-04-24 18:40:16 -<==      Total: 49
2019-04-24 18:40:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:40:16 -==> Parameters: 138(Long)
2019-04-24 18:40:16 -<==      Total: 1
2019-04-24 18:40:16 -耗时 : 434
2019-04-24 18:40:16 -返回值 : index_v1
2019-04-24 18:40:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:40:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 435(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:40:16.092(Timestamp)
2019-04-24 18:40:16 -请求地址 : http://localhost:8081/main
2019-04-24 18:40:16 -HTTP METHOD : GET
2019-04-24 18:40:16 -<==    Updates: 1
2019-04-24 18:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:40:16 -参数 : []
2019-04-24 18:40:16 -耗时 : 14
2019-04-24 18:40:16 -返回值 : main
2019-04-24 18:40:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:40:16 -HTTP METHOD : GET
2019-04-24 18:40:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:40:16 -参数 : []
2019-04-24 18:40:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:40:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:40:16 -请求地址 : http://localhost:8081/main
2019-04-24 18:40:16 -HTTP METHOD : GET
2019-04-24 18:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:40:16 -参数 : []
2019-04-24 18:40:16 -耗时 : 1
2019-04-24 18:40:16 -返回值 : main
2019-04-24 18:40:16 -<==      Total: 0
2019-04-24 18:40:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:40:16 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:40:16 -<==      Total: 1
2019-04-24 18:40:16 -耗时 : 577
2019-04-24 18:40:16 -返回值 : com.bootdo.common.utils.PageUtils@1bc0253b
2019-04-24 18:40:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-24 18:40:52 -请求地址 : http://localhost:8081/index
2019-04-24 18:40:52 -HTTP METHOD : GET
2019-04-24 18:40:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:40:52 -参数 : [{}]
2019-04-24 18:40:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:40:52 -==> Parameters: 1(Long)
2019-04-24 18:40:52 -<==      Total: 49
2019-04-24 18:40:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:40:52 -==> Parameters: 138(Long)
2019-04-24 18:40:52 -<==      Total: 1
2019-04-24 18:40:52 -耗时 : 30
2019-04-24 18:40:52 -返回值 : index_v1
2019-04-24 18:40:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:40:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:40:52.62(Timestamp)
2019-04-24 18:40:52 -请求地址 : http://localhost:8081/main
2019-04-24 18:40:52 -HTTP METHOD : GET
2019-04-24 18:40:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:40:52 -参数 : []
2019-04-24 18:40:52 -耗时 : 0
2019-04-24 18:40:52 -返回值 : main
2019-04-24 18:40:52 -<==    Updates: 1
2019-04-24 18:40:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:40:53 -HTTP METHOD : GET
2019-04-24 18:40:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:40:53 -参数 : []
2019-04-24 18:40:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:40:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:40:53 -<==      Total: 0
2019-04-24 18:40:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:40:53 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:40:53 -<==      Total: 1
2019-04-24 18:40:53 -耗时 : 7
2019-04-24 18:40:53 -返回值 : com.bootdo.common.utils.PageUtils@36a18d3f
2019-04-24 18:40:53 -请求地址 : http://localhost:8081/main
2019-04-24 18:40:53 -HTTP METHOD : GET
2019-04-24 18:40:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:40:53 -参数 : []
2019-04-24 18:40:53 -耗时 : 1
2019-04-24 18:40:53 -返回值 : main
2019-04-24 18:40:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:40:57 -==> Parameters: 1(Long)
2019-04-24 18:40:57 -<==      Total: 93
2019-04-24 18:40:57 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:40:57 -HTTP METHOD : GET
2019-04-24 18:40:57 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:40:57 -参数 : []
2019-04-24 18:40:57 -耗时 : 15
2019-04-24 18:40:57 -返回值 : charts/tableDD
2019-04-24 18:41:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:41:01 -HTTP METHOD : GET
2019-04-24 18:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:41:01 -参数 : []
2019-04-24 18:41:01 -耗时 : 1
2019-04-24 18:41:01 -返回值 : system/dept/deptTree
2019-04-24 18:41:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:41:01 -HTTP METHOD : GET
2019-04-24 18:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:41:01 -参数 : []
2019-04-24 18:41:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:41:01 -==> Parameters: 
2019-04-24 18:41:02 -<==      Total: 3
2019-04-24 18:41:02 -耗时 : 35
2019-04-24 18:41:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:41:03 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:41:03 -HTTP METHOD : POST
2019-04-24 18:41:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:41:03 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6bba0ca6, com.bootdo.moneyLog.vo.WaterLogVo@3dfda235, com.bootdo.moneyLog.vo.HeatLogVo@1d0dd083]
2019-04-24 18:41:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:41:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:41:04 -<==      Total: 1
2019-04-24 18:41:04 -耗时 : 349
2019-04-24 18:41:04 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 18:43:21 -请求地址 : http://localhost:8081/index
2019-04-24 18:43:21 -HTTP METHOD : GET
2019-04-24 18:43:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:43:21 -参数 : [{}]
2019-04-24 18:43:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:43:21 -==> Parameters: 1(Long)
2019-04-24 18:43:21 -<==      Total: 49
2019-04-24 18:43:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:43:21 -==> Parameters: 138(Long)
2019-04-24 18:43:21 -<==      Total: 1
2019-04-24 18:43:21 -耗时 : 32
2019-04-24 18:43:21 -返回值 : index_v1
2019-04-24 18:43:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:43:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:43:21.049(Timestamp)
2019-04-24 18:43:21 -<==    Updates: 1
2019-04-24 18:43:21 -请求地址 : http://localhost:8081/main
2019-04-24 18:43:21 -HTTP METHOD : GET
2019-04-24 18:43:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:43:21 -参数 : []
2019-04-24 18:43:21 -耗时 : 0
2019-04-24 18:43:21 -返回值 : main
2019-04-24 18:43:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:43:21 -HTTP METHOD : GET
2019-04-24 18:43:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:43:21 -参数 : []
2019-04-24 18:43:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:43:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:43:21 -<==      Total: 0
2019-04-24 18:43:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:43:21 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:43:21 -<==      Total: 1
2019-04-24 18:43:21 -耗时 : 14
2019-04-24 18:43:21 -返回值 : com.bootdo.common.utils.PageUtils@310b8bdc
2019-04-24 18:43:21 -请求地址 : http://localhost:8081/main
2019-04-24 18:43:21 -HTTP METHOD : GET
2019-04-24 18:43:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:43:21 -参数 : []
2019-04-24 18:43:21 -耗时 : 1
2019-04-24 18:43:21 -返回值 : main
2019-04-24 18:43:27 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:43:27 -HTTP METHOD : GET
2019-04-24 18:43:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:43:27 -参数 : []
2019-04-24 18:43:27 -耗时 : 0
2019-04-24 18:43:27 -返回值 : charts/tableDD
2019-04-24 18:43:52 -请求地址 : http://localhost:8081/index
2019-04-24 18:43:52 -HTTP METHOD : GET
2019-04-24 18:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:43:52 -参数 : [{}]
2019-04-24 18:43:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:43:52 -==> Parameters: 1(Long)
2019-04-24 18:43:52 -<==      Total: 49
2019-04-24 18:43:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:43:52 -==> Parameters: 138(Long)
2019-04-24 18:43:52 -<==      Total: 1
2019-04-24 18:43:52 -耗时 : 37
2019-04-24 18:43:52 -返回值 : index_v1
2019-04-24 18:43:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:43:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:43:52.057(Timestamp)
2019-04-24 18:43:52 -<==    Updates: 1
2019-04-24 18:43:52 -请求地址 : http://localhost:8081/main
2019-04-24 18:43:52 -HTTP METHOD : GET
2019-04-24 18:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:43:52 -参数 : []
2019-04-24 18:43:52 -耗时 : 1
2019-04-24 18:43:52 -返回值 : main
2019-04-24 18:43:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:43:52 -HTTP METHOD : GET
2019-04-24 18:43:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:43:52 -参数 : []
2019-04-24 18:43:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:43:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:43:52 -<==      Total: 0
2019-04-24 18:43:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:43:52 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:43:52 -<==      Total: 1
2019-04-24 18:43:52 -耗时 : 6
2019-04-24 18:43:52 -返回值 : com.bootdo.common.utils.PageUtils@7dfe04e7
2019-04-24 18:43:52 -请求地址 : http://localhost:8081/main
2019-04-24 18:43:52 -HTTP METHOD : GET
2019-04-24 18:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:43:52 -参数 : []
2019-04-24 18:43:52 -耗时 : 0
2019-04-24 18:43:52 -返回值 : main
2019-04-24 18:43:59 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:43:59 -HTTP METHOD : GET
2019-04-24 18:43:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:43:59 -参数 : []
2019-04-24 18:43:59 -耗时 : 1
2019-04-24 18:43:59 -返回值 : charts/tableDD
2019-04-24 18:44:02 -请求地址 : http://localhost:8081/index
2019-04-24 18:44:02 -HTTP METHOD : GET
2019-04-24 18:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:44:02 -参数 : [{}]
2019-04-24 18:44:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:44:02 -==> Parameters: 1(Long)
2019-04-24 18:44:02 -<==      Total: 49
2019-04-24 18:44:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:44:02 -==> Parameters: 138(Long)
2019-04-24 18:44:02 -<==      Total: 1
2019-04-24 18:44:02 -耗时 : 29
2019-04-24 18:44:02 -返回值 : index_v1
2019-04-24 18:44:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:44:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:44:02.407(Timestamp)
2019-04-24 18:44:02 -<==    Updates: 1
2019-04-24 18:44:02 -请求地址 : http://localhost:8081/main
2019-04-24 18:44:02 -HTTP METHOD : GET
2019-04-24 18:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:44:02 -参数 : []
2019-04-24 18:44:02 -耗时 : 0
2019-04-24 18:44:02 -返回值 : main
2019-04-24 18:44:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:44:02 -HTTP METHOD : GET
2019-04-24 18:44:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:44:02 -参数 : []
2019-04-24 18:44:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:44:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:44:02 -<==      Total: 0
2019-04-24 18:44:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:44:02 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:44:02 -<==      Total: 1
2019-04-24 18:44:02 -耗时 : 12
2019-04-24 18:44:02 -返回值 : com.bootdo.common.utils.PageUtils@21943a02
2019-04-24 18:44:02 -请求地址 : http://localhost:8081/main
2019-04-24 18:44:02 -HTTP METHOD : GET
2019-04-24 18:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:44:02 -参数 : []
2019-04-24 18:44:02 -耗时 : 0
2019-04-24 18:44:02 -返回值 : main
2019-04-24 18:44:07 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 18:44:07 -HTTP METHOD : GET
2019-04-24 18:44:07 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 18:44:07 -参数 : []
2019-04-24 18:44:07 -耗时 : 11
2019-04-24 18:44:07 -返回值 : charts/countDD
2019-04-24 18:44:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 18:44:07 -HTTP METHOD : GET
2019-04-24 18:44:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 18:44:07 -参数 : [userType]
2019-04-24 18:44:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 18:44:07 -==> Parameters: userType(String)
2019-04-24 18:44:07 -<==      Total: 4
2019-04-24 18:44:07 -耗时 : 19
2019-04-24 18:44:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 18:44:18 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:44:18 -HTTP METHOD : GET
2019-04-24 18:44:18 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:44:18 -参数 : []
2019-04-24 18:44:18 -耗时 : 1
2019-04-24 18:44:18 -返回值 : charts/tableDD
2019-04-24 18:45:09 -请求地址 : http://localhost:8081/index
2019-04-24 18:45:09 -HTTP METHOD : GET
2019-04-24 18:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:45:09 -参数 : [{}]
2019-04-24 18:45:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:45:09 -==> Parameters: 1(Long)
2019-04-24 18:45:09 -<==      Total: 49
2019-04-24 18:45:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:45:09 -==> Parameters: 138(Long)
2019-04-24 18:45:09 -<==      Total: 1
2019-04-24 18:45:09 -耗时 : 26
2019-04-24 18:45:09 -返回值 : index_v1
2019-04-24 18:45:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:45:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:45:09.205(Timestamp)
2019-04-24 18:45:09 -请求地址 : http://localhost:8081/main
2019-04-24 18:45:09 -HTTP METHOD : GET
2019-04-24 18:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:45:09 -参数 : []
2019-04-24 18:45:09 -耗时 : 1
2019-04-24 18:45:09 -返回值 : main
2019-04-24 18:45:09 -<==    Updates: 1
2019-04-24 18:45:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:45:09 -HTTP METHOD : GET
2019-04-24 18:45:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:45:09 -参数 : []
2019-04-24 18:45:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:45:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:45:09 -<==      Total: 0
2019-04-24 18:45:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:45:09 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:45:09 -<==      Total: 1
2019-04-24 18:45:09 -耗时 : 6
2019-04-24 18:45:09 -返回值 : com.bootdo.common.utils.PageUtils@5158adf2
2019-04-24 18:45:09 -请求地址 : http://localhost:8081/main
2019-04-24 18:45:09 -HTTP METHOD : GET
2019-04-24 18:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:45:09 -参数 : []
2019-04-24 18:45:09 -耗时 : 1
2019-04-24 18:45:09 -返回值 : main
2019-04-24 18:45:15 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:45:15 -HTTP METHOD : GET
2019-04-24 18:45:15 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:45:15 -参数 : []
2019-04-24 18:45:15 -耗时 : 1
2019-04-24 18:45:15 -返回值 : charts/tableDD
2019-04-24 18:45:42 -请求地址 : http://localhost:8081/login;JSESSIONID=1ba25a4a-bbba-447c-993f-fb11fbcdf788
2019-04-24 18:45:42 -HTTP METHOD : GET
2019-04-24 18:45:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:45:42 -参数 : [{}]
2019-04-24 18:45:42 -耗时 : 0
2019-04-24 18:45:42 -返回值 : login
2019-04-24 18:45:42 -请求地址 : http://localhost:8081/getVerify
2019-04-24 18:45:42 -HTTP METHOD : GET
2019-04-24 18:45:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 18:45:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2fe392af, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31d4bd7f]
2019-04-24 18:45:42 -0808
2019-04-24 18:45:42 -耗时 : 17
2019-04-24 18:45:42 -返回值 : null
2019-04-24 18:45:43 -请求地址 : http://localhost:8081/login
2019-04-24 18:45:43 -HTTP METHOD : GET
2019-04-24 18:45:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 18:45:43 -参数 : [{}]
2019-04-24 18:45:43 -耗时 : 1
2019-04-24 18:45:43 -返回值 : login
2019-04-24 18:45:47 -请求地址 : http://localhost:8081/login
2019-04-24 18:45:47 -HTTP METHOD : POST
2019-04-24 18:45:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 18:45:47 -参数 : [admin, 111111, 0808, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fcd34f4]
2019-04-24 18:45:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 18:45:47 -==> Parameters: admin(String)
2019-04-24 18:45:47 -<==      Total: 1
2019-04-24 18:45:47 -耗时 : 106
2019-04-24 18:45:47 -返回值 : {msg=操作成功, code=0}
2019-04-24 18:45:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:45:47 -==> Parameters: 1(Long), admin(String), 登录(String), 106(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 18:45:47.358(Timestamp)
2019-04-24 18:45:47 -请求地址 : http://localhost:8081/index
2019-04-24 18:45:47 -HTTP METHOD : GET
2019-04-24 18:45:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:45:47 -参数 : [{}]
2019-04-24 18:45:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:45:47 -==> Parameters: 1(Long)
2019-04-24 18:45:47 -<==    Updates: 1
2019-04-24 18:45:47 -<==      Total: 49
2019-04-24 18:45:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:45:47 -==> Parameters: 138(Long)
2019-04-24 18:45:47 -<==      Total: 1
2019-04-24 18:45:47 -耗时 : 391
2019-04-24 18:45:47 -返回值 : index_v1
2019-04-24 18:45:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:45:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 391(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:45:47.775(Timestamp)
2019-04-24 18:45:47 -请求地址 : http://localhost:8081/main
2019-04-24 18:45:47 -HTTP METHOD : GET
2019-04-24 18:45:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:45:47 -参数 : []
2019-04-24 18:45:47 -耗时 : 1
2019-04-24 18:45:47 -返回值 : main
2019-04-24 18:45:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:45:48 -HTTP METHOD : GET
2019-04-24 18:45:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:45:48 -参数 : []
2019-04-24 18:45:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:45:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:45:48 -<==      Total: 0
2019-04-24 18:45:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:45:48 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:45:48 -<==      Total: 1
2019-04-24 18:45:48 -耗时 : 7
2019-04-24 18:45:48 -返回值 : com.bootdo.common.utils.PageUtils@42574a2a
2019-04-24 18:45:48 -请求地址 : http://localhost:8081/main
2019-04-24 18:45:48 -HTTP METHOD : GET
2019-04-24 18:45:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:45:48 -参数 : []
2019-04-24 18:45:48 -耗时 : 1
2019-04-24 18:45:48 -返回值 : main
2019-04-24 18:45:49 -<==    Updates: 1
2019-04-24 18:45:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 18:45:51 -==> Parameters: 1(Long)
2019-04-24 18:45:51 -<==      Total: 93
2019-04-24 18:45:51 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:45:51 -HTTP METHOD : GET
2019-04-24 18:45:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:45:51 -参数 : []
2019-04-24 18:45:51 -耗时 : 0
2019-04-24 18:45:51 -返回值 : charts/tableDD
2019-04-24 18:47:00 -请求地址 : http://localhost:8081/index
2019-04-24 18:47:00 -HTTP METHOD : GET
2019-04-24 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 18:47:00 -参数 : [{}]
2019-04-24 18:47:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 18:47:00 -==> Parameters: 1(Long)
2019-04-24 18:47:00 -<==      Total: 49
2019-04-24 18:47:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 18:47:00 -==> Parameters: 138(Long)
2019-04-24 18:47:00 -<==      Total: 1
2019-04-24 18:47:00 -耗时 : 17
2019-04-24 18:47:00 -返回值 : index_v1
2019-04-24 18:47:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 18:47:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 18:47:00.311(Timestamp)
2019-04-24 18:47:00 -<==    Updates: 1
2019-04-24 18:47:00 -请求地址 : http://localhost:8081/main
2019-04-24 18:47:00 -HTTP METHOD : GET
2019-04-24 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:47:00 -参数 : []
2019-04-24 18:47:00 -耗时 : 1
2019-04-24 18:47:00 -返回值 : main
2019-04-24 18:47:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 18:47:00 -HTTP METHOD : GET
2019-04-24 18:47:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 18:47:00 -参数 : []
2019-04-24 18:47:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 18:47:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 18:47:00 -<==      Total: 0
2019-04-24 18:47:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 18:47:00 -==> Parameters: 1(Long), 0(String)
2019-04-24 18:47:00 -<==      Total: 1
2019-04-24 18:47:00 -耗时 : 55
2019-04-24 18:47:00 -返回值 : com.bootdo.common.utils.PageUtils@440ec126
2019-04-24 18:47:00 -请求地址 : http://localhost:8081/main
2019-04-24 18:47:00 -HTTP METHOD : GET
2019-04-24 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 18:47:00 -参数 : []
2019-04-24 18:47:00 -耗时 : 1
2019-04-24 18:47:00 -返回值 : main
2019-04-24 18:47:03 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 18:47:03 -HTTP METHOD : GET
2019-04-24 18:47:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 18:47:03 -参数 : []
2019-04-24 18:47:03 -耗时 : 0
2019-04-24 18:47:03 -返回值 : charts/tableDD
2019-04-24 18:47:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 18:47:24 -HTTP METHOD : GET
2019-04-24 18:47:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 18:47:24 -参数 : []
2019-04-24 18:47:24 -耗时 : 0
2019-04-24 18:47:24 -返回值 : system/dept/deptTree
2019-04-24 18:47:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 18:47:25 -HTTP METHOD : GET
2019-04-24 18:47:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 18:47:25 -参数 : []
2019-04-24 18:47:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 18:47:25 -==> Parameters: 
2019-04-24 18:47:25 -<==      Total: 3
2019-04-24 18:47:25 -耗时 : 30
2019-04-24 18:47:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 18:47:27 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 18:47:27 -HTTP METHOD : POST
2019-04-24 18:47:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 18:47:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1e69edbd, com.bootdo.moneyLog.vo.WaterLogVo@10746ebb, com.bootdo.moneyLog.vo.HeatLogVo@217b349d]
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 18:47:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 18:47:27 -<==      Total: 1
2019-04-24 18:47:27 -耗时 : 209
2019-04-24 18:47:27 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 18:48:03 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 18:48:03 -HTTP METHOD : GET
2019-04-24 18:48:03 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 18:48:03 -参数 : []
2019-04-24 18:48:03 -耗时 : 9
2019-04-24 18:48:03 -返回值 : charts/countMM
2019-04-24 18:48:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 18:48:03 -HTTP METHOD : GET
2019-04-24 18:48:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 18:48:03 -参数 : [userType]
2019-04-24 18:48:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 18:48:03 -==> Parameters: userType(String)
2019-04-24 18:48:03 -<==      Total: 4
2019-04-24 18:48:03 -耗时 : 100
2019-04-24 18:48:03 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 18:48:05 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 18:48:05 -HTTP METHOD : GET
2019-04-24 18:48:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 18:48:05 -参数 : []
2019-04-24 18:48:05 -耗时 : 11
2019-04-24 18:48:05 -返回值 : charts/tableElecMM
2019-04-24 18:48:30 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 18:48:30 -HTTP METHOD : GET
2019-04-24 18:48:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 18:48:30 -参数 : []
2019-04-24 18:48:30 -耗时 : 7
2019-04-24 18:48:30 -返回值 : charts/tableHeatMM
2019-04-24 18:48:32 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 18:48:32 -HTTP METHOD : GET
2019-04-24 18:48:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 18:48:32 -参数 : []
2019-04-24 18:48:32 -耗时 : 6
2019-04-24 18:48:32 -返回值 : charts/tableWaterMM
2019-04-24 18:49:08 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 18:49:08 -HTTP METHOD : GET
2019-04-24 18:49:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 18:49:08 -参数 : []
2019-04-24 18:49:08 -耗时 : 0
2019-04-24 18:49:08 -返回值 : charts/tableHeatMM
2019-04-24 18:54:28 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 18:54:28 -HTTP METHOD : GET
2019-04-24 18:54:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 18:54:28 -参数 : []
2019-04-24 18:54:28 -耗时 : 1
2019-04-24 18:54:28 -返回值 : charts/tableWaterMM
2019-04-24 19:06:34 -请求地址 : http://localhost:8081/index
2019-04-24 19:06:34 -HTTP METHOD : GET
2019-04-24 19:06:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:06:34 -参数 : [{}]
2019-04-24 19:06:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:06:34 -==> Parameters: 1(Long)
2019-04-24 19:06:34 -<==      Total: 49
2019-04-24 19:06:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:06:34 -==> Parameters: 138(Long)
2019-04-24 19:06:34 -<==      Total: 1
2019-04-24 19:06:34 -耗时 : 29
2019-04-24 19:06:34 -返回值 : index_v1
2019-04-24 19:06:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:06:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:06:34.292(Timestamp)
2019-04-24 19:06:34 -<==    Updates: 1
2019-04-24 19:06:34 -请求地址 : http://localhost:8081/main
2019-04-24 19:06:34 -HTTP METHOD : GET
2019-04-24 19:06:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:06:34 -参数 : []
2019-04-24 19:06:34 -耗时 : 1
2019-04-24 19:06:34 -返回值 : main
2019-04-24 19:06:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:06:34 -HTTP METHOD : GET
2019-04-24 19:06:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:06:34 -参数 : []
2019-04-24 19:06:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:06:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:06:34 -<==      Total: 0
2019-04-24 19:06:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:06:34 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:06:34 -<==      Total: 1
2019-04-24 19:06:34 -耗时 : 6
2019-04-24 19:06:34 -返回值 : com.bootdo.common.utils.PageUtils@5a9a04e4
2019-04-24 19:06:34 -请求地址 : http://localhost:8081/main
2019-04-24 19:06:34 -HTTP METHOD : GET
2019-04-24 19:06:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:06:34 -参数 : []
2019-04-24 19:06:34 -耗时 : 0
2019-04-24 19:06:34 -返回值 : main
2019-04-24 19:06:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:06:45 -==> Parameters: 1(Long)
2019-04-24 19:06:45 -<==      Total: 93
2019-04-24 19:06:45 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 19:06:45 -HTTP METHOD : GET
2019-04-24 19:06:45 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 19:06:45 -参数 : []
2019-04-24 19:06:45 -耗时 : 1
2019-04-24 19:06:45 -返回值 : charts/countMM
2019-04-24 19:06:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:06:46 -HTTP METHOD : GET
2019-04-24 19:06:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:06:46 -参数 : [userType]
2019-04-24 19:06:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:06:46 -==> Parameters: userType(String)
2019-04-24 19:06:46 -<==      Total: 4
2019-04-24 19:06:46 -耗时 : 5
2019-04-24 19:06:46 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:06:47 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:06:47 -HTTP METHOD : GET
2019-04-24 19:06:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:06:47 -参数 : []
2019-04-24 19:06:47 -耗时 : 1
2019-04-24 19:06:47 -返回值 : charts/tableElecMM
2019-04-24 19:06:48 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:06:48 -HTTP METHOD : GET
2019-04-24 19:06:48 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:06:48 -参数 : []
2019-04-24 19:06:48 -耗时 : 0
2019-04-24 19:06:48 -返回值 : charts/tableWaterMM
2019-04-24 19:06:49 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:06:49 -HTTP METHOD : GET
2019-04-24 19:06:49 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:06:49 -参数 : []
2019-04-24 19:06:49 -耗时 : 1
2019-04-24 19:06:49 -返回值 : charts/tableHeatMM
2019-04-24 19:06:50 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:06:50 -HTTP METHOD : GET
2019-04-24 19:06:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:06:50 -参数 : []
2019-04-24 19:06:50 -耗时 : 0
2019-04-24 19:06:50 -返回值 : charts/tableWaterMM
2019-04-24 19:10:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(9)-CONNECTED(9)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 105], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-04-24 19:11:54 -请求地址 : http://localhost:8081/index
2019-04-24 19:11:54 -HTTP METHOD : GET
2019-04-24 19:11:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:11:54 -参数 : [{}]
2019-04-24 19:11:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:11:54 -==> Parameters: 1(Long)
2019-04-24 19:11:54 -<==      Total: 49
2019-04-24 19:11:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:11:54 -==> Parameters: 138(Long)
2019-04-24 19:11:54 -<==      Total: 1
2019-04-24 19:11:54 -耗时 : 20
2019-04-24 19:11:54 -返回值 : index_v1
2019-04-24 19:11:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:11:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:11:54.392(Timestamp)
2019-04-24 19:11:54 -请求地址 : http://localhost:8081/main
2019-04-24 19:11:54 -HTTP METHOD : GET
2019-04-24 19:11:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:11:54 -参数 : []
2019-04-24 19:11:54 -耗时 : 1
2019-04-24 19:11:54 -返回值 : main
2019-04-24 19:11:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:11:54 -HTTP METHOD : GET
2019-04-24 19:11:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:11:54 -参数 : []
2019-04-24 19:11:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:11:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:11:54 -<==      Total: 0
2019-04-24 19:11:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:11:54 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:11:54 -<==      Total: 1
2019-04-24 19:11:54 -耗时 : 21
2019-04-24 19:11:54 -返回值 : com.bootdo.common.utils.PageUtils@6df0869
2019-04-24 19:11:54 -请求地址 : http://localhost:8081/main
2019-04-24 19:11:54 -HTTP METHOD : GET
2019-04-24 19:11:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:11:54 -参数 : []
2019-04-24 19:11:54 -耗时 : 0
2019-04-24 19:11:54 -返回值 : main
2019-04-24 19:11:55 -<==    Updates: 1
2019-04-24 19:12:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:12:02 -HTTP METHOD : GET
2019-04-24 19:12:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:12:02 -参数 : []
2019-04-24 19:12:02 -耗时 : 1
2019-04-24 19:12:02 -返回值 : charts/tableElecMM
2019-04-24 19:12:04 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:12:04 -HTTP METHOD : GET
2019-04-24 19:12:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:12:04 -参数 : []
2019-04-24 19:12:04 -耗时 : 0
2019-04-24 19:12:04 -返回值 : charts/tableWaterMM
2019-04-24 19:13:37 -请求地址 : http://localhost:8081/index
2019-04-24 19:13:37 -HTTP METHOD : GET
2019-04-24 19:13:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:13:37 -参数 : [{}]
2019-04-24 19:13:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:13:37 -==> Parameters: 1(Long)
2019-04-24 19:13:37 -<==      Total: 49
2019-04-24 19:13:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:13:37 -==> Parameters: 138(Long)
2019-04-24 19:13:37 -<==      Total: 1
2019-04-24 19:13:37 -耗时 : 37
2019-04-24 19:13:37 -返回值 : index_v1
2019-04-24 19:13:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:13:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:13:38.001(Timestamp)
2019-04-24 19:13:38 -请求地址 : http://localhost:8081/main
2019-04-24 19:13:38 -HTTP METHOD : GET
2019-04-24 19:13:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:13:38 -参数 : []
2019-04-24 19:13:38 -耗时 : 0
2019-04-24 19:13:38 -返回值 : main
2019-04-24 19:13:38 -<==    Updates: 1
2019-04-24 19:13:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:13:38 -HTTP METHOD : GET
2019-04-24 19:13:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:13:38 -参数 : []
2019-04-24 19:13:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:13:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:13:38 -<==      Total: 0
2019-04-24 19:13:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:13:38 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:13:38 -<==      Total: 1
2019-04-24 19:13:38 -耗时 : 7
2019-04-24 19:13:38 -返回值 : com.bootdo.common.utils.PageUtils@58d13a7b
2019-04-24 19:13:38 -请求地址 : http://localhost:8081/main
2019-04-24 19:13:38 -HTTP METHOD : GET
2019-04-24 19:13:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:13:38 -参数 : []
2019-04-24 19:13:38 -耗时 : 1
2019-04-24 19:13:38 -返回值 : main
2019-04-24 19:13:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:13:43 -HTTP METHOD : GET
2019-04-24 19:13:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:13:43 -参数 : []
2019-04-24 19:13:43 -耗时 : 1
2019-04-24 19:13:43 -返回值 : charts/tableElecMM
2019-04-24 19:13:44 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:13:44 -HTTP METHOD : GET
2019-04-24 19:13:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:13:44 -参数 : []
2019-04-24 19:13:44 -耗时 : 0
2019-04-24 19:13:44 -返回值 : charts/tableWaterMM
2019-04-24 19:14:07 -请求地址 : http://localhost:8081/index
2019-04-24 19:14:07 -HTTP METHOD : GET
2019-04-24 19:14:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:14:07 -参数 : [{}]
2019-04-24 19:14:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:14:07 -==> Parameters: 1(Long)
2019-04-24 19:14:07 -<==      Total: 49
2019-04-24 19:14:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:14:07 -==> Parameters: 138(Long)
2019-04-24 19:14:07 -<==      Total: 1
2019-04-24 19:14:07 -耗时 : 20
2019-04-24 19:14:07 -返回值 : index_v1
2019-04-24 19:14:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:14:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:14:07.416(Timestamp)
2019-04-24 19:14:07 -请求地址 : http://localhost:8081/main
2019-04-24 19:14:07 -HTTP METHOD : GET
2019-04-24 19:14:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:14:07 -参数 : []
2019-04-24 19:14:07 -耗时 : 1
2019-04-24 19:14:07 -返回值 : main
2019-04-24 19:14:07 -<==    Updates: 1
2019-04-24 19:14:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:14:07 -HTTP METHOD : GET
2019-04-24 19:14:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:14:07 -参数 : []
2019-04-24 19:14:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:14:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:14:07 -<==      Total: 0
2019-04-24 19:14:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:14:07 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:14:07 -<==      Total: 1
2019-04-24 19:14:07 -耗时 : 7
2019-04-24 19:14:07 -返回值 : com.bootdo.common.utils.PageUtils@3ba3b906
2019-04-24 19:14:07 -请求地址 : http://localhost:8081/main
2019-04-24 19:14:07 -HTTP METHOD : GET
2019-04-24 19:14:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:14:07 -参数 : []
2019-04-24 19:14:07 -耗时 : 1
2019-04-24 19:14:07 -返回值 : main
2019-04-24 19:14:10 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:14:10 -HTTP METHOD : GET
2019-04-24 19:14:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:14:10 -参数 : []
2019-04-24 19:14:10 -耗时 : 1
2019-04-24 19:14:10 -返回值 : charts/tableElecMM
2019-04-24 19:14:11 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:14:11 -HTTP METHOD : GET
2019-04-24 19:14:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:14:11 -参数 : []
2019-04-24 19:14:11 -耗时 : 0
2019-04-24 19:14:11 -返回值 : charts/tableWaterMM
2019-04-24 19:17:30 -请求地址 : http://localhost:8081/index
2019-04-24 19:17:30 -HTTP METHOD : GET
2019-04-24 19:17:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:17:30 -参数 : [{}]
2019-04-24 19:17:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:17:30 -==> Parameters: 1(Long)
2019-04-24 19:17:30 -<==      Total: 49
2019-04-24 19:17:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:17:30 -==> Parameters: 138(Long)
2019-04-24 19:17:30 -<==      Total: 1
2019-04-24 19:17:30 -耗时 : 39
2019-04-24 19:17:30 -返回值 : index_v1
2019-04-24 19:17:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:17:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:17:30.725(Timestamp)
2019-04-24 19:17:30 -请求地址 : http://localhost:8081/main
2019-04-24 19:17:30 -HTTP METHOD : GET
2019-04-24 19:17:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:17:30 -参数 : []
2019-04-24 19:17:30 -耗时 : 1
2019-04-24 19:17:30 -返回值 : main
2019-04-24 19:17:30 -<==    Updates: 1
2019-04-24 19:17:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:17:31 -HTTP METHOD : GET
2019-04-24 19:17:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:17:31 -参数 : []
2019-04-24 19:17:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:17:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:17:31 -<==      Total: 0
2019-04-24 19:17:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:17:31 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:17:31 -<==      Total: 1
2019-04-24 19:17:31 -耗时 : 5
2019-04-24 19:17:31 -返回值 : com.bootdo.common.utils.PageUtils@56b43faf
2019-04-24 19:17:31 -请求地址 : http://localhost:8081/main
2019-04-24 19:17:31 -HTTP METHOD : GET
2019-04-24 19:17:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:17:31 -参数 : []
2019-04-24 19:17:31 -耗时 : 1
2019-04-24 19:17:31 -返回值 : main
2019-04-24 19:17:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:17:33 -==> Parameters: 1(Long)
2019-04-24 19:17:33 -<==      Total: 93
2019-04-24 19:17:33 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 19:17:33 -HTTP METHOD : GET
2019-04-24 19:17:33 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 19:17:33 -参数 : []
2019-04-24 19:17:33 -耗时 : 1
2019-04-24 19:17:33 -返回值 : charts/countDD
2019-04-24 19:17:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:17:33 -HTTP METHOD : GET
2019-04-24 19:17:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:17:33 -参数 : [userType]
2019-04-24 19:17:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:17:33 -==> Parameters: userType(String)
2019-04-24 19:17:33 -<==      Total: 4
2019-04-24 19:17:33 -耗时 : 7
2019-04-24 19:17:33 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:17:33 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:17:33 -HTTP METHOD : GET
2019-04-24 19:17:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:17:33 -参数 : []
2019-04-24 19:17:33 -耗时 : 0
2019-04-24 19:17:33 -返回值 : charts/tableDD
2019-04-24 19:17:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:17:38 -HTTP METHOD : GET
2019-04-24 19:17:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:17:38 -参数 : []
2019-04-24 19:17:38 -耗时 : 0
2019-04-24 19:17:38 -返回值 : system/dept/deptTree
2019-04-24 19:17:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:17:38 -HTTP METHOD : GET
2019-04-24 19:17:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:17:38 -参数 : []
2019-04-24 19:17:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:17:38 -==> Parameters: 
2019-04-24 19:17:38 -<==      Total: 3
2019-04-24 19:17:38 -耗时 : 4
2019-04-24 19:17:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:17:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:17:40 -HTTP METHOD : POST
2019-04-24 19:17:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:17:40 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@35587338, com.bootdo.moneyLog.vo.WaterLogVo@75cc3a68, com.bootdo.moneyLog.vo.HeatLogVo@2328c6]
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:40 -<==      Total: 1
2019-04-24 19:17:40 -耗时 : 95
2019-04-24 19:17:40 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:17:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:17:41 -HTTP METHOD : POST
2019-04-24 19:17:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:17:41 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7ffbc62c, com.bootdo.moneyLog.vo.WaterLogVo@7941b94e, com.bootdo.moneyLog.vo.HeatLogVo@212349a6]
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:41 -<==      Total: 1
2019-04-24 19:17:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:42 -<==      Total: 1
2019-04-24 19:17:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:42 -<==      Total: 1
2019-04-24 19:17:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:42 -<==      Total: 1
2019-04-24 19:17:42 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:17:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:17:42 -<==      Total: 1
2019-04-24 19:17:42 -耗时 : 92
2019-04-24 19:17:42 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:18:36 -请求地址 : http://localhost:8081/index
2019-04-24 19:18:36 -HTTP METHOD : GET
2019-04-24 19:18:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:18:36 -参数 : [{}]
2019-04-24 19:18:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:18:36 -==> Parameters: 1(Long)
2019-04-24 19:18:36 -<==      Total: 49
2019-04-24 19:18:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:18:36 -==> Parameters: 138(Long)
2019-04-24 19:18:36 -<==      Total: 1
2019-04-24 19:18:36 -耗时 : 30
2019-04-24 19:18:36 -返回值 : index_v1
2019-04-24 19:18:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:18:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:18:36.404(Timestamp)
2019-04-24 19:18:36 -请求地址 : http://localhost:8081/main
2019-04-24 19:18:36 -HTTP METHOD : GET
2019-04-24 19:18:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:18:36 -参数 : []
2019-04-24 19:18:36 -耗时 : 1
2019-04-24 19:18:36 -返回值 : main
2019-04-24 19:18:36 -<==    Updates: 1
2019-04-24 19:18:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:18:36 -HTTP METHOD : GET
2019-04-24 19:18:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:18:36 -参数 : []
2019-04-24 19:18:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:18:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:18:36 -<==      Total: 0
2019-04-24 19:18:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:18:36 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:18:36 -<==      Total: 1
2019-04-24 19:18:36 -耗时 : 7
2019-04-24 19:18:36 -返回值 : com.bootdo.common.utils.PageUtils@33c8c6d6
2019-04-24 19:18:36 -请求地址 : http://localhost:8081/main
2019-04-24 19:18:36 -HTTP METHOD : GET
2019-04-24 19:18:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:18:36 -参数 : []
2019-04-24 19:18:36 -耗时 : 1
2019-04-24 19:18:36 -返回值 : main
2019-04-24 19:18:39 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 19:18:39 -HTTP METHOD : GET
2019-04-24 19:18:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 19:18:39 -参数 : []
2019-04-24 19:18:39 -耗时 : 1
2019-04-24 19:18:39 -返回值 : charts/countDD
2019-04-24 19:18:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:18:39 -HTTP METHOD : GET
2019-04-24 19:18:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:18:39 -参数 : [userType]
2019-04-24 19:18:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:18:39 -==> Parameters: userType(String)
2019-04-24 19:18:39 -<==      Total: 4
2019-04-24 19:18:39 -耗时 : 4
2019-04-24 19:18:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:18:39 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:18:39 -HTTP METHOD : GET
2019-04-24 19:18:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:18:39 -参数 : []
2019-04-24 19:18:39 -耗时 : 1
2019-04-24 19:18:39 -返回值 : charts/tableDD
2019-04-24 19:18:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:18:54 -HTTP METHOD : GET
2019-04-24 19:18:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:18:54 -参数 : []
2019-04-24 19:18:54 -耗时 : 1
2019-04-24 19:18:54 -返回值 : system/dept/deptTree
2019-04-24 19:18:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:18:54 -HTTP METHOD : GET
2019-04-24 19:18:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:18:54 -参数 : []
2019-04-24 19:18:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:18:54 -==> Parameters: 
2019-04-24 19:18:54 -<==      Total: 3
2019-04-24 19:18:54 -耗时 : 4
2019-04-24 19:18:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:18:56 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:18:56 -HTTP METHOD : POST
2019-04-24 19:18:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:18:56 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@73bf348b, com.bootdo.moneyLog.vo.WaterLogVo@37850e33, com.bootdo.moneyLog.vo.HeatLogVo@51af2ccc]
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:18:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:18:56 -<==      Total: 1
2019-04-24 19:18:56 -耗时 : 108
2019-04-24 19:18:56 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:20:47 -请求地址 : http://localhost:8081/login;JSESSIONID=811336f0-43d6-4889-ba36-ab64e2d835c5
2019-04-24 19:20:47 -HTTP METHOD : GET
2019-04-24 19:20:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 19:20:47 -参数 : [{}]
2019-04-24 19:20:47 -耗时 : 1
2019-04-24 19:20:47 -返回值 : login
2019-04-24 19:20:47 -请求地址 : http://localhost:8081/getVerify
2019-04-24 19:20:47 -HTTP METHOD : GET
2019-04-24 19:20:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 19:20:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@501b3bb9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@603349f8]
2019-04-24 19:20:47 -5551
2019-04-24 19:20:47 -耗时 : 23
2019-04-24 19:20:47 -返回值 : null
2019-04-24 19:20:47 -请求地址 : http://localhost:8081/login
2019-04-24 19:20:47 -HTTP METHOD : GET
2019-04-24 19:20:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 19:20:47 -参数 : [{}]
2019-04-24 19:20:47 -耗时 : 1
2019-04-24 19:20:47 -返回值 : login
2019-04-24 19:20:54 -请求地址 : http://localhost:8081/login
2019-04-24 19:20:54 -HTTP METHOD : POST
2019-04-24 19:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 19:20:54 -参数 : [admin, 111111, 5551, org.apache.shiro.web.servlet.ShiroHttpServletRequest@282ae79a]
2019-04-24 19:20:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 19:20:54 -==> Parameters: admin(String)
2019-04-24 19:20:54 -<==      Total: 1
2019-04-24 19:20:54 -耗时 : 8
2019-04-24 19:20:54 -返回值 : {msg=操作成功, code=0}
2019-04-24 19:20:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:20:54 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 19:20:54.206(Timestamp)
2019-04-24 19:20:54 -请求地址 : http://localhost:8081/index
2019-04-24 19:20:54 -HTTP METHOD : GET
2019-04-24 19:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:20:54 -参数 : [{}]
2019-04-24 19:20:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:20:54 -==> Parameters: 1(Long)
2019-04-24 19:20:54 -<==      Total: 49
2019-04-24 19:20:54 -<==    Updates: 1
2019-04-24 19:20:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:20:54 -==> Parameters: 138(Long)
2019-04-24 19:20:54 -<==      Total: 1
2019-04-24 19:20:54 -耗时 : 20
2019-04-24 19:20:54 -返回值 : index_v1
2019-04-24 19:20:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:20:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:20:54.257(Timestamp)
2019-04-24 19:20:54 -<==    Updates: 1
2019-04-24 19:20:54 -请求地址 : http://localhost:8081/main
2019-04-24 19:20:54 -HTTP METHOD : GET
2019-04-24 19:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:20:54 -参数 : []
2019-04-24 19:20:54 -耗时 : 1
2019-04-24 19:20:54 -返回值 : main
2019-04-24 19:20:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:20:54 -HTTP METHOD : GET
2019-04-24 19:20:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:20:54 -参数 : []
2019-04-24 19:20:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:20:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:20:54 -<==      Total: 0
2019-04-24 19:20:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:20:54 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:20:54 -<==      Total: 1
2019-04-24 19:20:54 -耗时 : 9
2019-04-24 19:20:54 -返回值 : com.bootdo.common.utils.PageUtils@5287424
2019-04-24 19:20:54 -请求地址 : http://localhost:8081/main
2019-04-24 19:20:54 -HTTP METHOD : GET
2019-04-24 19:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:20:54 -参数 : []
2019-04-24 19:20:54 -耗时 : 1
2019-04-24 19:20:54 -返回值 : main
2019-04-24 19:21:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:21:01 -==> Parameters: 1(Long)
2019-04-24 19:21:01 -<==      Total: 93
2019-04-24 19:21:01 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:21:01 -HTTP METHOD : GET
2019-04-24 19:21:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:21:01 -参数 : []
2019-04-24 19:21:01 -耗时 : 0
2019-04-24 19:21:01 -返回值 : charts/tableDD
2019-04-24 19:21:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:21:06 -HTTP METHOD : GET
2019-04-24 19:21:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:21:06 -参数 : []
2019-04-24 19:21:06 -耗时 : 1
2019-04-24 19:21:06 -返回值 : system/dept/deptTree
2019-04-24 19:21:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:21:06 -HTTP METHOD : GET
2019-04-24 19:21:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:21:06 -参数 : []
2019-04-24 19:21:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:21:06 -==> Parameters: 
2019-04-24 19:21:06 -<==      Total: 3
2019-04-24 19:21:06 -耗时 : 4
2019-04-24 19:21:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:21:08 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:21:08 -HTTP METHOD : POST
2019-04-24 19:21:08 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:21:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@616d0e75, com.bootdo.moneyLog.vo.WaterLogVo@5a71ebd7, com.bootdo.moneyLog.vo.HeatLogVo@3503486e]
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:21:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:21:08 -<==      Total: 1
2019-04-24 19:21:08 -耗时 : 92
2019-04-24 19:21:08 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:24:15 -请求地址 : http://localhost:8081/index
2019-04-24 19:24:15 -HTTP METHOD : GET
2019-04-24 19:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:24:15 -参数 : [{}]
2019-04-24 19:24:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:24:15 -==> Parameters: 1(Long)
2019-04-24 19:24:15 -<==      Total: 49
2019-04-24 19:24:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:24:15 -==> Parameters: 138(Long)
2019-04-24 19:24:15 -<==      Total: 1
2019-04-24 19:24:15 -耗时 : 24
2019-04-24 19:24:15 -返回值 : index_v1
2019-04-24 19:24:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:24:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:24:15.046(Timestamp)
2019-04-24 19:24:15 -请求地址 : http://localhost:8081/main
2019-04-24 19:24:15 -HTTP METHOD : GET
2019-04-24 19:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:24:15 -参数 : []
2019-04-24 19:24:15 -耗时 : 1
2019-04-24 19:24:15 -返回值 : main
2019-04-24 19:24:15 -<==    Updates: 1
2019-04-24 19:24:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:24:15 -HTTP METHOD : GET
2019-04-24 19:24:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:24:15 -参数 : []
2019-04-24 19:24:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:24:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:24:15 -<==      Total: 0
2019-04-24 19:24:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:24:15 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:24:15 -<==      Total: 1
2019-04-24 19:24:15 -耗时 : 5
2019-04-24 19:24:15 -返回值 : com.bootdo.common.utils.PageUtils@5b3702a0
2019-04-24 19:24:15 -请求地址 : http://localhost:8081/main
2019-04-24 19:24:15 -HTTP METHOD : GET
2019-04-24 19:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:24:15 -参数 : []
2019-04-24 19:24:15 -耗时 : 0
2019-04-24 19:24:15 -返回值 : main
2019-04-24 19:24:56 -请求地址 : http://localhost:8081/login;JSESSIONID=7800aa6e-3315-4a6a-932d-e040002b1e43
2019-04-24 19:24:56 -HTTP METHOD : GET
2019-04-24 19:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 19:24:56 -参数 : [{}]
2019-04-24 19:24:56 -耗时 : 1
2019-04-24 19:24:56 -返回值 : login
2019-04-24 19:24:56 -请求地址 : http://localhost:8081/getVerify
2019-04-24 19:24:56 -HTTP METHOD : GET
2019-04-24 19:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 19:24:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bb93b5e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@492176cf]
2019-04-24 19:24:56 -9489
2019-04-24 19:24:56 -耗时 : 16
2019-04-24 19:24:56 -返回值 : null
2019-04-24 19:24:56 -请求地址 : http://localhost:8081/login
2019-04-24 19:24:56 -HTTP METHOD : GET
2019-04-24 19:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 19:24:56 -参数 : [{}]
2019-04-24 19:24:56 -耗时 : 1
2019-04-24 19:24:56 -返回值 : login
2019-04-24 19:25:04 -请求地址 : http://localhost:8081/login
2019-04-24 19:25:04 -HTTP METHOD : POST
2019-04-24 19:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 19:25:04 -参数 : [admin, 111111, 9489, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f0a451c]
2019-04-24 19:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 19:25:04 -==> Parameters: admin(String)
2019-04-24 19:25:04 -<==      Total: 1
2019-04-24 19:25:04 -耗时 : 5
2019-04-24 19:25:04 -返回值 : {msg=操作成功, code=0}
2019-04-24 19:25:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:25:04 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 19:25:04.143(Timestamp)
2019-04-24 19:25:04 -请求地址 : http://localhost:8081/index
2019-04-24 19:25:04 -HTTP METHOD : GET
2019-04-24 19:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:25:04 -参数 : [{}]
2019-04-24 19:25:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:25:04 -==> Parameters: 1(Long)
2019-04-24 19:25:04 -<==      Total: 49
2019-04-24 19:25:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:25:04 -==> Parameters: 138(Long)
2019-04-24 19:25:04 -<==      Total: 1
2019-04-24 19:25:04 -耗时 : 19
2019-04-24 19:25:04 -返回值 : index_v1
2019-04-24 19:25:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:25:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:25:04.194(Timestamp)
2019-04-24 19:25:04 -<==    Updates: 1
2019-04-24 19:25:04 -请求地址 : http://localhost:8081/main
2019-04-24 19:25:04 -HTTP METHOD : GET
2019-04-24 19:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:25:04 -参数 : []
2019-04-24 19:25:04 -耗时 : 1
2019-04-24 19:25:04 -返回值 : main
2019-04-24 19:25:04 -<==    Updates: 1
2019-04-24 19:25:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:25:04 -HTTP METHOD : GET
2019-04-24 19:25:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:25:04 -参数 : []
2019-04-24 19:25:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:25:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:25:04 -<==      Total: 0
2019-04-24 19:25:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:25:04 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:25:04 -<==      Total: 1
2019-04-24 19:25:04 -耗时 : 8
2019-04-24 19:25:04 -返回值 : com.bootdo.common.utils.PageUtils@f51f1be
2019-04-24 19:25:04 -请求地址 : http://localhost:8081/main
2019-04-24 19:25:04 -HTTP METHOD : GET
2019-04-24 19:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:25:04 -参数 : []
2019-04-24 19:25:04 -耗时 : 0
2019-04-24 19:25:04 -返回值 : main
2019-04-24 19:25:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:25:11 -==> Parameters: 1(Long)
2019-04-24 19:25:11 -<==      Total: 93
2019-04-24 19:25:11 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:25:11 -HTTP METHOD : GET
2019-04-24 19:25:11 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:25:11 -参数 : []
2019-04-24 19:25:11 -耗时 : 1
2019-04-24 19:25:11 -返回值 : charts/tableDD
2019-04-24 19:25:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:25:23 -HTTP METHOD : GET
2019-04-24 19:25:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:25:23 -参数 : []
2019-04-24 19:25:23 -耗时 : 0
2019-04-24 19:25:23 -返回值 : system/dept/deptTree
2019-04-24 19:25:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:25:23 -HTTP METHOD : GET
2019-04-24 19:25:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:25:23 -参数 : []
2019-04-24 19:25:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:25:23 -==> Parameters: 
2019-04-24 19:25:23 -<==      Total: 3
2019-04-24 19:25:23 -耗时 : 6
2019-04-24 19:25:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:25:24 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:25:24 -HTTP METHOD : POST
2019-04-24 19:25:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:25:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1e4d9b3e, com.bootdo.moneyLog.vo.WaterLogVo@277beab2, com.bootdo.moneyLog.vo.HeatLogVo@2af7eb1c]
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:24 -<==      Total: 1
2019-04-24 19:25:24 -耗时 : 76
2019-04-24 19:25:24 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:25:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:25:26 -HTTP METHOD : POST
2019-04-24 19:25:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:25:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@46e186fc, com.bootdo.moneyLog.vo.WaterLogVo@2cb2ad52, com.bootdo.moneyLog.vo.HeatLogVo@3be61b44]
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:26 -<==      Total: 1
2019-04-24 19:25:26 -耗时 : 105
2019-04-24 19:25:26 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:25:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:25:28 -HTTP METHOD : POST
2019-04-24 19:25:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:25:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2abd10e, com.bootdo.moneyLog.vo.WaterLogVo@7068ed3d, com.bootdo.moneyLog.vo.HeatLogVo@664e75bf]
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:25:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:25:28 -<==      Total: 1
2019-04-24 19:25:28 -耗时 : 92
2019-04-24 19:25:28 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:25:35 -请求地址 : http://localhost:8081/index
2019-04-24 19:25:35 -HTTP METHOD : GET
2019-04-24 19:25:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:25:35 -参数 : [{}]
2019-04-24 19:25:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:25:35 -==> Parameters: 1(Long)
2019-04-24 19:25:35 -<==      Total: 49
2019-04-24 19:25:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:25:35 -==> Parameters: 138(Long)
2019-04-24 19:25:35 -<==      Total: 1
2019-04-24 19:25:35 -耗时 : 17
2019-04-24 19:25:35 -返回值 : index_v1
2019-04-24 19:25:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:25:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:25:35.841(Timestamp)
2019-04-24 19:25:35 -请求地址 : http://localhost:8081/main
2019-04-24 19:25:35 -HTTP METHOD : GET
2019-04-24 19:25:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:25:35 -参数 : []
2019-04-24 19:25:35 -耗时 : 0
2019-04-24 19:25:35 -返回值 : main
2019-04-24 19:25:35 -<==    Updates: 1
2019-04-24 19:25:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:25:36 -HTTP METHOD : GET
2019-04-24 19:25:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:25:36 -参数 : []
2019-04-24 19:25:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:25:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:25:36 -<==      Total: 0
2019-04-24 19:25:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:25:36 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:25:36 -<==      Total: 1
2019-04-24 19:25:36 -耗时 : 5
2019-04-24 19:25:36 -返回值 : com.bootdo.common.utils.PageUtils@77277b85
2019-04-24 19:25:36 -请求地址 : http://localhost:8081/main
2019-04-24 19:25:36 -HTTP METHOD : GET
2019-04-24 19:25:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:25:36 -参数 : []
2019-04-24 19:25:36 -耗时 : 0
2019-04-24 19:25:36 -返回值 : main
2019-04-24 19:25:40 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:25:40 -HTTP METHOD : GET
2019-04-24 19:25:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:25:40 -参数 : []
2019-04-24 19:25:40 -耗时 : 1
2019-04-24 19:25:40 -返回值 : charts/tableDD
2019-04-24 19:32:49 -请求地址 : http://localhost:8081/index
2019-04-24 19:32:49 -HTTP METHOD : GET
2019-04-24 19:32:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:32:49 -参数 : [{}]
2019-04-24 19:32:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:32:49 -==> Parameters: 1(Long)
2019-04-24 19:32:49 -<==      Total: 49
2019-04-24 19:32:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:32:49 -==> Parameters: 138(Long)
2019-04-24 19:32:49 -<==      Total: 1
2019-04-24 19:32:49 -耗时 : 22
2019-04-24 19:32:49 -返回值 : index_v1
2019-04-24 19:32:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:32:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:32:49.608(Timestamp)
2019-04-24 19:32:49 -请求地址 : http://localhost:8081/main
2019-04-24 19:32:49 -HTTP METHOD : GET
2019-04-24 19:32:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:32:49 -参数 : []
2019-04-24 19:32:49 -耗时 : 1
2019-04-24 19:32:49 -返回值 : main
2019-04-24 19:32:49 -<==    Updates: 1
2019-04-24 19:32:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:32:49 -HTTP METHOD : GET
2019-04-24 19:32:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:32:49 -参数 : []
2019-04-24 19:32:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:32:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:32:49 -<==      Total: 0
2019-04-24 19:32:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:32:49 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:32:49 -<==      Total: 1
2019-04-24 19:32:49 -耗时 : 5
2019-04-24 19:32:49 -返回值 : com.bootdo.common.utils.PageUtils@312c0257
2019-04-24 19:32:49 -请求地址 : http://localhost:8081/main
2019-04-24 19:32:49 -HTTP METHOD : GET
2019-04-24 19:32:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:32:49 -参数 : []
2019-04-24 19:32:49 -耗时 : 48
2019-04-24 19:32:49 -返回值 : main
2019-04-24 19:32:51 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 19:32:51 -HTTP METHOD : GET
2019-04-24 19:32:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 19:32:51 -参数 : []
2019-04-24 19:32:51 -耗时 : 1
2019-04-24 19:32:51 -返回值 : charts/countDD
2019-04-24 19:32:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:32:51 -HTTP METHOD : GET
2019-04-24 19:32:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:32:51 -参数 : [userType]
2019-04-24 19:32:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:32:51 -==> Parameters: userType(String)
2019-04-24 19:32:51 -<==      Total: 4
2019-04-24 19:32:51 -耗时 : 4
2019-04-24 19:32:51 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:32:52 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:32:52 -HTTP METHOD : GET
2019-04-24 19:32:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:32:52 -参数 : []
2019-04-24 19:32:52 -耗时 : 1
2019-04-24 19:32:52 -返回值 : charts/tableDD
2019-04-24 19:33:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:33:29 -HTTP METHOD : GET
2019-04-24 19:33:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:33:29 -参数 : []
2019-04-24 19:33:29 -耗时 : 0
2019-04-24 19:33:29 -返回值 : system/dept/deptTree
2019-04-24 19:33:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:33:30 -HTTP METHOD : GET
2019-04-24 19:33:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:33:30 -参数 : []
2019-04-24 19:33:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:33:30 -==> Parameters: 
2019-04-24 19:33:30 -<==      Total: 3
2019-04-24 19:33:30 -耗时 : 6
2019-04-24 19:33:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:33:32 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:33:32 -HTTP METHOD : POST
2019-04-24 19:33:32 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:33:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@37834e86, com.bootdo.moneyLog.vo.WaterLogVo@13ad454f, com.bootdo.moneyLog.vo.HeatLogVo@46981b08]
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:33:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:33:32 -<==      Total: 1
2019-04-24 19:33:32 -耗时 : 93
2019-04-24 19:33:32 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:33:38 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:33:38 -HTTP METHOD : GET
2019-04-24 19:33:38 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:33:38 -参数 : []
2019-04-24 19:33:38 -耗时 : 1
2019-04-24 19:33:38 -返回值 : charts/tableDD
2019-04-24 19:34:49 -请求地址 : http://localhost:8081/index
2019-04-24 19:34:49 -HTTP METHOD : GET
2019-04-24 19:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:34:49 -参数 : [{}]
2019-04-24 19:34:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:34:49 -==> Parameters: 1(Long)
2019-04-24 19:34:49 -<==      Total: 49
2019-04-24 19:34:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:34:50 -==> Parameters: 138(Long)
2019-04-24 19:34:50 -<==      Total: 1
2019-04-24 19:34:50 -耗时 : 21
2019-04-24 19:34:50 -返回值 : index_v1
2019-04-24 19:34:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:34:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:34:50.003(Timestamp)
2019-04-24 19:34:50 -<==    Updates: 1
2019-04-24 19:34:50 -请求地址 : http://localhost:8081/main
2019-04-24 19:34:50 -HTTP METHOD : GET
2019-04-24 19:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:34:50 -参数 : []
2019-04-24 19:34:50 -耗时 : 1
2019-04-24 19:34:50 -返回值 : main
2019-04-24 19:34:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:34:50 -HTTP METHOD : GET
2019-04-24 19:34:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:34:50 -参数 : []
2019-04-24 19:34:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:34:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:34:50 -<==      Total: 0
2019-04-24 19:34:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:34:50 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:34:50 -<==      Total: 1
2019-04-24 19:34:50 -耗时 : 7
2019-04-24 19:34:50 -返回值 : com.bootdo.common.utils.PageUtils@121ffc26
2019-04-24 19:34:50 -请求地址 : http://localhost:8081/main
2019-04-24 19:34:50 -HTTP METHOD : GET
2019-04-24 19:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:34:50 -参数 : []
2019-04-24 19:34:50 -耗时 : 1
2019-04-24 19:34:50 -返回值 : main
2019-04-24 19:34:55 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:34:55 -HTTP METHOD : GET
2019-04-24 19:34:55 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:34:55 -参数 : []
2019-04-24 19:34:55 -耗时 : 1
2019-04-24 19:34:55 -返回值 : charts/tableDD
2019-04-24 19:35:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:35:02 -HTTP METHOD : GET
2019-04-24 19:35:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:35:02 -参数 : []
2019-04-24 19:35:02 -耗时 : 1
2019-04-24 19:35:02 -返回值 : system/dept/deptTree
2019-04-24 19:35:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:35:02 -HTTP METHOD : GET
2019-04-24 19:35:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:35:02 -参数 : []
2019-04-24 19:35:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:35:02 -==> Parameters: 
2019-04-24 19:35:02 -<==      Total: 3
2019-04-24 19:35:02 -耗时 : 3
2019-04-24 19:35:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:35:04 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:35:04 -HTTP METHOD : POST
2019-04-24 19:35:04 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:35:04 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1a41db02, com.bootdo.moneyLog.vo.WaterLogVo@ed66d5d, com.bootdo.moneyLog.vo.HeatLogVo@4f7326e1]
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:35:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:35:04 -<==      Total: 1
2019-04-24 19:35:04 -耗时 : 95
2019-04-24 19:35:04 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:35:47 -请求地址 : http://localhost:8081/index
2019-04-24 19:35:47 -HTTP METHOD : GET
2019-04-24 19:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:35:47 -参数 : [{}]
2019-04-24 19:35:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:35:47 -==> Parameters: 1(Long)
2019-04-24 19:35:47 -<==      Total: 49
2019-04-24 19:35:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:35:47 -==> Parameters: 138(Long)
2019-04-24 19:35:47 -<==      Total: 1
2019-04-24 19:35:47 -耗时 : 17
2019-04-24 19:35:47 -返回值 : index_v1
2019-04-24 19:35:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:35:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:35:47.689(Timestamp)
2019-04-24 19:35:47 -请求地址 : http://localhost:8081/main
2019-04-24 19:35:47 -HTTP METHOD : GET
2019-04-24 19:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:35:47 -参数 : []
2019-04-24 19:35:47 -耗时 : 1
2019-04-24 19:35:47 -返回值 : main
2019-04-24 19:35:47 -<==    Updates: 1
2019-04-24 19:35:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:35:47 -HTTP METHOD : GET
2019-04-24 19:35:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:35:47 -参数 : []
2019-04-24 19:35:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:35:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:35:47 -<==      Total: 0
2019-04-24 19:35:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:35:47 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:35:47 -<==      Total: 1
2019-04-24 19:35:47 -耗时 : 9
2019-04-24 19:35:47 -返回值 : com.bootdo.common.utils.PageUtils@3422d06f
2019-04-24 19:35:48 -请求地址 : http://localhost:8081/main
2019-04-24 19:35:48 -HTTP METHOD : GET
2019-04-24 19:35:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:35:48 -参数 : []
2019-04-24 19:35:48 -耗时 : 1
2019-04-24 19:35:48 -返回值 : main
2019-04-24 19:38:00 -请求地址 : http://localhost:8081/index
2019-04-24 19:38:00 -HTTP METHOD : GET
2019-04-24 19:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:38:00 -参数 : [{}]
2019-04-24 19:38:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:38:00 -==> Parameters: 1(Long)
2019-04-24 19:38:00 -<==      Total: 49
2019-04-24 19:38:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:38:00 -==> Parameters: 138(Long)
2019-04-24 19:38:00 -<==      Total: 1
2019-04-24 19:38:00 -耗时 : 17
2019-04-24 19:38:00 -返回值 : index_v1
2019-04-24 19:38:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:38:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:38:00.065(Timestamp)
2019-04-24 19:38:00 -请求地址 : http://localhost:8081/main
2019-04-24 19:38:00 -HTTP METHOD : GET
2019-04-24 19:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:38:00 -参数 : []
2019-04-24 19:38:00 -耗时 : 1
2019-04-24 19:38:00 -返回值 : main
2019-04-24 19:38:00 -<==    Updates: 1
2019-04-24 19:38:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:38:00 -HTTP METHOD : GET
2019-04-24 19:38:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:38:00 -参数 : []
2019-04-24 19:38:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:38:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:38:00 -<==      Total: 0
2019-04-24 19:38:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:38:00 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:38:00 -<==      Total: 1
2019-04-24 19:38:00 -耗时 : 6
2019-04-24 19:38:00 -返回值 : com.bootdo.common.utils.PageUtils@1b009926
2019-04-24 19:38:00 -请求地址 : http://localhost:8081/main
2019-04-24 19:38:00 -HTTP METHOD : GET
2019-04-24 19:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:38:00 -参数 : []
2019-04-24 19:38:00 -耗时 : 1
2019-04-24 19:38:00 -返回值 : main
2019-04-24 19:38:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:38:05 -==> Parameters: 1(Long)
2019-04-24 19:38:05 -<==      Total: 93
2019-04-24 19:38:05 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:38:05 -HTTP METHOD : GET
2019-04-24 19:38:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:38:05 -参数 : []
2019-04-24 19:38:05 -耗时 : 0
2019-04-24 19:38:05 -返回值 : charts/tableDD
2019-04-24 19:38:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:38:16 -HTTP METHOD : GET
2019-04-24 19:38:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:38:16 -参数 : []
2019-04-24 19:38:16 -耗时 : 0
2019-04-24 19:38:16 -返回值 : system/dept/deptTree
2019-04-24 19:38:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:38:16 -HTTP METHOD : GET
2019-04-24 19:38:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:38:16 -参数 : []
2019-04-24 19:38:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:38:16 -==> Parameters: 
2019-04-24 19:38:16 -<==      Total: 3
2019-04-24 19:38:16 -耗时 : 4
2019-04-24 19:38:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:38:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:38:43 -HTTP METHOD : POST
2019-04-24 19:38:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:38:43 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@67c265a1, com.bootdo.moneyLog.vo.WaterLogVo@1cb66fbb, com.bootdo.moneyLog.vo.HeatLogVo@3e3575ea]
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:38:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:38:43 -<==      Total: 1
2019-04-24 19:38:43 -耗时 : 77
2019-04-24 19:38:43 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:40:07 -Validating all active sessions...
2019-04-24 19:40:07 -Finished session validation.  [1] sessions were stopped.
2019-04-24 19:40:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(22)-CONNECTED(22)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 261], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 43], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-04-24 19:41:27 -请求地址 : http://localhost:8081/index
2019-04-24 19:41:27 -HTTP METHOD : GET
2019-04-24 19:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:41:27 -参数 : [{}]
2019-04-24 19:41:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:41:27 -==> Parameters: 1(Long)
2019-04-24 19:41:27 -<==      Total: 49
2019-04-24 19:41:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:41:27 -==> Parameters: 138(Long)
2019-04-24 19:41:27 -<==      Total: 1
2019-04-24 19:41:27 -耗时 : 18
2019-04-24 19:41:27 -返回值 : index_v1
2019-04-24 19:41:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:41:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:41:27.174(Timestamp)
2019-04-24 19:41:27 -请求地址 : http://localhost:8081/main
2019-04-24 19:41:27 -HTTP METHOD : GET
2019-04-24 19:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:41:27 -参数 : []
2019-04-24 19:41:27 -耗时 : 1
2019-04-24 19:41:27 -返回值 : main
2019-04-24 19:41:27 -<==    Updates: 1
2019-04-24 19:41:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:41:27 -HTTP METHOD : GET
2019-04-24 19:41:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:41:27 -参数 : []
2019-04-24 19:41:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:41:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:41:27 -<==      Total: 0
2019-04-24 19:41:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:41:27 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:41:27 -<==      Total: 1
2019-04-24 19:41:27 -耗时 : 6
2019-04-24 19:41:27 -返回值 : com.bootdo.common.utils.PageUtils@58425dd8
2019-04-24 19:41:27 -请求地址 : http://localhost:8081/main
2019-04-24 19:41:27 -HTTP METHOD : GET
2019-04-24 19:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:41:27 -参数 : []
2019-04-24 19:41:27 -耗时 : 2
2019-04-24 19:41:27 -返回值 : main
2019-04-24 19:41:30 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:41:30 -HTTP METHOD : GET
2019-04-24 19:41:30 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:41:30 -参数 : []
2019-04-24 19:41:30 -耗时 : 1
2019-04-24 19:41:30 -返回值 : charts/tableDD
2019-04-24 19:41:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:41:50 -HTTP METHOD : GET
2019-04-24 19:41:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:41:50 -参数 : []
2019-04-24 19:41:50 -耗时 : 0
2019-04-24 19:41:50 -返回值 : system/dept/deptTree
2019-04-24 19:41:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:41:50 -HTTP METHOD : GET
2019-04-24 19:41:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:41:50 -参数 : []
2019-04-24 19:41:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:41:50 -==> Parameters: 
2019-04-24 19:41:50 -<==      Total: 3
2019-04-24 19:41:50 -耗时 : 3
2019-04-24 19:41:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:41:52 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-24 19:41:52 -HTTP METHOD : POST
2019-04-24 19:41:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-24 19:41:52 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6e42a1cf, com.bootdo.moneyLog.vo.WaterLogVo@76eb3b6f, com.bootdo.moneyLog.vo.HeatLogVo@50f1ffaa]
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-24 19:41:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-24 19:41:52 -<==      Total: 1
2019-04-24 19:41:52 -耗时 : 83
2019-04-24 19:41:52 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-24 19:48:18 -请求地址 : http://localhost:8081/index
2019-04-24 19:48:18 -HTTP METHOD : GET
2019-04-24 19:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:48:18 -参数 : [{}]
2019-04-24 19:48:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:48:18 -==> Parameters: 1(Long)
2019-04-24 19:48:18 -<==      Total: 49
2019-04-24 19:48:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:48:18 -==> Parameters: 138(Long)
2019-04-24 19:48:18 -<==      Total: 1
2019-04-24 19:48:18 -耗时 : 19
2019-04-24 19:48:18 -返回值 : index_v1
2019-04-24 19:48:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:48:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:48:18.247(Timestamp)
2019-04-24 19:48:18 -请求地址 : http://localhost:8081/main
2019-04-24 19:48:18 -HTTP METHOD : GET
2019-04-24 19:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:48:18 -参数 : []
2019-04-24 19:48:18 -耗时 : 0
2019-04-24 19:48:18 -返回值 : main
2019-04-24 19:48:18 -<==    Updates: 1
2019-04-24 19:48:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:48:18 -HTTP METHOD : GET
2019-04-24 19:48:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:48:18 -参数 : []
2019-04-24 19:48:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:48:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:48:18 -<==      Total: 0
2019-04-24 19:48:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:48:18 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:48:18 -<==      Total: 1
2019-04-24 19:48:18 -耗时 : 6
2019-04-24 19:48:18 -返回值 : com.bootdo.common.utils.PageUtils@3edc7417
2019-04-24 19:48:18 -请求地址 : http://localhost:8081/main
2019-04-24 19:48:18 -HTTP METHOD : GET
2019-04-24 19:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:48:18 -参数 : []
2019-04-24 19:48:18 -耗时 : 0
2019-04-24 19:48:18 -返回值 : main
2019-04-24 19:48:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 19:48:20 -==> Parameters: 1(Long)
2019-04-24 19:48:20 -<==      Total: 93
2019-04-24 19:48:20 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:48:20 -HTTP METHOD : GET
2019-04-24 19:48:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:48:20 -参数 : []
2019-04-24 19:48:20 -耗时 : 1
2019-04-24 19:48:20 -返回值 : charts/tableDD
2019-04-24 19:48:22 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 19:48:22 -HTTP METHOD : GET
2019-04-24 19:48:22 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 19:48:22 -参数 : []
2019-04-24 19:48:22 -耗时 : 1
2019-04-24 19:48:22 -返回值 : charts/countMM
2019-04-24 19:48:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:48:22 -HTTP METHOD : GET
2019-04-24 19:48:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:48:22 -参数 : [userType]
2019-04-24 19:48:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:48:22 -==> Parameters: userType(String)
2019-04-24 19:48:22 -<==      Total: 4
2019-04-24 19:48:22 -耗时 : 3
2019-04-24 19:48:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:48:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:48:23 -HTTP METHOD : GET
2019-04-24 19:48:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:48:23 -参数 : []
2019-04-24 19:48:23 -耗时 : 1
2019-04-24 19:48:23 -返回值 : charts/tableElecMM
2019-04-24 19:48:24 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:48:24 -HTTP METHOD : GET
2019-04-24 19:48:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:48:24 -参数 : []
2019-04-24 19:48:24 -耗时 : 0
2019-04-24 19:48:24 -返回值 : charts/tableWaterMM
2019-04-24 19:48:27 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:48:27 -HTTP METHOD : GET
2019-04-24 19:48:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:48:27 -参数 : []
2019-04-24 19:48:27 -耗时 : 2
2019-04-24 19:48:27 -返回值 : charts/tableHeatMM
2019-04-24 19:48:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:48:28 -HTTP METHOD : GET
2019-04-24 19:48:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:48:28 -参数 : []
2019-04-24 19:48:28 -耗时 : 1
2019-04-24 19:48:28 -返回值 : charts/tableElecMM
2019-04-24 19:48:28 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:48:28 -HTTP METHOD : GET
2019-04-24 19:48:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:48:28 -参数 : []
2019-04-24 19:48:28 -耗时 : 0
2019-04-24 19:48:28 -返回值 : charts/tableHeatMM
2019-04-24 19:48:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:48:29 -HTTP METHOD : GET
2019-04-24 19:48:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:48:29 -参数 : []
2019-04-24 19:48:29 -耗时 : 1
2019-04-24 19:48:29 -返回值 : charts/tableWaterMM
2019-04-24 19:48:30 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:48:30 -HTTP METHOD : GET
2019-04-24 19:48:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:48:30 -参数 : []
2019-04-24 19:48:30 -耗时 : 0
2019-04-24 19:48:30 -返回值 : charts/tableHeatMM
2019-04-24 19:48:30 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:48:30 -HTTP METHOD : GET
2019-04-24 19:48:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:48:30 -参数 : []
2019-04-24 19:48:30 -耗时 : 1
2019-04-24 19:48:30 -返回值 : charts/tableElecMM
2019-04-24 19:48:31 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:48:31 -HTTP METHOD : GET
2019-04-24 19:48:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:48:31 -参数 : []
2019-04-24 19:48:31 -耗时 : 1
2019-04-24 19:48:31 -返回值 : charts/tableHeatMM
2019-04-24 19:48:31 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:48:31 -HTTP METHOD : GET
2019-04-24 19:48:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:48:31 -参数 : []
2019-04-24 19:48:31 -耗时 : 1
2019-04-24 19:48:31 -返回值 : charts/tableWaterMM
2019-04-24 19:49:41 -请求地址 : http://localhost:8081/index
2019-04-24 19:49:41 -HTTP METHOD : GET
2019-04-24 19:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:49:41 -参数 : [{}]
2019-04-24 19:49:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:49:41 -==> Parameters: 1(Long)
2019-04-24 19:49:41 -<==      Total: 49
2019-04-24 19:49:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:49:41 -==> Parameters: 138(Long)
2019-04-24 19:49:41 -<==      Total: 1
2019-04-24 19:49:41 -耗时 : 16
2019-04-24 19:49:41 -返回值 : index_v1
2019-04-24 19:49:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:49:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:49:41.831(Timestamp)
2019-04-24 19:49:41 -请求地址 : http://localhost:8081/main
2019-04-24 19:49:41 -HTTP METHOD : GET
2019-04-24 19:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:49:41 -参数 : []
2019-04-24 19:49:41 -耗时 : 1
2019-04-24 19:49:41 -返回值 : main
2019-04-24 19:49:41 -<==    Updates: 1
2019-04-24 19:49:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:49:42 -HTTP METHOD : GET
2019-04-24 19:49:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:49:42 -参数 : []
2019-04-24 19:49:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:49:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:49:42 -<==      Total: 0
2019-04-24 19:49:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:49:42 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:49:42 -<==      Total: 1
2019-04-24 19:49:42 -耗时 : 6
2019-04-24 19:49:42 -返回值 : com.bootdo.common.utils.PageUtils@7c34b16d
2019-04-24 19:49:42 -请求地址 : http://localhost:8081/main
2019-04-24 19:49:42 -HTTP METHOD : GET
2019-04-24 19:49:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:49:42 -参数 : []
2019-04-24 19:49:42 -耗时 : 1
2019-04-24 19:49:42 -返回值 : main
2019-04-24 19:49:48 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:49:48 -HTTP METHOD : GET
2019-04-24 19:49:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:49:48 -参数 : []
2019-04-24 19:49:48 -耗时 : 0
2019-04-24 19:49:48 -返回值 : charts/tableElecMM
2019-04-24 19:49:52 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:49:52 -HTTP METHOD : GET
2019-04-24 19:49:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:49:52 -参数 : []
2019-04-24 19:49:52 -耗时 : 1
2019-04-24 19:49:52 -返回值 : charts/tableWaterMM
2019-04-24 19:50:55 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:50:55 -HTTP METHOD : GET
2019-04-24 19:50:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:50:55 -参数 : []
2019-04-24 19:50:55 -耗时 : 0
2019-04-24 19:50:55 -返回值 : charts/tableHeatMM
2019-04-24 19:50:59 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:50:59 -HTTP METHOD : GET
2019-04-24 19:50:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:50:59 -参数 : []
2019-04-24 19:50:59 -耗时 : 1
2019-04-24 19:50:59 -返回值 : charts/tableWaterMM
2019-04-24 19:50:59 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:50:59 -HTTP METHOD : GET
2019-04-24 19:50:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:50:59 -参数 : []
2019-04-24 19:50:59 -耗时 : 1
2019-04-24 19:50:59 -返回值 : charts/tableHeatMM
2019-04-24 19:51:46 -请求地址 : http://localhost:8081/index
2019-04-24 19:51:46 -HTTP METHOD : GET
2019-04-24 19:51:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:51:46 -参数 : [{}]
2019-04-24 19:51:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:51:46 -==> Parameters: 1(Long)
2019-04-24 19:51:46 -<==      Total: 49
2019-04-24 19:51:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:51:47 -==> Parameters: 138(Long)
2019-04-24 19:51:47 -<==      Total: 1
2019-04-24 19:51:47 -耗时 : 27
2019-04-24 19:51:47 -返回值 : index_v1
2019-04-24 19:51:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:51:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:51:47.01(Timestamp)
2019-04-24 19:51:47 -请求地址 : http://localhost:8081/main
2019-04-24 19:51:47 -HTTP METHOD : GET
2019-04-24 19:51:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:51:47 -参数 : []
2019-04-24 19:51:47 -耗时 : 1
2019-04-24 19:51:47 -返回值 : main
2019-04-24 19:51:47 -<==    Updates: 1
2019-04-24 19:51:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:51:47 -HTTP METHOD : GET
2019-04-24 19:51:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:51:47 -参数 : []
2019-04-24 19:51:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:51:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:51:47 -<==      Total: 0
2019-04-24 19:51:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:51:47 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:51:47 -<==      Total: 1
2019-04-24 19:51:47 -耗时 : 5
2019-04-24 19:51:47 -返回值 : com.bootdo.common.utils.PageUtils@3a4b52b0
2019-04-24 19:51:47 -请求地址 : http://localhost:8081/main
2019-04-24 19:51:47 -HTTP METHOD : GET
2019-04-24 19:51:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:51:47 -参数 : []
2019-04-24 19:51:47 -耗时 : 1
2019-04-24 19:51:47 -返回值 : main
2019-04-24 19:51:58 -请求地址 : http://localhost:8081/index
2019-04-24 19:51:58 -HTTP METHOD : GET
2019-04-24 19:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 19:51:58 -参数 : [{}]
2019-04-24 19:51:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 19:51:58 -==> Parameters: 1(Long)
2019-04-24 19:51:58 -<==      Total: 49
2019-04-24 19:51:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 19:51:58 -==> Parameters: 138(Long)
2019-04-24 19:51:58 -<==      Total: 1
2019-04-24 19:51:58 -耗时 : 18
2019-04-24 19:51:58 -返回值 : index_v1
2019-04-24 19:51:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 19:51:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 19:51:58.536(Timestamp)
2019-04-24 19:51:58 -请求地址 : http://localhost:8081/main
2019-04-24 19:51:58 -HTTP METHOD : GET
2019-04-24 19:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:51:58 -参数 : []
2019-04-24 19:51:58 -耗时 : 0
2019-04-24 19:51:58 -<==    Updates: 1
2019-04-24 19:51:58 -返回值 : main
2019-04-24 19:51:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 19:51:58 -HTTP METHOD : GET
2019-04-24 19:51:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 19:51:58 -参数 : []
2019-04-24 19:51:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 19:51:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 19:51:58 -<==      Total: 0
2019-04-24 19:51:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 19:51:58 -==> Parameters: 1(Long), 0(String)
2019-04-24 19:51:58 -<==      Total: 1
2019-04-24 19:51:58 -耗时 : 5
2019-04-24 19:51:58 -返回值 : com.bootdo.common.utils.PageUtils@493a47aa
2019-04-24 19:51:58 -请求地址 : http://localhost:8081/main
2019-04-24 19:51:58 -HTTP METHOD : GET
2019-04-24 19:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 19:51:58 -参数 : []
2019-04-24 19:51:58 -耗时 : 0
2019-04-24 19:51:58 -返回值 : main
2019-04-24 19:52:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:52:02 -HTTP METHOD : GET
2019-04-24 19:52:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:52:02 -参数 : []
2019-04-24 19:52:02 -耗时 : 0
2019-04-24 19:52:02 -返回值 : charts/tableElecMM
2019-04-24 19:52:05 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:52:05 -HTTP METHOD : GET
2019-04-24 19:52:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:52:05 -参数 : []
2019-04-24 19:52:05 -耗时 : 0
2019-04-24 19:52:05 -返回值 : charts/tableWaterMM
2019-04-24 19:52:07 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:52:07 -HTTP METHOD : GET
2019-04-24 19:52:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:52:07 -参数 : []
2019-04-24 19:52:07 -耗时 : 0
2019-04-24 19:52:07 -返回值 : charts/tableHeatMM
2019-04-24 19:52:07 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:52:07 -HTTP METHOD : GET
2019-04-24 19:52:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:52:07 -参数 : []
2019-04-24 19:52:07 -耗时 : 0
2019-04-24 19:52:07 -返回值 : charts/tableWaterMM
2019-04-24 19:52:08 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:52:08 -HTTP METHOD : GET
2019-04-24 19:52:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:52:08 -参数 : []
2019-04-24 19:52:08 -耗时 : 1
2019-04-24 19:52:08 -返回值 : charts/tableHeatMM
2019-04-24 19:52:11 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 19:52:11 -HTTP METHOD : GET
2019-04-24 19:52:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 19:52:11 -参数 : []
2019-04-24 19:52:11 -耗时 : 0
2019-04-24 19:52:11 -返回值 : charts/tableElecMM
2019-04-24 19:52:12 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:52:12 -HTTP METHOD : GET
2019-04-24 19:52:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:52:12 -参数 : []
2019-04-24 19:52:12 -耗时 : 0
2019-04-24 19:52:12 -返回值 : charts/tableHeatMM
2019-04-24 19:52:13 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:52:13 -HTTP METHOD : GET
2019-04-24 19:52:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:52:13 -参数 : []
2019-04-24 19:52:13 -耗时 : 1
2019-04-24 19:52:13 -返回值 : charts/tableWaterMM
2019-04-24 19:52:15 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:52:15 -HTTP METHOD : GET
2019-04-24 19:52:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:52:15 -参数 : []
2019-04-24 19:52:15 -耗时 : 0
2019-04-24 19:52:15 -返回值 : charts/tableHeatMM
2019-04-24 19:52:16 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:52:16 -HTTP METHOD : GET
2019-04-24 19:52:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:52:16 -参数 : []
2019-04-24 19:52:16 -耗时 : 1
2019-04-24 19:52:16 -返回值 : charts/tableWaterMM
2019-04-24 19:54:00 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:54:00 -HTTP METHOD : GET
2019-04-24 19:54:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:54:00 -参数 : []
2019-04-24 19:54:00 -耗时 : 1
2019-04-24 19:54:00 -返回值 : charts/tableHeatMM
2019-04-24 19:54:01 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:54:01 -HTTP METHOD : GET
2019-04-24 19:54:01 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:54:01 -参数 : []
2019-04-24 19:54:01 -耗时 : 1
2019-04-24 19:54:01 -返回值 : charts/tableWaterMM
2019-04-24 19:54:01 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:54:01 -HTTP METHOD : GET
2019-04-24 19:54:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:54:01 -参数 : []
2019-04-24 19:54:01 -耗时 : 0
2019-04-24 19:54:01 -返回值 : charts/tableHeatMM
2019-04-24 19:54:02 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:54:02 -HTTP METHOD : GET
2019-04-24 19:54:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:54:02 -参数 : []
2019-04-24 19:54:02 -耗时 : 1
2019-04-24 19:54:02 -返回值 : charts/tableWaterMM
2019-04-24 19:54:02 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:54:02 -HTTP METHOD : GET
2019-04-24 19:54:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:54:02 -参数 : []
2019-04-24 19:54:02 -耗时 : 0
2019-04-24 19:54:02 -返回值 : charts/tableHeatMM
2019-04-24 19:54:03 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:54:03 -HTTP METHOD : GET
2019-04-24 19:54:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:54:03 -参数 : []
2019-04-24 19:54:03 -耗时 : 1
2019-04-24 19:54:03 -返回值 : charts/tableWaterMM
2019-04-24 19:54:03 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 19:54:03 -HTTP METHOD : GET
2019-04-24 19:54:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 19:54:03 -参数 : []
2019-04-24 19:54:03 -耗时 : 1
2019-04-24 19:54:03 -返回值 : charts/tableHeatMM
2019-04-24 19:54:04 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 19:54:04 -HTTP METHOD : GET
2019-04-24 19:54:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 19:54:04 -参数 : []
2019-04-24 19:54:04 -耗时 : 1
2019-04-24 19:54:04 -返回值 : charts/tableWaterMM
2019-04-24 19:54:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:54:41 -HTTP METHOD : GET
2019-04-24 19:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:54:41 -参数 : []
2019-04-24 19:54:41 -耗时 : 1
2019-04-24 19:54:41 -返回值 : system/dept/deptTree
2019-04-24 19:54:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:54:41 -HTTP METHOD : GET
2019-04-24 19:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:54:41 -参数 : []
2019-04-24 19:54:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:54:41 -==> Parameters: 
2019-04-24 19:54:41 -<==      Total: 3
2019-04-24 19:54:41 -耗时 : 4
2019-04-24 19:54:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:54:47 -请求地址 : http://localhost:8081/charts/countDD
2019-04-24 19:54:47 -HTTP METHOD : GET
2019-04-24 19:54:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-24 19:54:47 -参数 : []
2019-04-24 19:54:47 -耗时 : 0
2019-04-24 19:54:47 -返回值 : charts/countDD
2019-04-24 19:54:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 19:54:47 -HTTP METHOD : GET
2019-04-24 19:54:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 19:54:47 -参数 : [userType]
2019-04-24 19:54:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 19:54:47 -==> Parameters: userType(String)
2019-04-24 19:54:47 -<==      Total: 4
2019-04-24 19:54:47 -耗时 : 5
2019-04-24 19:54:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 19:54:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:54:48 -HTTP METHOD : GET
2019-04-24 19:54:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:54:48 -参数 : []
2019-04-24 19:54:48 -耗时 : 1
2019-04-24 19:54:48 -返回值 : system/dept/deptTree
2019-04-24 19:54:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:54:48 -HTTP METHOD : GET
2019-04-24 19:54:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:54:48 -参数 : []
2019-04-24 19:54:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:54:48 -==> Parameters: 
2019-04-24 19:54:48 -<==      Total: 3
2019-04-24 19:54:48 -耗时 : 3
2019-04-24 19:54:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 19:54:51 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 19:54:51 -HTTP METHOD : GET
2019-04-24 19:54:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 19:54:51 -参数 : []
2019-04-24 19:54:51 -耗时 : 0
2019-04-24 19:54:51 -返回值 : charts/tableDD
2019-04-24 19:54:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 19:54:52 -HTTP METHOD : GET
2019-04-24 19:54:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 19:54:52 -参数 : []
2019-04-24 19:54:52 -耗时 : 1
2019-04-24 19:54:52 -返回值 : system/dept/deptTree
2019-04-24 19:54:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 19:54:53 -HTTP METHOD : GET
2019-04-24 19:54:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 19:54:53 -参数 : []
2019-04-24 19:54:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 19:54:53 -==> Parameters: 
2019-04-24 19:54:53 -<==      Total: 3
2019-04-24 19:54:53 -耗时 : 5
2019-04-24 19:54:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 20:10:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 27 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 321], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 53], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1294]
2019-04-24 20:26:08 -请求地址 : http://localhost:8081/login;JSESSIONID=aba2821d-8174-4f41-b613-be72e6d311fb
2019-04-24 20:26:08 -HTTP METHOD : GET
2019-04-24 20:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 20:26:08 -参数 : [{}]
2019-04-24 20:26:08 -耗时 : 3
2019-04-24 20:26:08 -返回值 : login
2019-04-24 20:26:08 -请求地址 : http://localhost:8081/getVerify
2019-04-24 20:26:08 -HTTP METHOD : GET
2019-04-24 20:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 20:26:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2965d867, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8775d88]
2019-04-24 20:26:08 -8839
2019-04-24 20:26:08 -耗时 : 39
2019-04-24 20:26:08 -返回值 : null
2019-04-24 20:26:13 -请求地址 : http://localhost:8081/login
2019-04-24 20:26:13 -HTTP METHOD : POST
2019-04-24 20:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 20:26:13 -参数 : [admin, 111111, 8839, org.apache.shiro.web.servlet.ShiroHttpServletRequest@13b8b5c9]
2019-04-24 20:26:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 20:26:13 -==> Parameters: admin(String)
2019-04-24 20:26:13 -<==      Total: 1
2019-04-24 20:26:13 -耗时 : 9
2019-04-24 20:26:13 -返回值 : {msg=操作成功, code=0}
2019-04-24 20:26:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 20:26:13 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 20:26:13.024(Timestamp)
2019-04-24 20:26:13 -请求地址 : http://localhost:8081/index
2019-04-24 20:26:13 -HTTP METHOD : GET
2019-04-24 20:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 20:26:13 -参数 : [{}]
2019-04-24 20:26:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 20:26:13 -==> Parameters: 1(Long)
2019-04-24 20:26:13 -<==      Total: 49
2019-04-24 20:26:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 20:26:13 -==> Parameters: 138(Long)
2019-04-24 20:26:13 -<==      Total: 1
2019-04-24 20:26:13 -耗时 : 14
2019-04-24 20:26:13 -返回值 : index_v1
2019-04-24 20:26:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 20:26:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 20:26:13.055(Timestamp)
2019-04-24 20:26:13 -<==    Updates: 1
2019-04-24 20:26:13 -请求地址 : http://localhost:8081/main
2019-04-24 20:26:13 -HTTP METHOD : GET
2019-04-24 20:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 20:26:13 -参数 : []
2019-04-24 20:26:13 -耗时 : 1
2019-04-24 20:26:13 -返回值 : main
2019-04-24 20:26:13 -<==    Updates: 1
2019-04-24 20:26:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 20:26:13 -HTTP METHOD : GET
2019-04-24 20:26:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 20:26:13 -参数 : []
2019-04-24 20:26:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 20:26:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 20:26:13 -<==      Total: 0
2019-04-24 20:26:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 20:26:13 -==> Parameters: 1(Long), 0(String)
2019-04-24 20:26:13 -<==      Total: 1
2019-04-24 20:26:13 -耗时 : 4
2019-04-24 20:26:13 -返回值 : com.bootdo.common.utils.PageUtils@29398f23
2019-04-24 20:26:13 -请求地址 : http://localhost:8081/main
2019-04-24 20:26:13 -HTTP METHOD : GET
2019-04-24 20:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 20:26:13 -参数 : []
2019-04-24 20:26:13 -耗时 : 1
2019-04-24 20:26:13 -返回值 : main
2019-04-24 20:26:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 20:26:16 -==> Parameters: 1(Long)
2019-04-24 20:26:16 -<==      Total: 93
2019-04-24 20:26:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-24 20:26:16 -HTTP METHOD : GET
2019-04-24 20:26:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-24 20:26:16 -参数 : []
2019-04-24 20:26:16 -耗时 : 1
2019-04-24 20:26:16 -返回值 : charts/tableDD
2019-04-24 20:26:19 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 20:26:19 -HTTP METHOD : GET
2019-04-24 20:26:19 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 20:26:19 -参数 : []
2019-04-24 20:26:19 -耗时 : 1
2019-04-24 20:26:19 -返回值 : charts/countMM
2019-04-24 20:26:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 20:26:19 -HTTP METHOD : GET
2019-04-24 20:26:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 20:26:19 -参数 : [userType]
2019-04-24 20:26:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 20:26:19 -==> Parameters: userType(String)
2019-04-24 20:26:19 -<==      Total: 4
2019-04-24 20:26:19 -耗时 : 4
2019-04-24 20:26:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 20:26:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 20:26:20 -HTTP METHOD : GET
2019-04-24 20:26:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 20:26:20 -参数 : []
2019-04-24 20:26:20 -耗时 : 0
2019-04-24 20:26:20 -返回值 : charts/tableElecMM
2019-04-24 20:26:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 20:26:21 -HTTP METHOD : GET
2019-04-24 20:26:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 20:26:21 -参数 : []
2019-04-24 20:26:21 -耗时 : 1
2019-04-24 20:26:21 -返回值 : charts/tableWaterMM
2019-04-24 20:40:07 -Validating all active sessions...
2019-04-24 20:40:07 -Finished session validation.  [2] sessions were stopped.
2019-04-24 20:40:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1726]
2019-04-24 21:10:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2159]
2019-04-24 21:40:07 -Validating all active sessions...
2019-04-24 21:40:07 -Finished session validation.  [1] sessions were stopped.
2019-04-24 21:40:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2591]
2019-04-24 21:41:16 -Starting BootdoApplication on ZJZL-20180906VX with PID 11680 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-24 21:41:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-24 21:41:16 -The following profiles are active: dev
2019-04-24 21:41:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 21:41:16 CST 2019]; root of context hierarchy
2019-04-24 21:41:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-24 21:41:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-24 21:41:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-24 21:41:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-24 21:41:23 -Tomcat initialized with port(s): 8081 (http)
2019-04-24 21:41:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-24 21:41:23 -Starting service [Tomcat]
2019-04-24 21:41:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-24 21:41:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-24 21:41:23 -Initializing Spring embedded WebApplicationContext
2019-04-24 21:41:23 -Root WebApplicationContext: initialization completed in 6681 ms
2019-04-24 21:41:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-24 21:41:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-24 21:41:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-24 21:41:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-24 21:41:24 -Filter xssFilter was not registered (disabled)
2019-04-24 21:41:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-24 21:41:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-24 21:41:24 -Servlet statViewServlet mapped to [/druid/*]
2019-04-24 21:41:24 -Servlet dispatcherServlet mapped to [/]
2019-04-24 21:41:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 21:41:16 CST 2019]; root of context hierarchy
2019-04-24 21:41:26 -Using default implementation for ThreadExecutor
2019-04-24 21:41:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-24 21:41:27 -Quartz Scheduler v.2.2.1 created.
2019-04-24 21:41:27 -RAMJobStore initialized.
2019-04-24 21:41:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-24 21:41:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-24 21:41:27 -Quartz scheduler version: 2.2.1
2019-04-24 21:41:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-04-24 21:41:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-24 21:41:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-24 21:41:29 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-24 21:41:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-24 21:41:29 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-24 21:41:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-24 21:41:29 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-24 21:41:29 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-24 21:41:29 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-24 21:41:29 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-24 21:41:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-24 21:41:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-24 21:41:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-24 21:41:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-24 21:41:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-24 21:41:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 21:41:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-24 21:41:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-24 21:41:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-24 21:41:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-24 21:41:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-24 21:41:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-24 21:41:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-24 21:41:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-24 21:41:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-24 21:41:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-24 21:41:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-24 21:41:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-24 21:41:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-24 21:41:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-24 21:41:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-24 21:41:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-24 21:41:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-24 21:41:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-24 21:41:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-24 21:41:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-24 21:41:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-24 21:41:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-24 21:41:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-24 21:41:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-24 21:41:29 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-24 21:41:29 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 21:41:29 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 21:41:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-24 21:41:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-24 21:41:29 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-24 21:41:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-24 21:41:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-24 21:41:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-24 21:41:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-24 21:41:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-24 21:41:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-24 21:41:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-24 21:41:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-24 21:41:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-24 21:41:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-24 21:41:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-24 21:41:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-24 21:41:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-24 21:41:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-24 21:41:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-24 21:41:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-24 21:41:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-24 21:41:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-24 21:41:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-24 21:41:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-24 21:41:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-24 21:41:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-24 21:41:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-24 21:41:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-24 21:41:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-24 21:41:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-24 21:41:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 21:41:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-24 21:41:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-24 21:41:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-24 21:41:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-24 21:41:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-24 21:41:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-24 21:41:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-24 21:41:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-24 21:41:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-24 21:41:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-24 21:41:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-24 21:41:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-24 21:41:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-24 21:41:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-24 21:41:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-24 21:41:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-24 21:41:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-24 21:41:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-24 21:41:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 21:41:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Apr 24 21:41:16 CST 2019]; root of context hierarchy
2019-04-24 21:41:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 21:41:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 21:41:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-24 21:41:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-24 21:41:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-24 21:41:33 -Registering beans for JMX exposure on startup
2019-04-24 21:41:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-24 21:41:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-24 21:41:33 -Starting beans in phase 2147483647
2019-04-24 21:41:33 -Context refreshed
2019-04-24 21:41:33 -Found 1 custom documentation plugin(s)
2019-04-24 21:41:33 -Scanning for api listing references
2019-04-24 21:41:33 -Generating unique operation named: getCountDUsingPOST_1
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_1
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_2
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_3
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_1
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_2
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_2
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_2
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_4
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_5
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_2
2019-04-24 21:41:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_3
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_3
2019-04-24 21:41:34 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_3
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_6
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_7
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_2
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_4
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_4
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_4
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_8
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_9
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_3
2019-04-24 21:41:34 -Generating unique operation named: ElecUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_5
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_5
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_5
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_10
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_11
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_4
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_6
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_6
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_6
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_7
2019-04-24 21:41:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_7
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_12
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_13
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_5
2019-04-24 21:41:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_7
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_8
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_8
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_14
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_15
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_8
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_6
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_8
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_9
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_9
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_16
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_17
2019-04-24 21:41:34 -Generating unique operation named: saveUsingPOST_8
2019-04-24 21:41:34 -Generating unique operation named: updateUsingGET_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingHEAD_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPOST_9
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPUT_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingPATCH_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingDELETE_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-24 21:41:34 -Generating unique operation named: updateUsingTRACE_7
2019-04-24 21:41:34 -Generating unique operation named: addUsingGET_9
2019-04-24 21:41:34 -Generating unique operation named: editUsingGET_10
2019-04-24 21:41:34 -Generating unique operation named: infoUsingGET_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingPOST_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingPUT_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-24 21:41:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-24 21:41:34 -Generating unique operation named: listUsingGET_10
2019-04-24 21:41:34 -Generating unique operation named: removeUsingPOST_18
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_19
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_10
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_11
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_20
2019-04-24 21:41:35 -Generating unique operation named: welcomeUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_10
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_11
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_12
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_21
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_10
2019-04-24 21:41:35 -Generating unique operation named: treeUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: treeUsingGET_2
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_11
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_11
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_12
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_13
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_22
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_23
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingGET_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingHEAD_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPUT_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPATCH_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingDELETE_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-24 21:41:35 -Generating unique operation named: updateUsingTRACE_8
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_12
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_13
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_14
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_24
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_25
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingGET_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingHEAD_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_13
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPUT_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPATCH_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingDELETE_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-24 21:41:35 -Generating unique operation named: updateUsingTRACE_9
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_13
2019-04-24 21:41:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_14
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_15
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_13
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_14
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_14
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_16
2019-04-24 21:41:35 -Generating unique operation named: listUsingHEAD_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingPOST_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingPUT_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingPATCH_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingDELETE_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingOPTIONS_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingTRACE_1
2019-04-24 21:41:35 -Generating unique operation named: countDDUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: exportDDUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-24 21:41:35 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-24 21:41:35 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-24 21:41:35 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-24 21:41:35 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-24 21:41:35 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_14
2019-04-24 21:41:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_15
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_17
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_26
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_15
2019-04-24 21:41:35 -Generating unique operation named: treeUsingGET_3
2019-04-24 21:41:35 -Generating unique operation named: treeViewUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_15
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_15
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_16
2019-04-24 21:41:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_18
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_27
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_28
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_16
2019-04-24 21:41:35 -Generating unique operation named: updateUsingGET_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingHEAD_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_16
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPUT_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPATCH_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingDELETE_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-24 21:41:35 -Generating unique operation named: updateUsingTRACE_10
2019-04-24 21:41:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_16
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_17
2019-04-24 21:41:35 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_19
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_29
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_30
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_17
2019-04-24 21:41:35 -Generating unique operation named: updateUsingGET_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingHEAD_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_17
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPUT_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPATCH_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingDELETE_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-24 21:41:35 -Generating unique operation named: updateUsingTRACE_11
2019-04-24 21:41:35 -Generating unique operation named: addUsingGET_17
2019-04-24 21:41:35 -Generating unique operation named: editUsingGET_18
2019-04-24 21:41:35 -Generating unique operation named: listUsingGET_20
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_31
2019-04-24 21:41:35 -Generating unique operation named: removeUsingPOST_32
2019-04-24 21:41:35 -Generating unique operation named: saveUsingPOST_18
2019-04-24 21:41:35 -Generating unique operation named: updateUsingGET_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingHEAD_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPOST_18
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPUT_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingPATCH_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingDELETE_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-24 21:41:35 -Generating unique operation named: updateUsingTRACE_12
2019-04-24 21:41:35 -Starting Quartz Scheduler now
2019-04-24 21:41:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-24 21:41:35 -Starting...
2019-04-24 21:41:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-24 21:41:35 -Started.
2019-04-24 21:41:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-24 21:41:36 -Using a shared selector for servlet write/read
2019-04-24 21:41:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-24 21:41:36 -Started BootdoApplication in 20.804 seconds (JVM running for 21.569)
2019-04-24 21:41:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-24 21:41:36 -==> Parameters: 
2019-04-24 21:41:36 -<==      Total: 1
2019-04-24 21:41:53 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-24 21:41:53 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-24 21:41:53 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-04-24 21:41:54 -Enabling session validation scheduler...
2019-04-24 21:41:54 -请求地址 : http://localhost:8081/login;JSESSIONID=9cdc1fa2-7c56-4c00-930a-72329e96d49b
2019-04-24 21:41:54 -HTTP METHOD : GET
2019-04-24 21:41:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 21:41:54 -参数 : [{}]
2019-04-24 21:41:54 -耗时 : 7
2019-04-24 21:41:54 -返回值 : login
2019-04-24 21:41:56 -请求地址 : http://localhost:8081/getVerify
2019-04-24 21:41:56 -HTTP METHOD : GET
2019-04-24 21:41:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-24 21:41:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d9d9bb4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@635a7877]
2019-04-24 21:42:06 -8883
2019-04-24 21:42:06 -耗时 : 10346
2019-04-24 21:42:06 -返回值 : null
2019-04-24 21:42:06 -请求地址 : http://localhost:8081/login
2019-04-24 21:42:06 -HTTP METHOD : GET
2019-04-24 21:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-24 21:42:06 -参数 : [{}]
2019-04-24 21:42:06 -耗时 : 1
2019-04-24 21:42:06 -返回值 : login
2019-04-24 21:42:11 -请求地址 : http://localhost:8081/login
2019-04-24 21:42:11 -HTTP METHOD : POST
2019-04-24 21:42:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-24 21:42:11 -参数 : [admin, 111111, 8883, org.apache.shiro.web.servlet.ShiroHttpServletRequest@24c5bba5]
2019-04-24 21:42:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-24 21:42:12 -==> Parameters: admin(String)
2019-04-24 21:42:12 -<==      Total: 1
2019-04-24 21:42:12 -耗时 : 229
2019-04-24 21:42:12 -返回值 : {msg=操作成功, code=0}
2019-04-24 21:42:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-24 21:42:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 21:42:12 -==> Parameters: 1(Long), admin(String), 登录(String), 230(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-24 21:42:12.212(Timestamp)
2019-04-24 21:42:12 -<==    Updates: 1
2019-04-24 21:42:12 -请求地址 : http://localhost:8081/index
2019-04-24 21:42:12 -HTTP METHOD : GET
2019-04-24 21:42:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-24 21:42:12 -参数 : [{}]
2019-04-24 21:42:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-24 21:42:12 -==> Parameters: 1(Long)
2019-04-24 21:42:12 -<==      Total: 49
2019-04-24 21:42:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-24 21:42:12 -==> Parameters: 138(Long)
2019-04-24 21:42:12 -<==      Total: 1
2019-04-24 21:42:12 -耗时 : 297
2019-04-24 21:42:12 -返回值 : index_v1
2019-04-24 21:42:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 21:42:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 297(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-24 21:42:12.745(Timestamp)
2019-04-24 21:42:12 -<==    Updates: 1
2019-04-24 21:42:13 -请求地址 : http://localhost:8081/main
2019-04-24 21:42:13 -HTTP METHOD : GET
2019-04-24 21:42:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 21:42:13 -参数 : []
2019-04-24 21:42:13 -耗时 : 1
2019-04-24 21:42:13 -返回值 : main
2019-04-24 21:42:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-24 21:42:13 -HTTP METHOD : GET
2019-04-24 21:42:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-24 21:42:13 -参数 : []
2019-04-24 21:42:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-24 21:42:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-24 21:42:13 -<==      Total: 0
2019-04-24 21:42:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-24 21:42:13 -==> Parameters: 1(Long), 0(String)
2019-04-24 21:42:13 -<==      Total: 1
2019-04-24 21:42:13 -耗时 : 75
2019-04-24 21:42:13 -返回值 : com.bootdo.common.utils.PageUtils@1827ef37
2019-04-24 21:42:13 -请求地址 : http://localhost:8081/main
2019-04-24 21:42:13 -HTTP METHOD : GET
2019-04-24 21:42:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-24 21:42:13 -参数 : []
2019-04-24 21:42:13 -耗时 : 0
2019-04-24 21:42:13 -返回值 : main
2019-04-24 21:42:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-24 21:42:16 -==> Parameters: 1(Long)
2019-04-24 21:42:16 -<==      Total: 93
2019-04-24 21:42:17 -请求地址 : http://localhost:8081/charts/countMM
2019-04-24 21:42:17 -HTTP METHOD : GET
2019-04-24 21:42:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-24 21:42:17 -参数 : []
2019-04-24 21:42:17 -耗时 : 10
2019-04-24 21:42:17 -返回值 : charts/countMM
2019-04-24 21:42:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-24 21:42:17 -HTTP METHOD : GET
2019-04-24 21:42:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-24 21:42:17 -参数 : [userType]
2019-04-24 21:42:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-24 21:42:17 -==> Parameters: userType(String)
2019-04-24 21:42:17 -<==      Total: 4
2019-04-24 21:42:17 -耗时 : 78
2019-04-24 21:42:17 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-24 21:42:26 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:42:26 -HTTP METHOD : GET
2019-04-24 21:42:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:42:26 -参数 : []
2019-04-24 21:42:26 -耗时 : 10
2019-04-24 21:42:26 -返回值 : charts/tableElecMM
2019-04-24 21:42:27 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:42:27 -HTTP METHOD : GET
2019-04-24 21:42:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:42:27 -参数 : []
2019-04-24 21:42:27 -耗时 : 10
2019-04-24 21:42:27 -返回值 : charts/tableWaterMM
2019-04-24 21:42:30 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-24 21:42:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-24 21:42:33 -HTTP METHOD : GET
2019-04-24 21:42:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-24 21:42:33 -参数 : []
2019-04-24 21:42:33 -耗时 : 0
2019-04-24 21:42:33 -返回值 : system/dept/deptTree
2019-04-24 21:42:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-24 21:42:33 -HTTP METHOD : GET
2019-04-24 21:42:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-24 21:42:33 -参数 : []
2019-04-24 21:42:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-24 21:42:33 -==> Parameters: 
2019-04-24 21:42:33 -<==      Total: 3
2019-04-24 21:42:33 -耗时 : 33
2019-04-24 21:42:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-24 21:42:35 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-24 21:42:35 -HTTP METHOD : POST
2019-04-24 21:42:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-24 21:42:35 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@194d2088, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@ec8a2ab, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@194d2088, com.bootdo.water.vo.WaterVo@ec8a2ab]
2019-04-24 21:42:35 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-24 21:42:35 -==> Parameters: 2019-03(String), 2(String)
2019-04-24 21:42:35 -<==      Total: 2
2019-04-24 21:42:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 21:42:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-24 21:42:35.945(Timestamp)
2019-04-24 21:42:35 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$d7f59206.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-04-24 21:42:36 -<==    Updates: 1
2019-04-24 21:42:38 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-24 21:42:38 -HTTP METHOD : POST
2019-04-24 21:42:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-24 21:42:38 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7b3e2ad1, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@15551e0a, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@7b3e2ad1, com.bootdo.water.vo.WaterVo@15551e0a]
2019-04-24 21:42:38 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-24 21:42:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-24 21:42:38 -<==      Total: 2
2019-04-24 21:42:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 21:42:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-24 21:42:38.573(Timestamp)
2019-04-24 21:42:38 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$d7f59206.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-04-24 21:42:38 -<==    Updates: 1
2019-04-24 21:42:39 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-24 21:42:39 -HTTP METHOD : POST
2019-04-24 21:42:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-24 21:42:39 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@550d4b52, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@795e8a1e, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@550d4b52, com.bootdo.water.vo.WaterVo@795e8a1e]
2019-04-24 21:42:39 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-24 21:42:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-24 21:42:39 -<==      Total: 2
2019-04-24 21:42:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-24 21:42:39 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$d7f59206.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-24 21:42:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-24 21:42:39.877(Timestamp)
2019-04-24 21:42:39 -<==    Updates: 1
2019-04-24 21:43:37 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:37 -HTTP METHOD : GET
2019-04-24 21:43:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:37 -参数 : []
2019-04-24 21:43:37 -耗时 : 15
2019-04-24 21:43:37 -返回值 : charts/tableHeatMM
2019-04-24 21:43:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:43:37 -HTTP METHOD : GET
2019-04-24 21:43:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:43:37 -参数 : []
2019-04-24 21:43:37 -耗时 : 0
2019-04-24 21:43:37 -返回值 : charts/tableElecMM
2019-04-24 21:43:37 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:37 -HTTP METHOD : GET
2019-04-24 21:43:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:37 -参数 : []
2019-04-24 21:43:37 -耗时 : 1
2019-04-24 21:43:37 -返回值 : charts/tableHeatMM
2019-04-24 21:43:38 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:43:38 -HTTP METHOD : GET
2019-04-24 21:43:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:43:38 -参数 : []
2019-04-24 21:43:38 -耗时 : 2
2019-04-24 21:43:38 -返回值 : charts/tableWaterMM
2019-04-24 21:43:39 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:39 -HTTP METHOD : GET
2019-04-24 21:43:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:39 -参数 : []
2019-04-24 21:43:39 -耗时 : 1
2019-04-24 21:43:39 -返回值 : charts/tableHeatMM
2019-04-24 21:43:39 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:43:39 -HTTP METHOD : GET
2019-04-24 21:43:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:43:39 -参数 : []
2019-04-24 21:43:39 -耗时 : 1
2019-04-24 21:43:39 -返回值 : charts/tableElecMM
2019-04-24 21:43:39 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:39 -HTTP METHOD : GET
2019-04-24 21:43:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:39 -参数 : []
2019-04-24 21:43:39 -耗时 : 0
2019-04-24 21:43:39 -返回值 : charts/tableHeatMM
2019-04-24 21:43:40 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:43:40 -HTTP METHOD : GET
2019-04-24 21:43:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:43:40 -参数 : []
2019-04-24 21:43:40 -耗时 : 0
2019-04-24 21:43:40 -返回值 : charts/tableWaterMM
2019-04-24 21:43:40 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:40 -HTTP METHOD : GET
2019-04-24 21:43:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:40 -参数 : []
2019-04-24 21:43:40 -耗时 : 1
2019-04-24 21:43:40 -返回值 : charts/tableHeatMM
2019-04-24 21:43:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:43:41 -HTTP METHOD : GET
2019-04-24 21:43:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:43:41 -参数 : []
2019-04-24 21:43:41 -耗时 : 1
2019-04-24 21:43:41 -返回值 : charts/tableElecMM
2019-04-24 21:43:41 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:41 -HTTP METHOD : GET
2019-04-24 21:43:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:41 -参数 : []
2019-04-24 21:43:41 -耗时 : 0
2019-04-24 21:43:41 -返回值 : charts/tableHeatMM
2019-04-24 21:43:41 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:43:41 -HTTP METHOD : GET
2019-04-24 21:43:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:43:41 -参数 : []
2019-04-24 21:43:41 -耗时 : 1
2019-04-24 21:43:41 -返回值 : charts/tableWaterMM
2019-04-24 21:43:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:43 -HTTP METHOD : GET
2019-04-24 21:43:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:43 -参数 : []
2019-04-24 21:43:43 -耗时 : 0
2019-04-24 21:43:43 -返回值 : charts/tableHeatMM
2019-04-24 21:43:44 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:44 -HTTP METHOD : GET
2019-04-24 21:43:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:44 -参数 : []
2019-04-24 21:43:44 -耗时 : 1
2019-04-24 21:43:44 -返回值 : charts/tableHeatMM
2019-04-24 21:43:45 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:43:45 -HTTP METHOD : GET
2019-04-24 21:43:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:43:45 -参数 : []
2019-04-24 21:43:45 -耗时 : 0
2019-04-24 21:43:45 -返回值 : charts/tableElecMM
2019-04-24 21:43:45 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:45 -HTTP METHOD : GET
2019-04-24 21:43:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:45 -参数 : []
2019-04-24 21:43:45 -耗时 : 0
2019-04-24 21:43:45 -返回值 : charts/tableHeatMM
2019-04-24 21:43:46 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:43:46 -HTTP METHOD : GET
2019-04-24 21:43:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:43:46 -参数 : []
2019-04-24 21:43:46 -耗时 : 0
2019-04-24 21:43:46 -返回值 : charts/tableWaterMM
2019-04-24 21:43:46 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-24 21:43:46 -HTTP METHOD : GET
2019-04-24 21:43:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-24 21:43:46 -参数 : []
2019-04-24 21:43:46 -耗时 : 1
2019-04-24 21:43:46 -返回值 : charts/tableHeatMM
2019-04-24 21:43:46 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-24 21:43:46 -HTTP METHOD : GET
2019-04-24 21:43:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-24 21:43:46 -参数 : []
2019-04-24 21:43:46 -耗时 : 0
2019-04-24 21:43:46 -返回值 : charts/tableElecMM
2019-04-24 21:43:57 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-24 21:43:57 -HTTP METHOD : GET
2019-04-24 21:43:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-24 21:43:57 -参数 : []
2019-04-24 21:43:57 -耗时 : 1
2019-04-24 21:43:57 -返回值 : charts/tableWaterMM
